<?xml version="1.0" encoding="ISO-8859-1"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:atl="http://www.eclipse.org/gmt/2005/ATL" xmlns:ocl="http://www.eclipse.org/gmt/2005/OCL">
  <atl:Module location="11:1-42:2" name="Tree2List">
    <commentsBefore>-- @name Tree structure to List structure (using ATL Resolve Algorithm)</commentsBefore>
    <commentsBefore>-- @version 1.0</commentsBefore>
    <commentsBefore>-- @domains </commentsBefore>
    <commentsBefore>-- @authors Cyril Faure, Freddy Allilaire</commentsBefore>
    <commentsBefore>-- @date 01/07/2007</commentsBefore>
    <commentsBefore>-- @description &quot;toy example&quot; of model transformation usually made with a DFS (Depth First Search) imperative algorithms</commentsBefore>
    <commentsBefore>-- @see http://en.wikipedia.org/wiki/Depth-first_search</commentsBefore>
    <commentsBefore>-- @path MMTree=/Tree2List/metamodels/MMTree.ecore</commentsBefore>
    <commentsBefore>-- @path MMElementList=/Tree2List/metamodels/MMElementList.ecore</commentsBefore>
    <libraries location="14:1-14:17" name="Lib4MMTree">
      <commentsAfter>-- we want to process the tree via DFS and create an ordered list containing :</commentsAfter>
      <commentsAfter>-- all big leafs, then all medium leafs, then all small leafs. We add the</commentsAfter>
      <commentsAfter>-- constraint we want all three &quot;sublists&quot; to be ordered on the DFS traversal order</commentsAfter>
      <commentsAfter>-- Note : the nodes (other than the tree root) are not kept in the destination model</commentsAfter>
      <commentsAfter>-- Rule to transform &quot;Tree Node Root&quot; in &quot;Element List Root&quot;</commentsAfter>
    </libraries>
    <inModels location="12:37-12:51" name="aTree" metamodel="/2"/>
    <outModels location="12:8-12:31" name="elmList" metamodel="/1"/>
    <elements xsi:type="atl:MatchedRule" location="22:1-32:2" name="TreeNodeRoot2RootElement">
      <commentsBefore>-- we want to process the tree via DFS and create an ordered list containing :</commentsBefore>
      <commentsBefore>-- all big leafs, then all medium leafs, then all small leafs. We add the</commentsBefore>
      <commentsBefore>-- constraint we want all three &quot;sublists&quot; to be ordered on the DFS traversal order</commentsBefore>
      <commentsBefore>-- Note : the nodes (other than the tree root) are not kept in the destination model</commentsBefore>
      <commentsBefore>-- Rule to transform &quot;Tree Node Root&quot; in &quot;Element List Root&quot;</commentsBefore>
      <commentsAfter>-- Rule to transform Leaf to CommonElement</commentsAfter>
      <outPattern location="25:2-31:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="26:3-31:4" varName="lstRt">
          <type xsi:type="ocl:OclModelElement" location="26:11-26:36" name="RootElement" model="/1"/>
          <bindings location="27:4-27:19" propertyName="name">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="27:12-27:19" name="name">
              <source xsi:type="ocl:VariableExp" location="27:12-27:14" referredVariable="/0/@elements.0/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="28:4-28:37" propertyName="elements">
            <commentsAfter>-- reference copy,</commentsAfter>
            <commentsAfter>-- Correspondance &quot;Leaf to CommonElement&quot; will be made thanks to a traceability link.</commentsAfter>
            <commentsAfter>-- Traceability links record correspondences between source and target elements established during transformation execution.</commentsAfter>
            <value xsi:type="ocl:OperationCallExp" location="28:16-28:37" operationName="getLeavesInOrder">
              <commentsAfter>-- reference copy,</commentsAfter>
              <commentsAfter>-- Correspondance &quot;Leaf to CommonElement&quot; will be made thanks to a traceability link.</commentsAfter>
              <commentsAfter>-- Traceability links record correspondences between source and target elements established during transformation execution.</commentsAfter>
              <source xsi:type="ocl:VariableExp" location="28:16-28:18" referredVariable="/0/@elements.0/@inPattern/@elements.0"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="23:2-24:41">
        <elements xsi:type="atl:SimpleInPatternElement" location="24:3-24:19" varName="rt" variableExp="/0/@elements.0/@inPattern/@filter/@source /0/@elements.0/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.0/@outPattern/@elements.0/@bindings.1/@value/@source">
          <commentsBefore>-- should be unique</commentsBefore>
          <type xsi:type="ocl:OclModelElement" location="24:8-24:19" name="Node" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperationCallExp" location="24:21-24:40" operationName="isTreeNodeRoot">
          <source xsi:type="ocl:VariableExp" location="24:21-24:23" referredVariable="/0/@elements.0/@inPattern/@elements.0"/>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="35:1-42:2" name="Leaf2CommonElement">
      <commentsBefore>-- Rule to transform Leaf to CommonElement</commentsBefore>
      <outPattern location="38:2-41:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="39:3-41:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="39:7-39:34" name="CommonElement" model="/1"/>
          <bindings location="40:4-40:18" propertyName="name">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="40:12-40:18" name="name">
              <source xsi:type="ocl:VariableExp" location="40:12-40:13" referredVariable="/0/@elements.1/@inPattern/@elements.0"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="36:2-37:18">
        <elements xsi:type="atl:SimpleInPatternElement" location="37:3-37:18" varName="s" variableExp="/0/@elements.1/@outPattern/@elements.0/@bindings.0/@value/@source">
          <type xsi:type="ocl:OclModelElement" location="37:7-37:18" name="Leaf" model="/2"/>
        </elements>
      </inPattern>
    </elements>
  </atl:Module>
  <ocl:OclModel location="12:18-12:31" name="MMElementList" elements="/0/@elements.0/@outPattern/@elements.0/@type /0/@elements.1/@outPattern/@elements.0/@type" model="/0/@outModels.0"/>
  <ocl:OclModel location="12:45-12:51" name="MMTree" elements="/0/@elements.0/@inPattern/@elements.0/@type /0/@elements.1/@inPattern/@elements.0/@type" model="/0/@inModels.0"/>
</xmi:XMI>
