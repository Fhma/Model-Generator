<?xml version="1.0" encoding="ISO-8859-1"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:atl="http://www.eclipse.org/gmt/2005/ATL" xmlns:ocl="http://www.eclipse.org/gmt/2005/OCL">
  <atl:Module location="1:1-933:2" name="MOF2UML">
    <commentsAfter>-- Rule 'AliasType'</commentsAfter>
    <commentsAfter>--rule AliasType {</commentsAfter>
    <commentsAfter>--	from</commentsAfter>
    <commentsAfter>--		ma : MOF!AliasType</commentsAfter>
    <commentsAfter>--	to</commentsAfter>
    <commentsAfter>--		ud : UML!DataType (</commentsAfter>
    <commentsAfter>--			stereotype &lt;- 'alias'</commentsAfter>
    <commentsAfter>--		)</commentsAfter>
    <commentsAfter>--}</commentsAfter>
    <commentsAfter>-- Rule 'CollectionType'</commentsAfter>
    <commentsAfter>--rule CollectionType {</commentsAfter>
    <commentsAfter>--	from</commentsAfter>
    <commentsAfter>--		mc : MOF!CollectionType</commentsAfter>
    <commentsAfter>--	to</commentsAfter>
    <commentsAfter>--		uc : UML!Class (</commentsAfter>
    <commentsAfter>--			stereotype &lt;- 'collection',</commentsAfter>
    <commentsAfter>--			type &lt;- mc.type,</commentsAfter>
    <commentsAfter>--			multiplicity &lt;- um</commentsAfter>
    <commentsAfter>--		),</commentsAfter>
    <commentsAfter>--		um : UML!Multiplicity (</commentsAfter>
    <commentsAfter>--			range &lt;- Set{ur}</commentsAfter>
    <commentsAfter>--		),</commentsAfter>
    <commentsAfter>--		ur : UML!MultiplicityRange (</commentsAfter>
    <commentsAfter>--			lower &lt;- mc.multiplicity.lower,</commentsAfter>
    <commentsAfter>--			upper &lt;- mc.multiplicity.upper,</commentsAfter>
    <commentsAfter>--			multiplicity &lt;- um</commentsAfter>
    <commentsAfter>--		)</commentsAfter>
    <commentsAfter>--}</commentsAfter>
    <libraries location="5:1-5:14" name="strings">
      <commentsAfter>-------------------------------------------------------------------------------</commentsAfter>
      <commentsAfter>-- HELPERS --------------------------------------------------------------------</commentsAfter>
      <commentsAfter>-------------------------------------------------------------------------------</commentsAfter>
      <commentsAfter>-- This helper returns a MOF!Class that is considered as the reference Class</commentsAfter>
      <commentsAfter>-- for the generation of unique target elements: the model and the possible</commentsAfter>
      <commentsAfter>-- stereotypes.</commentsAfter>
      <commentsAfter>-- CONTEXT: thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	MOF!Class</commentsAfter>
    </libraries>
    <inModels location="2:23-2:31" name="IN" metamodel="/2"/>
    <outModels location="2:8-2:17" name="OUT" metamodel="/1"/>
    <elements xsi:type="atl:Helper" location="17:1-18:58">
      <commentsBefore>-------------------------------------------------------------------------------</commentsBefore>
      <commentsBefore>-- HELPERS --------------------------------------------------------------------</commentsBefore>
      <commentsBefore>-------------------------------------------------------------------------------</commentsBefore>
      <commentsBefore>-- This helper returns a MOF!Class that is considered as the reference Class</commentsBefore>
      <commentsBefore>-- for the generation of unique target elements: the model and the possible</commentsBefore>
      <commentsBefore>-- stereotypes.</commentsBefore>
      <commentsBefore>-- CONTEXT: thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	MOF!Class</commentsBefore>
      <commentsAfter>-- This helper returns a clustered MOF!Import that is considered as the</commentsAfter>
      <commentsAfter>-- reference Import for the generation of the 'clustered' stereotype.</commentsAfter>
      <commentsAfter>-- CONTEXT: thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Sequence(MOF!Import)</commentsAfter>
      <definition location="17:8-18:57">
        <feature xsi:type="ocl:Attribute" location="17:13-18:57" name="firstClass">
          <initExpression xsi:type="ocl:CollectionOperationCallExp" location="18:2-18:57" operationName="first">
            <source xsi:type="ocl:CollectionOperationCallExp" location="18:2-18:48" operationName="asSequence">
              <source xsi:type="ocl:OperationCallExp" location="18:2-18:34" operationName="allInstancesFrom">
                <source xsi:type="ocl:OclModelElement" location="18:2-18:11" name="Class" model="/2"/>
                <arguments xsi:type="ocl:StringExp" location="18:29-18:33" stringSymbol="IN"/>
              </source>
            </source>
          </initExpression>
          <type xsi:type="ocl:OclModelElement" location="17:26-17:35" name="Class" model="/2"/>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="24:1-29:4">
      <commentsBefore>-- This helper returns a clustered MOF!Import that is considered as the</commentsBefore>
      <commentsBefore>-- reference Import for the generation of the 'clustered' stereotype.</commentsBefore>
      <commentsBefore>-- CONTEXT: thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Sequence(MOF!Import)</commentsBefore>
      <commentsAfter>-- This helper returns an unclustered  MOF!Import that is considered as the</commentsAfter>
      <commentsAfter>-- reference Import for the generation of the 'import' stereotype.</commentsAfter>
      <commentsAfter>-- CONTEXT: thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Set(MOF!Import)</commentsAfter>
      <definition location="24:8-29:3">
        <feature xsi:type="ocl:Attribute" location="24:13-29:3" name="firstClustered">
          <initExpression xsi:type="ocl:SequenceExp" location="25:2-29:3">
            <elements xsi:type="ocl:CollectionOperationCallExp" location="26:3-28:27" operationName="first">
              <source xsi:type="ocl:CollectionOperationCallExp" location="26:3-28:18" operationName="asSequence">
                <source xsi:type="ocl:IteratorExp" location="26:3-27:31" name="select">
                  <source xsi:type="ocl:OperationCallExp" location="26:3-26:36" operationName="allInstancesFrom">
                    <source xsi:type="ocl:OclModelElement" location="26:3-26:13" name="Import" model="/2"/>
                    <arguments xsi:type="ocl:StringExp" location="26:31-26:35" stringSymbol="IN"/>
                  </source>
                  <body xsi:type="ocl:NavigationOrAttributeCallExp" location="27:17-27:30" name="isClustered">
                    <source xsi:type="ocl:VariableExp" location="27:17-27:18" referredVariable="/0/@elements.1/@definition/@feature/@initExpression/@elements.0/@source/@source/@iterators.0"/>
                  </body>
                  <iterators location="27:13-27:14" varName="e" variableExp="/0/@elements.1/@definition/@feature/@initExpression/@elements.0/@source/@source/@body/@source"/>
                </source>
              </source>
            </elements>
          </initExpression>
          <type xsi:type="ocl:SequenceType" location="24:30-24:50">
            <elementType xsi:type="ocl:OclModelElement" location="24:39-24:49" name="Import" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="35:1-40:4">
      <commentsBefore>-- This helper returns an unclustered  MOF!Import that is considered as the</commentsBefore>
      <commentsBefore>-- reference Import for the generation of the 'import' stereotype.</commentsBefore>
      <commentsBefore>-- CONTEXT: thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Set(MOF!Import)</commentsBefore>
      <commentsAfter>-- This helper returns a MOF!Package that is considered as the reference</commentsAfter>
      <commentsAfter>-- Package for the generation of the 'import' stereotype.</commentsAfter>
      <commentsAfter>-- CONTEXT: thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Set(MOF!Package)</commentsAfter>
      <definition location="35:8-40:3">
        <feature xsi:type="ocl:Attribute" location="35:13-40:3" name="firstImport">
          <initExpression xsi:type="ocl:SequenceExp" location="36:2-40:3">
            <elements xsi:type="ocl:CollectionOperationCallExp" location="37:3-39:27" operationName="first">
              <source xsi:type="ocl:CollectionOperationCallExp" location="37:3-39:18" operationName="asSequence">
                <source xsi:type="ocl:IteratorExp" location="37:3-38:35" name="select">
                  <source xsi:type="ocl:OperationCallExp" location="37:3-37:36" operationName="allInstancesFrom">
                    <source xsi:type="ocl:OclModelElement" location="37:3-37:13" name="Import" model="/2"/>
                    <arguments xsi:type="ocl:StringExp" location="37:31-37:35" stringSymbol="IN"/>
                  </source>
                  <body xsi:type="ocl:OperatorCallExp" location="38:17-38:34" operationName="not">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="38:21-38:34" name="isClustered">
                      <source xsi:type="ocl:VariableExp" location="38:21-38:22" referredVariable="/0/@elements.2/@definition/@feature/@initExpression/@elements.0/@source/@source/@iterators.0"/>
                    </source>
                  </body>
                  <iterators location="38:13-38:14" varName="e" variableExp="/0/@elements.2/@definition/@feature/@initExpression/@elements.0/@source/@source/@body/@source/@source"/>
                </source>
              </source>
            </elements>
          </initExpression>
          <type xsi:type="ocl:SequenceType" location="35:27-35:47">
            <elementType xsi:type="ocl:OclModelElement" location="35:36-35:46" name="Import" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="46:1-49:4">
      <commentsBefore>-- This helper returns a MOF!Package that is considered as the reference</commentsBefore>
      <commentsBefore>-- Package for the generation of the 'import' stereotype.</commentsBefore>
      <commentsBefore>-- CONTEXT: thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Set(MOF!Package)</commentsBefore>
      <commentsAfter>-- This helper returns the UML!OrderingKind that corresponds to the</commentsAfter>
      <commentsAfter>-- non undefined MOF!ScopeKind of the contextual MOF!ModelElement.</commentsAfter>
      <commentsAfter>-- The helper returns the '#ordered' or '#unordered' value depending on the</commentsAfter>
      <commentsAfter>-- value of the MOF 'isOrdered' boolean attribute.</commentsAfter>
      <commentsAfter>--</commentsAfter>
      <commentsAfter>-- WARNING:	the contextual MOF!ModelElement must be of either a</commentsAfter>
      <commentsAfter>-- MOF!StructuralFeature or a MOF!AssociationEnd element.</commentsAfter>
      <commentsAfter>--</commentsAfter>
      <commentsAfter>-- CONTEXT: MOF!ModelElement</commentsAfter>
      <commentsAfter>-- RETURN:	UML!OrderingKind</commentsAfter>
      <definition location="46:8-49:3">
        <feature xsi:type="ocl:Attribute" location="46:13-49:3" name="firstMetamodel">
          <initExpression xsi:type="ocl:SequenceExp" location="47:2-49:3">
            <elements xsi:type="ocl:CollectionOperationCallExp" location="48:3-48:60" operationName="first">
              <source xsi:type="ocl:CollectionOperationCallExp" location="48:3-48:51" operationName="asSequence">
                <source xsi:type="ocl:OperationCallExp" location="48:3-48:37" operationName="allInstancesFrom">
                  <source xsi:type="ocl:OclModelElement" location="48:3-48:14" name="Package" model="/2"/>
                  <arguments xsi:type="ocl:StringExp" location="48:32-48:36" stringSymbol="IN"/>
                </source>
              </source>
            </elements>
          </initExpression>
          <type xsi:type="ocl:SequenceType" location="46:30-46:51">
            <elementType xsi:type="ocl:OclModelElement" location="46:39-46:50" name="Package" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="61:1-67:8">
      <commentsBefore>-- This helper returns the UML!OrderingKind that corresponds to the</commentsBefore>
      <commentsBefore>-- non undefined MOF!ScopeKind of the contextual MOF!ModelElement.</commentsBefore>
      <commentsBefore>-- The helper returns the '#ordered' or '#unordered' value depending on the</commentsBefore>
      <commentsBefore>-- value of the MOF 'isOrdered' boolean attribute.</commentsBefore>
      <commentsBefore>--</commentsBefore>
      <commentsBefore>-- WARNING:	the contextual MOF!ModelElement must be of either a</commentsBefore>
      <commentsBefore>-- MOF!StructuralFeature or a MOF!AssociationEnd element.</commentsBefore>
      <commentsBefore>--</commentsBefore>
      <commentsBefore>-- CONTEXT: MOF!ModelElement</commentsBefore>
      <commentsBefore>-- RETURN:	UML!OrderingKind</commentsBefore>
      <commentsAfter>-- This helper returns the UML!OrderingKind that corresponds to the</commentsAfter>
      <commentsAfter>-- MOF!ScopeKind of the contextual MOF!ModelElement.</commentsAfter>
      <commentsAfter>-- If the multiplicity  attribute of the contextual ModelElement, or its</commentsAfter>
      <commentsAfter>-- isOrdered attribute is undefined, the helper returns 'ok_unordered'.</commentsAfter>
      <commentsAfter>-- Otherwise, the helper retuns the value computed by getOrdering().</commentsAfter>
      <commentsAfter>--</commentsAfter>
      <commentsAfter>-- WARNING:	the contextual MOF!ModelElement must be of either a</commentsAfter>
      <commentsAfter>-- MOF!StructuralFeature or a MOF!AssociationEnd element.</commentsAfter>
      <commentsAfter>--</commentsAfter>
      <commentsAfter>-- CONTEXT: MOF!ModelElement</commentsAfter>
      <commentsAfter>-- RETURN:	UML!OrderingKind</commentsAfter>
      <definition location="61:8-67:7">
        <feature xsi:type="ocl:Operation" location="61:38-67:7" name="getOrdering">
          <returnType xsi:type="ocl:OclModelElement" location="61:54-61:70" name="OrderingKind" model="/1"/>
          <body xsi:type="ocl:IfExp" location="62:2-67:7">
            <thenExpression xsi:type="ocl:EnumLiteralExp" location="64:3-64:14" name="ok_ordered"/>
            <condition xsi:type="ocl:NavigationOrAttributeCallExp" location="62:5-62:32" name="isOrdered">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="62:5-62:22" name="multiplicity">
                <source xsi:type="ocl:VariableExp" location="62:5-62:9" referredVariable="/3"/>
              </source>
            </condition>
            <elseExpression xsi:type="ocl:EnumLiteralExp" location="66:3-66:16" name="ok_unordered"/>
          </body>
        </feature>
        <context_ location="61:8-61:32">
          <context_ xsi:type="ocl:OclModelElement" location="61:16-61:32" name="ModelElement" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="80:1-91:8">
      <commentsBefore>-- This helper returns the UML!OrderingKind that corresponds to the</commentsBefore>
      <commentsBefore>-- MOF!ScopeKind of the contextual MOF!ModelElement.</commentsBefore>
      <commentsBefore>-- If the multiplicity  attribute of the contextual ModelElement, or its</commentsBefore>
      <commentsBefore>-- isOrdered attribute is undefined, the helper returns 'ok_unordered'.</commentsBefore>
      <commentsBefore>-- Otherwise, the helper retuns the value computed by getOrdering().</commentsBefore>
      <commentsBefore>--</commentsBefore>
      <commentsBefore>-- WARNING:	the contextual MOF!ModelElement must be of either a</commentsBefore>
      <commentsBefore>-- MOF!StructuralFeature or a MOF!AssociationEnd element.</commentsBefore>
      <commentsBefore>--</commentsBefore>
      <commentsBefore>-- CONTEXT: MOF!ModelElement</commentsBefore>
      <commentsBefore>-- RETURN:	UML!OrderingKind</commentsBefore>
      <commentsAfter>-- This helper returns the UML!Visibility that corresponds to the</commentsAfter>
      <commentsAfter>-- non undefined MOF!Visibility of the contextual MOF!ModelElement.</commentsAfter>
      <commentsAfter>--</commentsAfter>
      <commentsAfter>-- WARNING:	the contextual MOF!ModelElement must be of either a MOF!Feature, a</commentsAfter>
      <commentsAfter>-- MOF!Import or a MOF!GeneralizableElement entity.</commentsAfter>
      <commentsAfter>--</commentsAfter>
      <commentsAfter>-- CONTEXT:	MOF!ModelElement</commentsAfter>
      <commentsAfter>-- RETURN:	UML!Visibility</commentsAfter>
      <definition location="80:8-91:7">
        <feature xsi:type="ocl:Operation" location="80:38-91:7" name="getUMLOrdering">
          <returnType xsi:type="ocl:OclModelElement" location="80:57-80:73" name="OrderingKind" model="/1"/>
          <body xsi:type="ocl:IfExp" location="81:2-91:7">
            <thenExpression xsi:type="ocl:EnumLiteralExp" location="83:3-83:16" name="ok_unordered"/>
            <condition xsi:type="ocl:OperationCallExp" location="81:5-81:39" operationName="oclIsUndefined">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="81:5-81:22" name="multiplicity">
                <source xsi:type="ocl:VariableExp" location="81:5-81:9" referredVariable="/4"/>
              </source>
            </condition>
            <elseExpression xsi:type="ocl:IfExp" location="85:3-90:8">
              <thenExpression xsi:type="ocl:EnumLiteralExp" location="87:4-87:17" name="ok_unordered"/>
              <condition xsi:type="ocl:OperationCallExp" location="85:6-85:50" operationName="oclIsUndefined">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="85:6-85:33" name="isOrdered">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="85:6-85:23" name="multiplicity">
                    <source xsi:type="ocl:VariableExp" location="85:6-85:10" referredVariable="/5"/>
                  </source>
                </source>
              </condition>
              <elseExpression xsi:type="ocl:OperationCallExp" location="89:4-89:22" operationName="getOrdering">
                <source xsi:type="ocl:VariableExp" location="89:4-89:8" referredVariable="/6"/>
              </elseExpression>
            </elseExpression>
          </body>
        </feature>
        <context_ location="80:8-80:32">
          <context_ xsi:type="ocl:OclModelElement" location="80:16-80:32" name="ModelElement" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="101:1-118:8">
      <commentsBefore>-- This helper returns the UML!Visibility that corresponds to the</commentsBefore>
      <commentsBefore>-- non undefined MOF!Visibility of the contextual MOF!ModelElement.</commentsBefore>
      <commentsBefore>--</commentsBefore>
      <commentsBefore>-- WARNING:	the contextual MOF!ModelElement must be of either a MOF!Feature, a</commentsBefore>
      <commentsBefore>-- MOF!Import or a MOF!GeneralizableElement entity.</commentsBefore>
      <commentsBefore>--</commentsBefore>
      <commentsBefore>-- CONTEXT:	MOF!ModelElement</commentsBefore>
      <commentsBefore>-- RETURN:	UML!Visibility</commentsBefore>
      <commentsAfter>-- This helper returns the UML!Visibility that corresponds to the</commentsAfter>
      <commentsAfter>-- MOF!Visibility of the contextual MOF!ModelElement.</commentsAfter>
      <commentsAfter>-- If the visibility of the contexual ModelElement is undefined, the helper</commentsAfter>
      <commentsAfter>-- returns 'vk_public', otherwise, it returns the value provided by</commentsAfter>
      <commentsAfter>-- getVisibility().</commentsAfter>
      <commentsAfter>--</commentsAfter>
      <commentsAfter>-- WARNING:	the contextual MOF!ModelElement must be of either a MOF!Feature, a</commentsAfter>
      <commentsAfter>-- MOF!Import or a MOF!GeneralizableElement entity.</commentsAfter>
      <commentsAfter>--</commentsAfter>
      <commentsAfter>-- CONTEXT:	MOF!ModelElement</commentsAfter>
      <commentsAfter>-- RETURN:	UML!Visibility</commentsAfter>
      <definition location="101:8-118:7">
        <feature xsi:type="ocl:Operation" location="101:38-118:7" name="getVisibility">
          <returnType xsi:type="ocl:OclModelElement" location="101:56-101:70" name="Visibility" model="/1"/>
          <body xsi:type="ocl:LetExp" location="102:2-118:7">
            <variable location="102:6-102:42" varName="v" variableExp="/0/@elements.6/@definition/@feature/@body/@in_/@condition/@source /0/@elements.6/@definition/@feature/@body/@in_/@elseExpression/@condition/@source /0/@elements.6/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@condition/@source">
              <type xsi:type="ocl:OclModelElement" location="102:10-102:24" name="Visibility" model="/2"/>
              <initExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="102:27-102:42" name="visibility">
                <source xsi:type="ocl:VariableExp" location="102:27-102:31" referredVariable="/7"/>
              </initExpression>
            </variable>
            <in_ xsi:type="ocl:IfExp" location="103:2-118:7">
              <thenExpression xsi:type="ocl:EnumLiteralExp" location="105:3-105:13" name="vk_public"/>
              <condition xsi:type="ocl:OperatorCallExp" location="103:5-103:20" operationName="=">
                <source xsi:type="ocl:VariableExp" location="103:5-103:6" referredVariable="/0/@elements.6/@definition/@feature/@body/@variable"/>
                <arguments xsi:type="ocl:EnumLiteralExp" location="103:9-103:20" name="public_vis"/>
              </condition>
              <elseExpression xsi:type="ocl:IfExp" location="107:3-117:8">
                <thenExpression xsi:type="ocl:EnumLiteralExp" location="109:4-109:17" name="vk_protected"/>
                <condition xsi:type="ocl:OperatorCallExp" location="107:6-107:24" operationName="=">
                  <source xsi:type="ocl:VariableExp" location="107:6-107:7" referredVariable="/0/@elements.6/@definition/@feature/@body/@variable"/>
                  <arguments xsi:type="ocl:EnumLiteralExp" location="107:10-107:24" name="protected_vis"/>
                </condition>
                <elseExpression xsi:type="ocl:IfExp" location="111:4-116:9">
                  <thenExpression xsi:type="ocl:EnumLiteralExp" location="113:5-113:18" name="vk_protected"/>
                  <condition xsi:type="ocl:OperatorCallExp" location="111:7-111:23" operationName="=">
                    <source xsi:type="ocl:VariableExp" location="111:7-111:8" referredVariable="/0/@elements.6/@definition/@feature/@body/@variable"/>
                    <arguments xsi:type="ocl:EnumLiteralExp" location="111:11-111:23" name="private_vis"/>
                  </condition>
                  <elseExpression xsi:type="ocl:EnumLiteralExp" location="115:5-115:15" name="vk_public">
                    <commentsBefore>-- default</commentsBefore>
                  </elseExpression>
                </elseExpression>
              </elseExpression>
            </in_>
          </body>
        </feature>
        <context_ location="101:8-101:32">
          <context_ xsi:type="ocl:OclModelElement" location="101:16-101:32" name="ModelElement" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="131:1-137:8">
      <commentsBefore>-- This helper returns the UML!Visibility that corresponds to the</commentsBefore>
      <commentsBefore>-- MOF!Visibility of the contextual MOF!ModelElement.</commentsBefore>
      <commentsBefore>-- If the visibility of the contexual ModelElement is undefined, the helper</commentsBefore>
      <commentsBefore>-- returns 'vk_public', otherwise, it returns the value provided by</commentsBefore>
      <commentsBefore>-- getVisibility().</commentsBefore>
      <commentsBefore>--</commentsBefore>
      <commentsBefore>-- WARNING:	the contextual MOF!ModelElement must be of either a MOF!Feature, a</commentsBefore>
      <commentsBefore>-- MOF!Import or a MOF!GeneralizableElement entity.</commentsBefore>
      <commentsBefore>--</commentsBefore>
      <commentsBefore>-- CONTEXT:	MOF!ModelElement</commentsBefore>
      <commentsBefore>-- RETURN:	UML!Visibility</commentsBefore>
      <commentsAfter>-- This helper returns the UML!ChangeableKind that corresponds to the</commentsAfter>
      <commentsAfter>-- non-undefined MOF!ChangeableKind of the contextual MOF!ModelElement.</commentsAfter>
      <commentsAfter>-- The helper returns the '#ck_changable' or '#ck_frozen' value depending on</commentsAfter>
      <commentsAfter>-- the value of the MOF 'isChangeable' boolean attribute.</commentsAfter>
      <commentsAfter>--</commentsAfter>
      <commentsAfter>-- WARNING:	the contextual MOF!ModelElement must be of either a</commentsAfter>
      <commentsAfter>-- MOF!StructuralFeature or a MOF!AssociationEnd element.</commentsAfter>
      <commentsAfter>--</commentsAfter>
      <commentsAfter>-- CONTEXT: MOF!ModelElement</commentsAfter>
      <commentsAfter>-- RETURN:	UML!ChangeableKind</commentsAfter>
      <definition location="131:8-137:7">
        <feature xsi:type="ocl:Operation" location="131:38-137:7" name="getUMLVisibility">
          <returnType xsi:type="ocl:OclModelElement" location="131:59-131:73" name="Visibility" model="/1"/>
          <body xsi:type="ocl:IfExp" location="132:2-137:7">
            <thenExpression xsi:type="ocl:EnumLiteralExp" location="134:3-134:13" name="vk_public"/>
            <condition xsi:type="ocl:OperationCallExp" location="132:5-132:37" operationName="oclIsUndefined">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="132:5-132:20" name="visibility">
                <source xsi:type="ocl:VariableExp" location="132:5-132:9" referredVariable="/8"/>
              </source>
            </condition>
            <elseExpression xsi:type="ocl:OperationCallExp" location="136:3-136:23" operationName="getVisibility">
              <source xsi:type="ocl:VariableExp" location="136:3-136:7" referredVariable="/9"/>
            </elseExpression>
          </body>
        </feature>
        <context_ location="131:8-131:32">
          <context_ xsi:type="ocl:OclModelElement" location="131:16-131:32" name="ModelElement" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="149:1-155:8">
      <commentsBefore>-- This helper returns the UML!ChangeableKind that corresponds to the</commentsBefore>
      <commentsBefore>-- non-undefined MOF!ChangeableKind of the contextual MOF!ModelElement.</commentsBefore>
      <commentsBefore>-- The helper returns the '#ck_changable' or '#ck_frozen' value depending on</commentsBefore>
      <commentsBefore>-- the value of the MOF 'isChangeable' boolean attribute.</commentsBefore>
      <commentsBefore>--</commentsBefore>
      <commentsBefore>-- WARNING:	the contextual MOF!ModelElement must be of either a</commentsBefore>
      <commentsBefore>-- MOF!StructuralFeature or a MOF!AssociationEnd element.</commentsBefore>
      <commentsBefore>--</commentsBefore>
      <commentsBefore>-- CONTEXT: MOF!ModelElement</commentsBefore>
      <commentsBefore>-- RETURN:	UML!ChangeableKind</commentsBefore>
      <commentsAfter>-- This helper returns the UML!ChangeableKind that corresponds to the</commentsAfter>
      <commentsAfter>-- MOF!ChangeableKind of the contextual MOF!ModelElement.</commentsAfter>
      <commentsAfter>-- If changeability of the contextual MOF!ModelElement is undefined, the helper</commentsAfter>
      <commentsAfter>-- returns the '#ck_changeable' default value. Otherwise, it returns the value</commentsAfter>
      <commentsAfter>-- computes by the getChangeability helper.</commentsAfter>
      <commentsAfter>--</commentsAfter>
      <commentsAfter>-- WARNING:	the contextual MOF!ModelElement must be of either a</commentsAfter>
      <commentsAfter>-- MOF!StructuralFeature or a MOF!AssociationEnd element.</commentsAfter>
      <commentsAfter>--</commentsAfter>
      <commentsAfter>-- CONTEXT: MOF!ModelElement</commentsAfter>
      <commentsAfter>-- RETURN:	UML!ChangeableKind</commentsAfter>
      <definition location="149:8-155:7">
        <feature xsi:type="ocl:Operation" location="149:38-155:7" name="getChangeability">
          <returnType xsi:type="ocl:OclModelElement" location="149:59-149:77" name="ChangeableKind" model="/1"/>
          <body xsi:type="ocl:IfExp" location="150:2-155:7">
            <thenExpression xsi:type="ocl:EnumLiteralExp" location="152:3-152:17" name="ck_changeable"/>
            <condition xsi:type="ocl:NavigationOrAttributeCallExp" location="150:5-150:22" name="isChangeable">
              <source xsi:type="ocl:VariableExp" location="150:5-150:9" referredVariable="/10"/>
            </condition>
            <elseExpression xsi:type="ocl:EnumLiteralExp" location="154:3-154:13" name="ck_frozen"/>
          </body>
        </feature>
        <context_ location="149:8-149:32">
          <context_ xsi:type="ocl:OclModelElement" location="149:16-149:32" name="ModelElement" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="168:1-175:8">
      <commentsBefore>-- This helper returns the UML!ChangeableKind that corresponds to the</commentsBefore>
      <commentsBefore>-- MOF!ChangeableKind of the contextual MOF!ModelElement.</commentsBefore>
      <commentsBefore>-- If changeability of the contextual MOF!ModelElement is undefined, the helper</commentsBefore>
      <commentsBefore>-- returns the '#ck_changeable' default value. Otherwise, it returns the value</commentsBefore>
      <commentsBefore>-- computes by the getChangeability helper.</commentsBefore>
      <commentsBefore>--</commentsBefore>
      <commentsBefore>-- WARNING:	the contextual MOF!ModelElement must be of either a</commentsBefore>
      <commentsBefore>-- MOF!StructuralFeature or a MOF!AssociationEnd element.</commentsBefore>
      <commentsBefore>--</commentsBefore>
      <commentsBefore>-- CONTEXT: MOF!ModelElement</commentsBefore>
      <commentsBefore>-- RETURN:	UML!ChangeableKind</commentsBefore>
      <commentsAfter>-- This helper returns the UML!ScopeKind that corresponds to the MOF!ScopeKind</commentsAfter>
      <commentsAfter>-- of the contextual MOF!Feature.</commentsAfter>
      <commentsAfter>-- CONTEXT: MOF!Feature</commentsAfter>
      <commentsAfter>-- RETURN:	UML!ScopeKind</commentsAfter>
      <definition location="168:8-175:7">
        <feature xsi:type="ocl:Operation" location="169:7-175:7" name="getUMLChangeability">
          <returnType xsi:type="ocl:OclModelElement" location="169:31-169:49" name="ChangeableKind" model="/1"/>
          <body xsi:type="ocl:IfExp" location="170:2-175:7">
            <thenExpression xsi:type="ocl:OperationCallExp" location="172:3-172:26" operationName="getChangeability">
              <source xsi:type="ocl:VariableExp" location="172:3-172:7" referredVariable="/12"/>
            </thenExpression>
            <condition xsi:type="ocl:OperatorCallExp" location="170:5-170:43" operationName="not">
              <source xsi:type="ocl:OperationCallExp" location="170:9-170:43" operationName="oclIsUndefined">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="170:9-170:26" name="isChangeable">
                  <source xsi:type="ocl:VariableExp" location="170:9-170:13" referredVariable="/11"/>
                </source>
              </source>
            </condition>
            <elseExpression xsi:type="ocl:EnumLiteralExp" location="174:3-174:17" name="ck_changeable"/>
          </body>
        </feature>
        <context_ location="168:8-168:32">
          <context_ xsi:type="ocl:OclModelElement" location="168:16-168:32" name="ModelElement" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="181:1-187:8">
      <commentsBefore>-- This helper returns the UML!ScopeKind that corresponds to the MOF!ScopeKind</commentsBefore>
      <commentsBefore>-- of the contextual MOF!Feature.</commentsBefore>
      <commentsBefore>-- CONTEXT: MOF!Feature</commentsBefore>
      <commentsBefore>-- RETURN:	UML!ScopeKind</commentsBefore>
      <commentsAfter>-------------------------------------------------------------------------------</commentsAfter>
      <commentsAfter>-- RULES ----------------------------------------------------------------------</commentsAfter>
      <commentsAfter>-------------------------------------------------------------------------------</commentsAfter>
      <commentsAfter>-- Rule 'Association'</commentsAfter>
      <commentsAfter>-- This rule generates a UML!Association, along with its associated</commentsAfter>
      <commentsAfter>-- UML!Generalizations from a MOF!Association.</commentsAfter>
      <commentsAfter>-- Most properties of the generated association are copied from the input MOF</commentsAfter>
      <commentsAfter>-- association properties. Its generalizations correspond to the Generalization</commentsAfter>
      <commentsAfter>-- that are generated by the rule, whereas its specializations correspond to</commentsAfter>
      <commentsAfter>-- the UML!Associations that are generated for the MOF!Associations that have</commentsAfter>
      <commentsAfter>-- the input association as supertype.</commentsAfter>
      <commentsAfter>-- A UML!Generalization is generated fore each supertype of the input</commentsAfter>
      <commentsAfter>-- MOF!Association. Its child corresponds to the generated UML association,</commentsAfter>
      <commentsAfter>-- whereas its parent corresponds to the UML!Association generated for the</commentsAfter>
      <commentsAfter>-- currently iterated supertype. Note that discriminator and powertype of the</commentsAfter>
      <commentsAfter>-- generated Generalizations are set to default values since MOF defines no</commentsAfter>
      <commentsAfter>-- corresponding properties.</commentsAfter>
      <definition location="181:8-187:7">
        <feature xsi:type="ocl:Operation" location="181:33-187:7" name="getUMLScope">
          <returnType xsi:type="ocl:OclModelElement" location="181:49-181:62" name="ScopeKind" model="/1"/>
          <body xsi:type="ocl:IfExp" location="182:2-187:7">
            <thenExpression xsi:type="ocl:EnumLiteralExp" location="184:3-184:15" name="sk_instance"/>
            <condition xsi:type="ocl:OperatorCallExp" location="182:5-182:33" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="182:5-182:15" name="scope">
                <source xsi:type="ocl:VariableExp" location="182:5-182:9" referredVariable="/13"/>
              </source>
              <arguments xsi:type="ocl:EnumLiteralExp" location="182:18-182:33" name="instance_level"/>
            </condition>
            <elseExpression xsi:type="ocl:EnumLiteralExp" location="186:3-186:17" name="sk_classifier"/>
          </body>
        </feature>
        <context_ location="181:8-181:27">
          <context_ xsi:type="ocl:OclModelElement" location="181:16-181:27" name="Feature" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="208:1-257:2" name="Association">
      <commentsBefore>-------------------------------------------------------------------------------</commentsBefore>
      <commentsBefore>-- RULES ----------------------------------------------------------------------</commentsBefore>
      <commentsBefore>-------------------------------------------------------------------------------</commentsBefore>
      <commentsBefore>-- Rule 'Association'</commentsBefore>
      <commentsBefore>-- This rule generates a UML!Association, along with its associated</commentsBefore>
      <commentsBefore>-- UML!Generalizations from a MOF!Association.</commentsBefore>
      <commentsBefore>-- Most properties of the generated association are copied from the input MOF</commentsBefore>
      <commentsBefore>-- association properties. Its generalizations correspond to the Generalization</commentsBefore>
      <commentsBefore>-- that are generated by the rule, whereas its specializations correspond to</commentsBefore>
      <commentsBefore>-- the UML!Associations that are generated for the MOF!Associations that have</commentsBefore>
      <commentsBefore>-- the input association as supertype.</commentsBefore>
      <commentsBefore>-- A UML!Generalization is generated fore each supertype of the input</commentsBefore>
      <commentsBefore>-- MOF!Association. Its child corresponds to the generated UML association,</commentsBefore>
      <commentsBefore>-- whereas its parent corresponds to the UML!Association generated for the</commentsBefore>
      <commentsBefore>-- currently iterated supertype. Note that discriminator and powertype of the</commentsBefore>
      <commentsBefore>-- generated Generalizations are set to default values since MOF defines no</commentsBefore>
      <commentsBefore>-- corresponding properties.</commentsBefore>
      <commentsAfter>-- Rule 'AssociationEnd'</commentsAfter>
      <commentsAfter>-- This rule generates a UML!AssociationEnd, along with its UML!Multiplicity,</commentsAfter>
      <commentsAfter>-- and the MultiplicityRange of this last, from a MOF!AssociationEnd.</commentsAfter>
      <commentsAfter>-- Most properties of the generated AssociationEnd are copied from those of</commentsAfter>
      <commentsAfter>-- the input MOF AssociationEnd. Its multiplicity reference points to the</commentsAfter>
      <commentsAfter>-- Multiplicity entity generated by the rule. The targetScope, qualifier and</commentsAfter>
      <commentsAfter>-- specification properties are set to default values (MOF does not define</commentsAfter>
      <commentsAfter>-- corresponding properties).</commentsAfter>
      <commentsAfter>-- The range of the generated Multiplicity element is computed from the</commentsAfter>
      <commentsAfter>-- multiplicity attribute of the input MOF!AssociationEnd.</commentsAfter>
      <outPattern location="211:2-256:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="212:3-234:4" varName="ua" variableExp="/0/@elements.11/@outPattern/@elements.1/@bindings.4/@value">
          <type xsi:type="ocl:OclModelElement" location="212:8-212:23" name="Association" model="/1"/>
          <bindings location="214:4-214:19" propertyName="name">
            <commentsBefore>-- Begin bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="214:12-214:19" name="name">
              <source xsi:type="ocl:VariableExp" location="214:12-214:14" referredVariable="/0/@elements.11/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="215:4-215:32" propertyName="constraint">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="215:18-215:32" name="constraints">
              <source xsi:type="ocl:VariableExp" location="215:18-215:20" referredVariable="/0/@elements.11/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="216:6-216:31" propertyName="namespace">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="216:19-216:31" name="container">
              <source xsi:type="ocl:VariableExp" location="216:19-216:21" referredVariable="/0/@elements.11/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="217:4-217:39" propertyName="visibility">
            <value xsi:type="ocl:OperationCallExp" location="217:18-217:39" operationName="getUMLVisibility">
              <source xsi:type="ocl:VariableExp" location="217:18-217:20" referredVariable="/0/@elements.11/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="229:4-229:31" propertyName="isAbstract">
            <commentsBefore>--			taggedValue &lt;-,</commentsBefore>
            <commentsBefore>--			asArgument &lt;-,</commentsBefore>
            <commentsBefore>--			clientDependency &lt;-,</commentsBefore>
            <commentsBefore>--			implementationLocation &lt;-,</commentsBefore>
            <commentsBefore>--			presentation &lt;-,</commentsBefore>
            <commentsBefore>--			supplierDependency &lt;-,</commentsBefore>
            <commentsBefore>--			templateParameter &lt;-,</commentsBefore>
            <commentsBefore>--			stereotype&lt;-,</commentsBefore>
            <commentsBefore>-- End of bindings inherited from ModelElement</commentsBefore>
            <commentsBefore>-- Begin bindings inherited from GeneralizableElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="229:18-229:31" name="isAbstract">
              <source xsi:type="ocl:VariableExp" location="229:18-229:20" referredVariable="/0/@elements.11/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="230:4-230:23" propertyName="isLeaf">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="230:14-230:23" name="isLeaf">
              <source xsi:type="ocl:VariableExp" location="230:14-230:16" referredVariable="/0/@elements.11/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="231:4-231:23" propertyName="isRoot">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="231:14-231:23" name="isRoot">
              <source xsi:type="ocl:VariableExp" location="231:14-231:16" referredVariable="/0/@elements.11/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="232:4-232:24" propertyName="generalization">
            <commentsAfter>-- End of bindings inherited from GeneralizableElement</commentsAfter>
            <value xsi:type="ocl:VariableExp" location="232:22-232:24" referredVariable="/0/@elements.11/@outPattern/@elements.1">
              <commentsAfter>-- End of bindings inherited from GeneralizableElement</commentsAfter>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:ForEachOutPatternElement" location="236:3-256:4" varName="mr" variableExp="/0/@elements.11/@outPattern/@elements.0/@bindings.7/@value">
          <type xsi:type="ocl:OclModelElement" location="236:17-236:35" name="Generalization" model="/1"/>
          <bindings location="238:4-238:19" propertyName="name">
            <commentsBefore>-- Begin bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="238:12-238:19" name="name">
              <source xsi:type="ocl:VariableExp" location="238:12-238:14" referredVariable="/0/@elements.11/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="239:4-239:59" propertyName="constraint">
            <value xsi:type="ocl:IteratorExp" location="239:18-239:59" name="collect">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="239:18-239:31" name="supertypes">
                <source xsi:type="ocl:VariableExp" location="239:18-239:20" referredVariable="/0/@elements.11/@inPattern/@elements.0"/>
              </source>
              <body xsi:type="ocl:NavigationOrAttributeCallExp" location="239:45-239:58" name="constraints">
                <source xsi:type="ocl:VariableExp" location="239:45-239:46" referredVariable="/0/@elements.11/@outPattern/@elements.1/@bindings.1/@value/@iterators.0"/>
              </body>
              <iterators location="239:41-239:42" varName="e" variableExp="/0/@elements.11/@outPattern/@elements.1/@bindings.1/@value/@body/@source"/>
            </value>
          </bindings>
          <bindings location="240:6-240:31" propertyName="namespace">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="240:19-240:31" name="container">
              <source xsi:type="ocl:VariableExp" location="240:19-240:21" referredVariable="/0/@elements.11/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="241:4-241:39" propertyName="visibility">
            <value xsi:type="ocl:OperationCallExp" location="241:18-241:39" operationName="getUMLVisibility">
              <source xsi:type="ocl:VariableExp" location="241:18-241:20" referredVariable="/0/@elements.11/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="252:4-252:15" propertyName="child">
            <commentsBefore>--			taggedValue &lt;-,</commentsBefore>
            <commentsBefore>--			asArgument &lt;-,</commentsBefore>
            <commentsBefore>--			clientDependency &lt;-,</commentsBefore>
            <commentsBefore>--			implementationLocation &lt;-,</commentsBefore>
            <commentsBefore>--			presentation &lt;-,</commentsBefore>
            <commentsBefore>--			supplierDependency &lt;-,</commentsBefore>
            <commentsBefore>--			templateParameter &lt;-,</commentsBefore>
            <commentsBefore>--			stereotype&lt;-,</commentsBefore>
            <commentsBefore>-- End of bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:VariableExp" location="252:13-252:15" referredVariable="/0/@elements.11/@outPattern/@elements.0"/>
          </bindings>
          <bindings location="253:4-253:15" propertyName="parent">
            <value xsi:type="ocl:VariableExp" location="253:14-253:15" referredVariable="/0/@elements.11/@outPattern/@elements.1/@iterator"/>
          </bindings>
          <bindings location="254:4-254:23" propertyName="discriminator">
            <value xsi:type="ocl:StringExp" location="254:21-254:23" stringSymbol=""/>
          </bindings>
          <bindings location="255:4-255:29" propertyName="powertype">
            <value xsi:type="ocl:OclUndefinedExp" location="255:17-255:29"/>
          </bindings>
          <collection xsi:type="ocl:NavigationOrAttributeCallExp" location="236:49-236:62" name="supertypes">
            <source xsi:type="ocl:VariableExp" location="236:49-236:51" referredVariable="/0/@elements.11/@inPattern/@elements.0"/>
          </collection>
          <iterator location="236:44-236:45" varName="e" variableExp="/0/@elements.11/@outPattern/@elements.1/@bindings.5/@value"/>
        </elements>
      </outPattern>
      <inPattern location="209:2-210:23">
        <elements xsi:type="atl:SimpleInPatternElement" location="210:3-210:23" varName="ma" variableExp="/0/@elements.11/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.11/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.11/@outPattern/@elements.0/@bindings.2/@value/@source /0/@elements.11/@outPattern/@elements.0/@bindings.3/@value/@source /0/@elements.11/@outPattern/@elements.0/@bindings.4/@value/@source /0/@elements.11/@outPattern/@elements.0/@bindings.5/@value/@source /0/@elements.11/@outPattern/@elements.0/@bindings.6/@value/@source /0/@elements.11/@outPattern/@elements.1/@collection/@source /0/@elements.11/@outPattern/@elements.1/@bindings.0/@value/@source /0/@elements.11/@outPattern/@elements.1/@bindings.1/@value/@source/@source /0/@elements.11/@outPattern/@elements.1/@bindings.2/@value/@source /0/@elements.11/@outPattern/@elements.1/@bindings.3/@value/@source">
          <type xsi:type="ocl:OclModelElement" location="210:8-210:23" name="Association" model="/2"/>
        </elements>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="269:1-321:2" name="AssociationEnd">
      <commentsBefore>-- Rule 'AssociationEnd'</commentsBefore>
      <commentsBefore>-- This rule generates a UML!AssociationEnd, along with its UML!Multiplicity,</commentsBefore>
      <commentsBefore>-- and the MultiplicityRange of this last, from a MOF!AssociationEnd.</commentsBefore>
      <commentsBefore>-- Most properties of the generated AssociationEnd are copied from those of</commentsBefore>
      <commentsBefore>-- the input MOF AssociationEnd. Its multiplicity reference points to the</commentsBefore>
      <commentsBefore>-- Multiplicity entity generated by the rule. The targetScope, qualifier and</commentsBefore>
      <commentsBefore>-- specification properties are set to default values (MOF does not define</commentsBefore>
      <commentsBefore>-- corresponding properties).</commentsBefore>
      <commentsBefore>-- The range of the generated Multiplicity element is computed from the</commentsBefore>
      <commentsBefore>-- multiplicity attribute of the input MOF!AssociationEnd.</commentsBefore>
      <commentsAfter>-- Rule 'Parameter'</commentsAfter>
      <commentsAfter>-- This rule generates a UML!Parameter from a MOF!Parameter.</commentsAfter>
      <commentsAfter>-- Properties of the generated Parameter are copied from those of the input</commentsAfter>
      <commentsAfter>-- Parameter, except the UML defaultValue attribute which has no MOF</commentsAfter>
      <commentsAfter>-- equivalent. It is therefore set to 'oclUndefined'.</commentsAfter>
      <outPattern location="272:2-320:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="273:3-310:4" varName="ua">
          <type xsi:type="ocl:OclModelElement" location="273:8-273:26" name="AssociationEnd" model="/1"/>
          <bindings location="275:4-275:19" propertyName="name">
            <commentsBefore>-- Begin bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="275:12-275:19" name="name">
              <source xsi:type="ocl:VariableExp" location="275:12-275:14" referredVariable="/0/@elements.12/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="276:4-276:32" propertyName="constraint">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="276:18-276:32" name="constraints">
              <source xsi:type="ocl:VariableExp" location="276:18-276:20" referredVariable="/0/@elements.12/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="289:4-289:31" propertyName="association">
            <commentsBefore>--		  	namespace &lt;- ma.container,</commentsBefore>
            <commentsBefore>--			visibility &lt;-,</commentsBefore>
            <commentsBefore>--			taggedValue &lt;-,</commentsBefore>
            <commentsBefore>--			asArgument &lt;-,</commentsBefore>
            <commentsBefore>--			clientDependency &lt;-,</commentsBefore>
            <commentsBefore>--			implementationLocation &lt;-,</commentsBefore>
            <commentsBefore>--			presentation &lt;-,</commentsBefore>
            <commentsBefore>--			supplierDependency &lt;-,</commentsBefore>
            <commentsBefore>--			templateParameter &lt;-,</commentsBefore>
            <commentsBefore>--			stereotype&lt;-,</commentsBefore>
            <commentsBefore>-- End of bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="289:19-289:31" name="container">
              <source xsi:type="ocl:VariableExp" location="289:19-289:21" referredVariable="/0/@elements.12/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="290:4-301:10" propertyName="aggregation">
            <value xsi:type="ocl:IfExp" location="291:5-301:10">
              <thenExpression xsi:type="ocl:EnumLiteralExp" location="293:6-293:14" name="ak_none"/>
              <condition xsi:type="ocl:OperatorCallExp" location="291:8-291:30" operationName="=">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="291:8-291:22" name="aggregation">
                  <source xsi:type="ocl:VariableExp" location="291:8-291:10" referredVariable="/0/@elements.12/@inPattern/@elements.0"/>
                </source>
                <arguments xsi:type="ocl:EnumLiteralExp" location="291:25-291:30" name="none"/>
              </condition>
              <elseExpression xsi:type="ocl:IfExp" location="295:6-300:11">
                <thenExpression xsi:type="ocl:EnumLiteralExp" location="297:7-297:20" name="ak_aggregate"/>
                <condition xsi:type="ocl:OperatorCallExp" location="295:9-295:33" operationName="=">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="295:9-295:23" name="aggregation">
                    <source xsi:type="ocl:VariableExp" location="295:9-295:11" referredVariable="/0/@elements.12/@inPattern/@elements.0"/>
                  </source>
                  <arguments xsi:type="ocl:EnumLiteralExp" location="295:26-295:33" name="shared"/>
                </condition>
                <elseExpression xsi:type="ocl:EnumLiteralExp" location="299:7-299:20" name="ak_composite">
                  <commentsBefore>-- ma.aggregation = #composite</commentsBefore>
                </elseExpression>
              </elseExpression>
            </value>
          </bindings>
          <bindings location="302:4-302:45" propertyName="changeability">
            <value xsi:type="ocl:OperationCallExp" location="302:21-302:45" operationName="getUMLChangeability">
              <source xsi:type="ocl:VariableExp" location="302:21-302:23" referredVariable="/0/@elements.12/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="303:4-303:35" propertyName="ordering">
            <value xsi:type="ocl:OperationCallExp" location="303:16-303:35" operationName="getUMLOrdering">
              <source xsi:type="ocl:VariableExp" location="303:16-303:18" referredVariable="/0/@elements.12/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="304:4-304:33" propertyName="isNavigable">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="304:19-304:33" name="isNavigable">
              <source xsi:type="ocl:VariableExp" location="304:19-304:21" referredVariable="/0/@elements.12/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="305:4-305:22" propertyName="multiplicity">
            <value xsi:type="ocl:VariableExp" location="305:20-305:22" referredVariable="/0/@elements.12/@outPattern/@elements.1"/>
          </bindings>
          <bindings location="306:4-306:31" propertyName="targetScope">
            <value xsi:type="ocl:EnumLiteralExp" location="306:19-306:31" name="sk_instance"/>
          </bindings>
          <bindings location="307:4-307:27" propertyName="qualifier">
            <value xsi:type="ocl:SequenceExp" location="307:17-307:27"/>
          </bindings>
          <bindings location="308:4-308:26" propertyName="specification">
            <value xsi:type="ocl:SetExp" location="308:21-308:26"/>
          </bindings>
          <bindings location="309:4-309:26" propertyName="participant">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="309:19-309:26" name="type">
              <source xsi:type="ocl:VariableExp" location="309:19-309:21" referredVariable="/0/@elements.12/@inPattern/@elements.0"/>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="312:3-314:4" varName="um" variableExp="/0/@elements.12/@outPattern/@elements.0/@bindings.7/@value /0/@elements.12/@outPattern/@elements.2/@bindings.2/@value">
          <type xsi:type="ocl:OclModelElement" location="312:8-312:24" name="Multiplicity" model="/1"/>
          <bindings location="313:4-313:20" propertyName="range">
            <value xsi:type="ocl:SetExp" location="313:13-313:20">
              <elements xsi:type="ocl:VariableExp" location="313:17-313:19" referredVariable="/0/@elements.12/@outPattern/@elements.2"/>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="316:3-320:4" varName="ur" variableExp="/0/@elements.12/@outPattern/@elements.1/@bindings.0/@value/@elements.0">
          <type xsi:type="ocl:OclModelElement" location="316:8-316:29" name="MultiplicityRange" model="/1"/>
          <bindings location="317:4-317:34" propertyName="lower">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="317:13-317:34" name="lower">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="317:13-317:28" name="multiplicity">
                <source xsi:type="ocl:VariableExp" location="317:13-317:15" referredVariable="/0/@elements.12/@inPattern/@elements.0"/>
              </source>
            </value>
          </bindings>
          <bindings location="318:4-318:34" propertyName="upper">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="318:13-318:34" name="upper">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="318:13-318:28" name="multiplicity">
                <source xsi:type="ocl:VariableExp" location="318:13-318:15" referredVariable="/0/@elements.12/@inPattern/@elements.0"/>
              </source>
            </value>
          </bindings>
          <bindings location="319:4-319:22" propertyName="multiplicity">
            <value xsi:type="ocl:VariableExp" location="319:20-319:22" referredVariable="/0/@elements.12/@outPattern/@elements.1"/>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="270:2-271:26">
        <elements xsi:type="atl:SimpleInPatternElement" location="271:3-271:26" varName="ma" variableExp="/0/@elements.12/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.12/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.12/@outPattern/@elements.0/@bindings.2/@value/@source /0/@elements.12/@outPattern/@elements.0/@bindings.3/@value/@condition/@source/@source /0/@elements.12/@outPattern/@elements.0/@bindings.3/@value/@elseExpression/@condition/@source/@source /0/@elements.12/@outPattern/@elements.0/@bindings.4/@value/@source /0/@elements.12/@outPattern/@elements.0/@bindings.5/@value/@source /0/@elements.12/@outPattern/@elements.0/@bindings.6/@value/@source /0/@elements.12/@outPattern/@elements.0/@bindings.11/@value/@source /0/@elements.12/@outPattern/@elements.2/@bindings.0/@value/@source/@source /0/@elements.12/@outPattern/@elements.2/@bindings.1/@value/@source/@source">
          <type xsi:type="ocl:OclModelElement" location="271:8-271:26" name="AssociationEnd" model="/2"/>
        </elements>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="328:1-368:2" name="Parameter">
      <commentsBefore>-- Rule 'Parameter'</commentsBefore>
      <commentsBefore>-- This rule generates a UML!Parameter from a MOF!Parameter.</commentsBefore>
      <commentsBefore>-- Properties of the generated Parameter are copied from those of the input</commentsBefore>
      <commentsBefore>-- Parameter, except the UML defaultValue attribute which has no MOF</commentsBefore>
      <commentsBefore>-- equivalent. It is therefore set to 'oclUndefined'.</commentsBefore>
      <commentsAfter>-- Rule 'Attribute'</commentsAfter>
      <commentsAfter>-- This rule generates a UML!Attribute, along with its UML!Multiplicity, and</commentsAfter>
      <commentsAfter>-- the UML!MultiplicityRange of this last, from a MOF!Attribute.</commentsAfter>
      <commentsAfter>-- Most properties of the generated Attribute are copied from those of the</commentsAfter>
      <commentsAfter>-- input MOF Attribute. Its multiplicity reference points to the Multiplicity</commentsAfter>
      <commentsAfter>-- entity generated by the rule. The targetScope and initialValue properties</commentsAfter>
      <commentsAfter>-- are set to default values (MOF does not define corresponding properties):</commentsAfter>
      <commentsAfter>-- 'sk_instance' for targetScope and 'oclUndefined' for initialValue.</commentsAfter>
      <commentsAfter>-- The range of the generated Multiplicity element is computed from the</commentsAfter>
      <commentsAfter>-- multiplicity attribute of the input MOF!Attribute.</commentsAfter>
      <outPattern location="331:2-367:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="332:3-367:4" varName="up">
          <type xsi:type="ocl:OclModelElement" location="332:8-332:21" name="Parameter" model="/1"/>
          <bindings location="334:4-334:19" propertyName="name">
            <commentsBefore>-- Begin bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="334:12-334:19" name="name">
              <source xsi:type="ocl:VariableExp" location="334:12-334:14" referredVariable="/0/@elements.13/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="335:4-335:32" propertyName="constraint">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="335:18-335:32" name="constraints">
              <source xsi:type="ocl:VariableExp" location="335:18-335:20" referredVariable="/0/@elements.13/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="348:4-364:10" propertyName="kind">
            <commentsBefore>--		  	namespace &lt;- mp.container,</commentsBefore>
            <commentsBefore>--			visibility &lt;-,</commentsBefore>
            <commentsBefore>--			taggedValue &lt;-,</commentsBefore>
            <commentsBefore>--			implementationLocation &lt;-,</commentsBefore>
            <commentsBefore>--			presentation &lt;-,</commentsBefore>
            <commentsBefore>--			supplierDependency &lt;-,</commentsBefore>
            <commentsBefore>--			templateParameter &lt;-,</commentsBefore>
            <commentsBefore>--			asArgument &lt;-,</commentsBefore>
            <commentsBefore>--			clientDependency &lt;-,</commentsBefore>
            <commentsBefore>--			stereotype&lt;-,</commentsBefore>
            <commentsBefore>-- End of bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:IfExp" location="349:5-364:10">
              <thenExpression xsi:type="ocl:EnumLiteralExp" location="351:6-351:13" name="pdk_in"/>
              <condition xsi:type="ocl:OperatorCallExp" location="349:8-349:30" operationName="=">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="349:8-349:20" name="direction">
                  <source xsi:type="ocl:VariableExp" location="349:8-349:10" referredVariable="/0/@elements.13/@inPattern/@elements.0"/>
                </source>
                <arguments xsi:type="ocl:EnumLiteralExp" location="349:23-349:30" name="in_dir"/>
              </condition>
              <elseExpression xsi:type="ocl:IfExp" location="353:6-363:11">
                <thenExpression xsi:type="ocl:EnumLiteralExp" location="355:7-355:17" name="pdk_inout"/>
                <condition xsi:type="ocl:OperatorCallExp" location="353:9-353:34" operationName="=">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="353:9-353:21" name="direction">
                    <source xsi:type="ocl:VariableExp" location="353:9-353:11" referredVariable="/0/@elements.13/@inPattern/@elements.0"/>
                  </source>
                  <arguments xsi:type="ocl:EnumLiteralExp" location="353:24-353:34" name="inout_dir"/>
                </condition>
                <elseExpression xsi:type="ocl:IfExp" location="357:7-362:12">
                  <thenExpression xsi:type="ocl:EnumLiteralExp" location="359:8-359:16" name="pdk_out"/>
                  <condition xsi:type="ocl:OperatorCallExp" location="357:10-357:33" operationName="=">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="357:10-357:22" name="direction">
                      <source xsi:type="ocl:VariableExp" location="357:10-357:12" referredVariable="/0/@elements.13/@inPattern/@elements.0"/>
                    </source>
                    <arguments xsi:type="ocl:EnumLiteralExp" location="357:25-357:33" name="out_dir"/>
                  </condition>
                  <elseExpression xsi:type="ocl:EnumLiteralExp" location="361:8-361:19" name="pdk_return">
                    <commentsBefore>-- mp.direction = #return_dir</commentsBefore>
                  </elseExpression>
                </elseExpression>
              </elseExpression>
            </value>
          </bindings>
          <bindings location="365:4-365:19" propertyName="type">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="365:12-365:19" name="type">
              <source xsi:type="ocl:VariableExp" location="365:12-365:14" referredVariable="/0/@elements.13/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="366:4-366:32" propertyName="defaultValue">
            <value xsi:type="ocl:OclUndefinedExp" location="366:20-366:32"/>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="329:2-330:21">
        <elements xsi:type="atl:SimpleInPatternElement" location="330:3-330:21" varName="mp" variableExp="/0/@elements.13/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.13/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.13/@outPattern/@elements.0/@bindings.2/@value/@condition/@source/@source /0/@elements.13/@outPattern/@elements.0/@bindings.2/@value/@elseExpression/@condition/@source/@source /0/@elements.13/@outPattern/@elements.0/@bindings.2/@value/@elseExpression/@elseExpression/@condition/@source/@source /0/@elements.13/@outPattern/@elements.0/@bindings.3/@value/@source">
          <type xsi:type="ocl:OclModelElement" location="330:8-330:21" name="Parameter" model="/2"/>
        </elements>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="380:1-425:2" name="Attribute">
      <commentsBefore>-- Rule 'Attribute'</commentsBefore>
      <commentsBefore>-- This rule generates a UML!Attribute, along with its UML!Multiplicity, and</commentsBefore>
      <commentsBefore>-- the UML!MultiplicityRange of this last, from a MOF!Attribute.</commentsBefore>
      <commentsBefore>-- Most properties of the generated Attribute are copied from those of the</commentsBefore>
      <commentsBefore>-- input MOF Attribute. Its multiplicity reference points to the Multiplicity</commentsBefore>
      <commentsBefore>-- entity generated by the rule. The targetScope and initialValue properties</commentsBefore>
      <commentsBefore>-- are set to default values (MOF does not define corresponding properties):</commentsBefore>
      <commentsBefore>-- 'sk_instance' for targetScope and 'oclUndefined' for initialValue.</commentsBefore>
      <commentsBefore>-- The range of the generated Multiplicity element is computed from the</commentsBefore>
      <commentsBefore>-- multiplicity attribute of the input MOF!Attribute.</commentsBefore>
      <commentsAfter>-- Rule 'Class'</commentsAfter>
      <commentsAfter>-- This rule generates a UML!Class, along with its associated</commentsAfter>
      <commentsAfter>-- UML!Generalizations, the UML!Model, and the 'metamodel', 'import', and</commentsAfter>
      <commentsAfter>-- 'clustering' UML!Stereotype from the reference MOF!Class provided by the</commentsAfter>
      <commentsAfter>-- firstClass helper.</commentsAfter>
      <commentsAfter>-- Most properties of the generated Class are copied from the input MOF!Class</commentsAfter>
      <commentsAfter>-- properties. Its generalizations correspond to the Generalization that are</commentsAfter>
      <commentsAfter>-- generated by the rule, whereas its specializations correspond to the</commentsAfter>
      <commentsAfter>-- UML!Classes that are generated for the MOF!Classes that have the input Class</commentsAfter>
      <commentsAfter>-- as supertype. The powertypeRange and isActive properties, which have no</commentsAfter>
      <commentsAfter>-- equivalent in MOF, are set to default values.</commentsAfter>
      <commentsAfter>-- A UML!Generalization is generated fore each supertype of the input</commentsAfter>
      <commentsAfter>-- MOF!Class. Its child corresponds to the generated UML class, whereas its</commentsAfter>
      <commentsAfter>-- parent corresponds to the UML!Class generated for the currently iterated</commentsAfter>
      <commentsAfter>-- supertype. Note that discriminator and powertype of the generated</commentsAfter>
      <commentsAfter>-- Generalizations are set to default values since MOF defines no corresponding</commentsAfter>
      <commentsAfter>-- properties.</commentsAfter>
      <commentsAfter>-- The generated Model is simply initialized with a default name value.</commentsAfter>
      <commentsAfter>-- The different UML!Stereotype are generated if their respective reference</commentsAfter>
      <commentsAfter>-- Sequences are not empty. Each stereotype is initialized with its name</commentsAfter>
      <commentsAfter>-- ('clustering', 'import' or 'metamodel') and the name of the base class it is</commentsAfter>
      <commentsAfter>-- associated with (respectively Dependcy for the 2 first ones, and Package).</commentsAfter>
      <commentsAfter>-- Their namespace is set to the UML!Model ('mo') generated by the rule.</commentsAfter>
      <outPattern location="383:2-424:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="384:3-414:4" varName="ua">
          <type xsi:type="ocl:OclModelElement" location="384:8-384:21" name="Attribute" model="/1"/>
          <bindings location="386:4-386:19" propertyName="name">
            <commentsBefore>-- Begin bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="386:12-386:19" name="name">
              <source xsi:type="ocl:VariableExp" location="386:12-386:14" referredVariable="/0/@elements.14/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="387:4-387:32" propertyName="constraint">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="387:18-387:32" name="constraints">
              <source xsi:type="ocl:VariableExp" location="387:18-387:20" referredVariable="/0/@elements.14/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="389:4-389:39" propertyName="visibility">
            <commentsBefore>--		  	namespace &lt;- ma.container,</commentsBefore>
            <value xsi:type="ocl:OperationCallExp" location="389:18-389:39" operationName="getUMLVisibility">
              <source xsi:type="ocl:VariableExp" location="389:18-389:20" referredVariable="/0/@elements.14/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="401:4-401:34" propertyName="ownerScope">
            <commentsBefore>--			taggedValue &lt;-,</commentsBefore>
            <commentsBefore>--			asArgument &lt;-,</commentsBefore>
            <commentsBefore>--			clientDependency &lt;-,</commentsBefore>
            <commentsBefore>--			implementationLocation &lt;-,</commentsBefore>
            <commentsBefore>--			presentation &lt;-,</commentsBefore>
            <commentsBefore>--			supplierDependency &lt;-,</commentsBefore>
            <commentsBefore>--			templateParameter &lt;-,</commentsBefore>
            <commentsBefore>--			stereotype&lt;-,</commentsBefore>
            <commentsBefore>-- End of bindings inherited from ModelElement</commentsBefore>
            <commentsBefore>-- Begin bindings inherited from Feature</commentsBefore>
            <value xsi:type="ocl:OperationCallExp" location="401:18-401:34" operationName="getUMLScope">
              <source xsi:type="ocl:VariableExp" location="401:18-401:20" referredVariable="/0/@elements.14/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="402:4-402:25" propertyName="owner">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="402:13-402:25" name="container">
              <source xsi:type="ocl:VariableExp" location="402:13-402:15" referredVariable="/0/@elements.14/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="406:4-406:45" propertyName="changeability">
            <commentsBefore>-- End of bindings inherited from Feature</commentsBefore>
            <commentsBefore>-- Begin bindings inherited from StructuralFeature</commentsBefore>
            <value xsi:type="ocl:OperationCallExp" location="406:21-406:45" operationName="getUMLChangeability">
              <source xsi:type="ocl:VariableExp" location="406:21-406:23" referredVariable="/0/@elements.14/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="407:4-407:22" propertyName="multiplicity">
            <value xsi:type="ocl:VariableExp" location="407:20-407:22" referredVariable="/0/@elements.14/@outPattern/@elements.1"/>
          </bindings>
          <bindings location="408:4-408:35" propertyName="ordering">
            <value xsi:type="ocl:OperationCallExp" location="408:16-408:35" operationName="getUMLOrdering">
              <source xsi:type="ocl:VariableExp" location="408:16-408:18" referredVariable="/0/@elements.14/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="409:4-409:19" propertyName="type">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="409:12-409:19" name="type">
              <source xsi:type="ocl:VariableExp" location="409:12-409:14" referredVariable="/0/@elements.14/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="410:4-410:31" propertyName="targetScope">
            <value xsi:type="ocl:EnumLiteralExp" location="410:19-410:31" name="sk_instance"/>
          </bindings>
          <bindings location="413:4-413:32" propertyName="initialValue">
            <commentsBefore>-- End of bindings inherited from StructuralFeature</commentsBefore>
            <value xsi:type="ocl:OclUndefinedExp" location="413:20-413:32"/>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="416:3-418:4" varName="um" variableExp="/0/@elements.14/@outPattern/@elements.0/@bindings.6/@value /0/@elements.14/@outPattern/@elements.2/@bindings.2/@value">
          <type xsi:type="ocl:OclModelElement" location="416:8-416:24" name="Multiplicity" model="/1"/>
          <bindings location="417:4-417:20" propertyName="range">
            <value xsi:type="ocl:SetExp" location="417:13-417:20">
              <elements xsi:type="ocl:VariableExp" location="417:17-417:19" referredVariable="/0/@elements.14/@outPattern/@elements.2"/>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="420:3-424:4" varName="ur" variableExp="/0/@elements.14/@outPattern/@elements.1/@bindings.0/@value/@elements.0">
          <type xsi:type="ocl:OclModelElement" location="420:8-420:29" name="MultiplicityRange" model="/1"/>
          <bindings location="421:4-421:34" propertyName="lower">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="421:13-421:34" name="lower">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="421:13-421:28" name="multiplicity">
                <source xsi:type="ocl:VariableExp" location="421:13-421:15" referredVariable="/0/@elements.14/@inPattern/@elements.0"/>
              </source>
            </value>
          </bindings>
          <bindings location="422:4-422:34" propertyName="upper">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="422:13-422:34" name="upper">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="422:13-422:28" name="multiplicity">
                <source xsi:type="ocl:VariableExp" location="422:13-422:15" referredVariable="/0/@elements.14/@inPattern/@elements.0"/>
              </source>
            </value>
          </bindings>
          <bindings location="423:4-423:22" propertyName="multiplicity">
            <value xsi:type="ocl:VariableExp" location="423:20-423:22" referredVariable="/0/@elements.14/@outPattern/@elements.1"/>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="381:2-382:21">
        <elements xsi:type="atl:SimpleInPatternElement" location="382:3-382:21" varName="ma" variableExp="/0/@elements.14/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.14/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.14/@outPattern/@elements.0/@bindings.2/@value/@source /0/@elements.14/@outPattern/@elements.0/@bindings.3/@value/@source /0/@elements.14/@outPattern/@elements.0/@bindings.4/@value/@source /0/@elements.14/@outPattern/@elements.0/@bindings.5/@value/@source /0/@elements.14/@outPattern/@elements.0/@bindings.7/@value/@source /0/@elements.14/@outPattern/@elements.0/@bindings.8/@value/@source /0/@elements.14/@outPattern/@elements.2/@bindings.0/@value/@source/@source /0/@elements.14/@outPattern/@elements.2/@bindings.1/@value/@source/@source">
          <type xsi:type="ocl:OclModelElement" location="382:8-382:21" name="Attribute" model="/2"/>
        </elements>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="450:1-631:2" name="FirstClass">
      <commentsBefore>-- Rule 'Class'</commentsBefore>
      <commentsBefore>-- This rule generates a UML!Class, along with its associated</commentsBefore>
      <commentsBefore>-- UML!Generalizations, the UML!Model, and the 'metamodel', 'import', and</commentsBefore>
      <commentsBefore>-- 'clustering' UML!Stereotype from the reference MOF!Class provided by the</commentsBefore>
      <commentsBefore>-- firstClass helper.</commentsBefore>
      <commentsBefore>-- Most properties of the generated Class are copied from the input MOF!Class</commentsBefore>
      <commentsBefore>-- properties. Its generalizations correspond to the Generalization that are</commentsBefore>
      <commentsBefore>-- generated by the rule, whereas its specializations correspond to the</commentsBefore>
      <commentsBefore>-- UML!Classes that are generated for the MOF!Classes that have the input Class</commentsBefore>
      <commentsBefore>-- as supertype. The powertypeRange and isActive properties, which have no</commentsBefore>
      <commentsBefore>-- equivalent in MOF, are set to default values.</commentsBefore>
      <commentsBefore>-- A UML!Generalization is generated fore each supertype of the input</commentsBefore>
      <commentsBefore>-- MOF!Class. Its child corresponds to the generated UML class, whereas its</commentsBefore>
      <commentsBefore>-- parent corresponds to the UML!Class generated for the currently iterated</commentsBefore>
      <commentsBefore>-- supertype. Note that discriminator and powertype of the generated</commentsBefore>
      <commentsBefore>-- Generalizations are set to default values since MOF defines no corresponding</commentsBefore>
      <commentsBefore>-- properties.</commentsBefore>
      <commentsBefore>-- The generated Model is simply initialized with a default name value.</commentsBefore>
      <commentsBefore>-- The different UML!Stereotype are generated if their respective reference</commentsBefore>
      <commentsBefore>-- Sequences are not empty. Each stereotype is initialized with its name</commentsBefore>
      <commentsBefore>-- ('clustering', 'import' or 'metamodel') and the name of the base class it is</commentsBefore>
      <commentsBefore>-- associated with (respectively Dependcy for the 2 first ones, and Package).</commentsBefore>
      <commentsBefore>-- Their namespace is set to the UML!Model ('mo') generated by the rule.</commentsBefore>
      <commentsAfter>-- Rule 'OtherClass'</commentsAfter>
      <commentsAfter>-- This rule generates a UML!Class, along with its associated</commentsAfter>
      <commentsAfter>-- UML!Generalizations for each MOF!Class that is distinct from the reference</commentsAfter>
      <commentsAfter>-- class computed by the firstClass helper.</commentsAfter>
      <commentsAfter>-- Most properties of the generated Class are copied from the input MOF!Class</commentsAfter>
      <commentsAfter>-- properties. Its generalizations correspond to the Generalization that are</commentsAfter>
      <commentsAfter>-- generated by the rule, whereas its specializations correspond to the</commentsAfter>
      <commentsAfter>-- UML!Classes that are generated for the MOF!Classes that have the input Class</commentsAfter>
      <commentsAfter>-- as supertype. The powertypeRange and isActive properties, which have no</commentsAfter>
      <commentsAfter>-- equivalent in MOF, are set to default values.</commentsAfter>
      <commentsAfter>-- A UML!Generalization is generated fore each supertype of the input</commentsAfter>
      <commentsAfter>-- MOF!Class. Its child corresponds to the generated UML class, whereas its</commentsAfter>
      <commentsAfter>-- parent corresponds to the UML!Class generated for the currently iterated</commentsAfter>
      <commentsAfter>-- supertype. Note that discriminator and powertype of the generated</commentsAfter>
      <commentsAfter>-- Generalizations are set to default values since MOF defines no corresponding</commentsAfter>
      <commentsAfter>-- properties.</commentsAfter>
      <outPattern location="455:2-630:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="456:3-489:4" varName="uc" variableExp="/0/@elements.15/@outPattern/@elements.1/@bindings.4/@value">
          <type xsi:type="ocl:OclModelElement" location="456:8-456:17" name="Class" model="/1"/>
          <bindings location="458:4-458:19" propertyName="name">
            <commentsBefore>-- Begin bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="458:12-458:19" name="name">
              <source xsi:type="ocl:VariableExp" location="458:12-458:14" referredVariable="/0/@elements.15/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="459:4-459:32" propertyName="constraint">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="459:18-459:32" name="constraints">
              <source xsi:type="ocl:VariableExp" location="459:18-459:20" referredVariable="/0/@elements.15/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="460:6-460:31" propertyName="namespace">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="460:19-460:31" name="container">
              <source xsi:type="ocl:VariableExp" location="460:19-460:21" referredVariable="/0/@elements.15/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="461:4-461:39" propertyName="visibility">
            <value xsi:type="ocl:OperationCallExp" location="461:18-461:39" operationName="getUMLVisibility">
              <source xsi:type="ocl:VariableExp" location="461:18-461:20" referredVariable="/0/@elements.15/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="473:4-473:31" propertyName="isAbstract">
            <commentsBefore>--			taggedValue &lt;-,</commentsBefore>
            <commentsBefore>--			asArgument &lt;-,</commentsBefore>
            <commentsBefore>--			clientDependency &lt;-,</commentsBefore>
            <commentsBefore>--			implementationLocation &lt;-,</commentsBefore>
            <commentsBefore>--			presentation &lt;-,</commentsBefore>
            <commentsBefore>--			supplierDependency &lt;-,</commentsBefore>
            <commentsBefore>--			templateParameter &lt;-,</commentsBefore>
            <commentsBefore>--			stereotype&lt;-,</commentsBefore>
            <commentsBefore>-- End of bindings inherited from ModelElement</commentsBefore>
            <commentsBefore>-- Begin bindings inherited from GeneralizableElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="473:18-473:31" name="isAbstract">
              <source xsi:type="ocl:VariableExp" location="473:18-473:20" referredVariable="/0/@elements.15/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="474:4-474:23" propertyName="isLeaf">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="474:14-474:23" name="isLeaf">
              <source xsi:type="ocl:VariableExp" location="474:14-474:16" referredVariable="/0/@elements.15/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="475:4-475:23" propertyName="isRoot">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="475:14-475:23" name="isRoot">
              <source xsi:type="ocl:VariableExp" location="475:14-475:16" referredVariable="/0/@elements.15/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="476:4-476:24" propertyName="generalization">
            <value xsi:type="ocl:VariableExp" location="476:22-476:24" referredVariable="/0/@elements.15/@outPattern/@elements.1"/>
          </bindings>
          <bindings location="484:4-484:26" propertyName="feature">
            <commentsBefore>-- End of bindings inherited from GeneralizableElement</commentsBefore>
            <commentsBefore>-- Begin bindings inherited from Namespace</commentsBefore>
            <commentsBefore>--			ownedElement &lt;- mc.contents,</commentsBefore>
            <commentsBefore>-- End of bindings inherited from Namespace</commentsBefore>
            <commentsBefore>-- Begin bindings inherited from Classifier</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="484:15-484:26" name="contents">
              <source xsi:type="ocl:VariableExp" location="484:15-484:17" referredVariable="/0/@elements.15/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="485:4-485:27" propertyName="powertypeRange">
            <value xsi:type="ocl:SetExp" location="485:22-485:27"/>
          </bindings>
          <bindings location="488:4-488:21" propertyName="isActive">
            <commentsBefore>-- End of bindings inherited from Classifier</commentsBefore>
            <value xsi:type="ocl:BooleanExp" location="488:16-488:21"/>
          </bindings>
        </elements>
        <elements xsi:type="atl:ForEachOutPatternElement" location="491:3-511:4" varName="mr" variableExp="/0/@elements.15/@outPattern/@elements.0/@bindings.7/@value">
          <type xsi:type="ocl:OclModelElement" location="491:17-491:35" name="Generalization" model="/1"/>
          <bindings location="493:4-493:19" propertyName="name">
            <commentsBefore>-- Begin bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="493:12-493:19" name="name">
              <source xsi:type="ocl:VariableExp" location="493:12-493:14" referredVariable="/0/@elements.15/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="494:4-494:59" propertyName="constraint">
            <value xsi:type="ocl:IteratorExp" location="494:18-494:59" name="collect">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="494:18-494:31" name="supertypes">
                <source xsi:type="ocl:VariableExp" location="494:18-494:20" referredVariable="/0/@elements.15/@inPattern/@elements.0"/>
              </source>
              <body xsi:type="ocl:NavigationOrAttributeCallExp" location="494:45-494:58" name="constraints">
                <source xsi:type="ocl:VariableExp" location="494:45-494:46" referredVariable="/0/@elements.15/@outPattern/@elements.1/@bindings.1/@value/@iterators.0"/>
              </body>
              <iterators location="494:41-494:42" varName="e" variableExp="/0/@elements.15/@outPattern/@elements.1/@bindings.1/@value/@body/@source"/>
            </value>
          </bindings>
          <bindings location="495:6-495:31" propertyName="namespace">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="495:19-495:31" name="container">
              <source xsi:type="ocl:VariableExp" location="495:19-495:21" referredVariable="/0/@elements.15/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="496:4-496:39" propertyName="visibility">
            <value xsi:type="ocl:OperationCallExp" location="496:18-496:39" operationName="getUMLVisibility">
              <source xsi:type="ocl:VariableExp" location="496:18-496:20" referredVariable="/0/@elements.15/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="507:4-507:15" propertyName="child">
            <commentsBefore>--			taggedValue &lt;-,</commentsBefore>
            <commentsBefore>--			asArgument &lt;-,</commentsBefore>
            <commentsBefore>--			clientDependency &lt;-,</commentsBefore>
            <commentsBefore>--			implementationLocation &lt;-,</commentsBefore>
            <commentsBefore>--			presentation &lt;-,</commentsBefore>
            <commentsBefore>--			supplierDependency &lt;-,</commentsBefore>
            <commentsBefore>--			templateParameter &lt;-,</commentsBefore>
            <commentsBefore>--			stereotype&lt;-,</commentsBefore>
            <commentsBefore>-- End of bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:VariableExp" location="507:13-507:15" referredVariable="/0/@elements.15/@outPattern/@elements.0"/>
          </bindings>
          <bindings location="508:4-508:15" propertyName="parent">
            <value xsi:type="ocl:VariableExp" location="508:14-508:15" referredVariable="/0/@elements.15/@outPattern/@elements.1/@iterator"/>
          </bindings>
          <bindings location="509:4-509:23" propertyName="discriminator">
            <value xsi:type="ocl:StringExp" location="509:21-509:23" stringSymbol=""/>
          </bindings>
          <bindings location="510:4-510:29" propertyName="powertype">
            <value xsi:type="ocl:OclUndefinedExp" location="510:17-510:29"/>
          </bindings>
          <collection xsi:type="ocl:NavigationOrAttributeCallExp" location="491:49-491:62" name="supertypes">
            <source xsi:type="ocl:VariableExp" location="491:49-491:51" referredVariable="/0/@elements.15/@inPattern/@elements.0"/>
          </collection>
          <iterator location="491:44-491:45" varName="e" variableExp="/0/@elements.15/@outPattern/@elements.1/@bindings.5/@value"/>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="513:3-543:4" varName="mo" variableExp="/0/@elements.15/@outPattern/@elements.3/@bindings.2/@value /0/@elements.15/@outPattern/@elements.4/@bindings.2/@value /0/@elements.15/@outPattern/@elements.5/@bindings.2/@value">
          <type xsi:type="ocl:OclModelElement" location="513:8-513:17" name="Model" model="/1"/>
          <bindings location="515:4-515:19" propertyName="name">
            <commentsBefore>-- Begin bindings inherited from ModelElement</commentsBefore>
            <commentsAfter>--,</commentsAfter>
            <commentsAfter>--			constraint &lt;- Set{},</commentsAfter>
            <commentsAfter>--		  	namespace &lt;- mp.container,</commentsAfter>
            <commentsAfter>--			visibility &lt;- mp.getUMLVisibility(),</commentsAfter>
            <commentsAfter>--			taggedValue &lt;-,</commentsAfter>
            <commentsAfter>--			asArgument &lt;-,</commentsAfter>
            <commentsAfter>--			clientDependency &lt;-,</commentsAfter>
            <commentsAfter>--			implementationLocation &lt;-,</commentsAfter>
            <commentsAfter>--			presentation &lt;-,</commentsAfter>
            <commentsAfter>--			supplierDependency &lt;-,</commentsAfter>
            <commentsAfter>--			templateParameter &lt;-,</commentsAfter>
            <commentsAfter>--			stereotype &lt;- Set{},</commentsAfter>
            <commentsAfter>-- End of bindings inherited from ModelElement</commentsAfter>
            <commentsAfter>-- Begin bindings inherited from GeneralizableElement</commentsAfter>
            <commentsAfter>--			isAbstract &lt;- mp.isAbstract,</commentsAfter>
            <commentsAfter>--			isLeaf &lt;- mp.isLeaf,</commentsAfter>
            <commentsAfter>--			isRoot &lt;- mp.isRoot,</commentsAfter>
            <commentsAfter>--			generalization &lt;- mr,</commentsAfter>
            <commentsAfter>-- End of bindings inherited from GeneralizableElement</commentsAfter>
            <commentsAfter>-- Begin bindings inherited from Namespace</commentsAfter>
            <commentsAfter>--			ownedElement &lt;- mp.contents,</commentsAfter>
            <commentsAfter>-- End of bindings inherited from Namespace</commentsAfter>
            <commentsAfter>-- Begin bindings inherited from Package</commentsAfter>
            <commentsAfter>--			elementImport &lt;- Set{}</commentsAfter>
            <commentsAfter>-- End Of bindings inherited from Package</commentsAfter>
            <value xsi:type="ocl:StringExp" location="515:12-515:19" stringSymbol="Model">
              <commentsAfter>--,</commentsAfter>
              <commentsAfter>--			constraint &lt;- Set{},</commentsAfter>
              <commentsAfter>--		  	namespace &lt;- mp.container,</commentsAfter>
              <commentsAfter>--			visibility &lt;- mp.getUMLVisibility(),</commentsAfter>
              <commentsAfter>--			taggedValue &lt;-,</commentsAfter>
              <commentsAfter>--			asArgument &lt;-,</commentsAfter>
              <commentsAfter>--			clientDependency &lt;-,</commentsAfter>
              <commentsAfter>--			implementationLocation &lt;-,</commentsAfter>
              <commentsAfter>--			presentation &lt;-,</commentsAfter>
              <commentsAfter>--			supplierDependency &lt;-,</commentsAfter>
              <commentsAfter>--			templateParameter &lt;-,</commentsAfter>
              <commentsAfter>--			stereotype &lt;- Set{},</commentsAfter>
              <commentsAfter>-- End of bindings inherited from ModelElement</commentsAfter>
              <commentsAfter>-- Begin bindings inherited from GeneralizableElement</commentsAfter>
              <commentsAfter>--			isAbstract &lt;- mp.isAbstract,</commentsAfter>
              <commentsAfter>--			isLeaf &lt;- mp.isLeaf,</commentsAfter>
              <commentsAfter>--			isRoot &lt;- mp.isRoot,</commentsAfter>
              <commentsAfter>--			generalization &lt;- mr,</commentsAfter>
              <commentsAfter>-- End of bindings inherited from GeneralizableElement</commentsAfter>
              <commentsAfter>-- Begin bindings inherited from Namespace</commentsAfter>
              <commentsAfter>--			ownedElement &lt;- mp.contents,</commentsAfter>
              <commentsAfter>-- End of bindings inherited from Namespace</commentsAfter>
              <commentsAfter>-- Begin bindings inherited from Package</commentsAfter>
              <commentsAfter>--			elementImport &lt;- Set{}</commentsAfter>
              <commentsAfter>-- End Of bindings inherited from Package</commentsAfter>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:ForEachOutPatternElement" location="545:3-572:4" varName="cl">
          <type xsi:type="ocl:OclModelElement" location="545:17-545:31" name="Stereotype" model="/1"/>
          <bindings location="547:4-547:24" propertyName="name">
            <commentsBefore>-- Begin bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:StringExp" location="547:12-547:24" stringSymbol="clustering"/>
          </bindings>
          <bindings location="548:4-548:35" propertyName="constraint">
            <value xsi:type="ocl:SequenceExp" location="548:18-548:35">
              <elements xsi:type="ocl:SetExp" location="548:28-548:33"/>
            </value>
          </bindings>
          <bindings location="549:6-549:21" propertyName="namespace">
            <value xsi:type="ocl:VariableExp" location="549:19-549:21" referredVariable="/0/@elements.15/@outPattern/@elements.2"/>
          </bindings>
          <bindings location="558:4-558:35" propertyName="stereotype">
            <commentsBefore>--			visibility &lt;- mp.getUMLVisibility(),</commentsBefore>
            <commentsBefore>--			taggedValue &lt;-,</commentsBefore>
            <commentsBefore>--			asArgument &lt;-,</commentsBefore>
            <commentsBefore>--			clientDependency &lt;-,</commentsBefore>
            <commentsBefore>--			implementationLocation &lt;-,</commentsBefore>
            <commentsBefore>--			presentation &lt;-,</commentsBefore>
            <commentsBefore>--			supplierDependency &lt;-,</commentsBefore>
            <commentsBefore>--			templateParameter &lt;-,</commentsBefore>
            <value xsi:type="ocl:SequenceExp" location="558:18-558:35">
              <elements xsi:type="ocl:SetExp" location="558:28-558:33"/>
            </value>
          </bindings>
          <bindings location="562:4-562:23" propertyName="isAbstract">
            <commentsBefore>-- End of bindings inherited from ModelElement</commentsBefore>
            <commentsBefore>-- Begin bindings inherited from GeneralizableElement</commentsBefore>
            <value xsi:type="ocl:BooleanExp" location="562:18-562:23"/>
          </bindings>
          <bindings location="563:4-563:19" propertyName="isLeaf">
            <value xsi:type="ocl:BooleanExp" location="563:14-563:19"/>
          </bindings>
          <bindings location="564:4-564:19" propertyName="isRoot">
            <value xsi:type="ocl:BooleanExp" location="564:14-564:19"/>
          </bindings>
          <bindings location="568:4-568:45" propertyName="stereotypeConstraint">
            <commentsBefore>--			generalization &lt;-,</commentsBefore>
            <commentsBefore>-- End of bindings inherited from GeneralizableElement</commentsBefore>
            <value xsi:type="ocl:SequenceExp" location="568:28-568:45">
              <elements xsi:type="ocl:SetExp" location="568:38-568:43"/>
            </value>
          </bindings>
          <bindings location="569:4-569:35" propertyName="definedTag">
            <value xsi:type="ocl:SequenceExp" location="569:18-569:35">
              <elements xsi:type="ocl:SetExp" location="569:28-569:33"/>
            </value>
          </bindings>
          <bindings location="570:4-570:24" propertyName="icon">
            <value xsi:type="ocl:OclUndefinedExp" location="570:12-570:24"/>
          </bindings>
          <bindings location="571:4-571:46" propertyName="baseClass">
            <value xsi:type="ocl:SequenceExp" location="571:17-571:46">
              <elements xsi:type="ocl:SetExp" location="571:27-571:44">
                <elements xsi:type="ocl:StringExp" location="571:31-571:43" stringSymbol="Dependency"/>
              </elements>
            </value>
          </bindings>
          <collection xsi:type="ocl:NavigationOrAttributeCallExp" location="545:45-545:70" name="firstClustered">
            <source xsi:type="ocl:VariableExp" location="545:45-545:55" referredVariable="/15"/>
          </collection>
          <iterator location="545:40-545:41" varName="e"/>
        </elements>
        <elements xsi:type="atl:ForEachOutPatternElement" location="574:3-601:4" varName="im">
          <type xsi:type="ocl:OclModelElement" location="574:17-574:31" name="Stereotype" model="/1"/>
          <bindings location="576:4-576:20" propertyName="name">
            <commentsBefore>-- Begin bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:StringExp" location="576:12-576:20" stringSymbol="import"/>
          </bindings>
          <bindings location="577:4-577:35" propertyName="constraint">
            <value xsi:type="ocl:SequenceExp" location="577:18-577:35">
              <elements xsi:type="ocl:SetExp" location="577:28-577:33"/>
            </value>
          </bindings>
          <bindings location="578:6-578:21" propertyName="namespace">
            <value xsi:type="ocl:VariableExp" location="578:19-578:21" referredVariable="/0/@elements.15/@outPattern/@elements.2"/>
          </bindings>
          <bindings location="587:4-587:35" propertyName="stereotype">
            <commentsBefore>--			visibility &lt;- mp.getUMLVisibility(),</commentsBefore>
            <commentsBefore>--			taggedValue &lt;-,</commentsBefore>
            <commentsBefore>--			asArgument &lt;-,</commentsBefore>
            <commentsBefore>--			clientDependency &lt;-,</commentsBefore>
            <commentsBefore>--			implementationLocation &lt;-,</commentsBefore>
            <commentsBefore>--			presentation &lt;-,</commentsBefore>
            <commentsBefore>--			supplierDependency &lt;-,</commentsBefore>
            <commentsBefore>--			templateParameter &lt;-,</commentsBefore>
            <value xsi:type="ocl:SequenceExp" location="587:18-587:35">
              <elements xsi:type="ocl:SetExp" location="587:28-587:33"/>
            </value>
          </bindings>
          <bindings location="591:4-591:23" propertyName="isAbstract">
            <commentsBefore>-- End of bindings inherited from ModelElement</commentsBefore>
            <commentsBefore>-- Begin bindings inherited from GeneralizableElement</commentsBefore>
            <value xsi:type="ocl:BooleanExp" location="591:18-591:23"/>
          </bindings>
          <bindings location="592:4-592:19" propertyName="isLeaf">
            <value xsi:type="ocl:BooleanExp" location="592:14-592:19"/>
          </bindings>
          <bindings location="593:4-593:19" propertyName="isRoot">
            <value xsi:type="ocl:BooleanExp" location="593:14-593:19"/>
          </bindings>
          <bindings location="597:4-597:45" propertyName="stereotypeConstraint">
            <commentsBefore>--			generalization &lt;-,</commentsBefore>
            <commentsBefore>-- End of bindings inherited from GeneralizableElement</commentsBefore>
            <value xsi:type="ocl:SequenceExp" location="597:28-597:45">
              <elements xsi:type="ocl:SetExp" location="597:38-597:43"/>
            </value>
          </bindings>
          <bindings location="598:4-598:35" propertyName="definedTag">
            <value xsi:type="ocl:SequenceExp" location="598:18-598:35">
              <elements xsi:type="ocl:SetExp" location="598:28-598:33"/>
            </value>
          </bindings>
          <bindings location="599:4-599:24" propertyName="icon">
            <value xsi:type="ocl:OclUndefinedExp" location="599:12-599:24"/>
          </bindings>
          <bindings location="600:4-600:46" propertyName="baseClass">
            <value xsi:type="ocl:SequenceExp" location="600:17-600:46">
              <elements xsi:type="ocl:SetExp" location="600:27-600:44">
                <elements xsi:type="ocl:StringExp" location="600:31-600:43" stringSymbol="Dependency"/>
              </elements>
            </value>
          </bindings>
          <collection xsi:type="ocl:NavigationOrAttributeCallExp" location="574:45-574:67" name="firstImport">
            <source xsi:type="ocl:VariableExp" location="574:45-574:55" referredVariable="/16"/>
          </collection>
          <iterator location="574:40-574:41" varName="e"/>
        </elements>
        <elements xsi:type="atl:ForEachOutPatternElement" location="603:3-630:4" varName="mm">
          <type xsi:type="ocl:OclModelElement" location="603:17-603:31" name="Stereotype" model="/1"/>
          <bindings location="605:4-605:23" propertyName="name">
            <commentsBefore>-- Begin bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:StringExp" location="605:12-605:23" stringSymbol="metamodel"/>
          </bindings>
          <bindings location="606:4-606:35" propertyName="constraint">
            <value xsi:type="ocl:SequenceExp" location="606:18-606:35">
              <elements xsi:type="ocl:SetExp" location="606:28-606:33"/>
            </value>
          </bindings>
          <bindings location="607:6-607:21" propertyName="namespace">
            <value xsi:type="ocl:VariableExp" location="607:19-607:21" referredVariable="/0/@elements.15/@outPattern/@elements.2"/>
          </bindings>
          <bindings location="616:4-616:35" propertyName="stereotype">
            <commentsBefore>--			visibility &lt;- mp.getUMLVisibility(),</commentsBefore>
            <commentsBefore>--			taggedValue &lt;-,</commentsBefore>
            <commentsBefore>--			asArgument &lt;-,</commentsBefore>
            <commentsBefore>--			clientDependency &lt;-,</commentsBefore>
            <commentsBefore>--			implementationLocation &lt;-,</commentsBefore>
            <commentsBefore>--			presentation &lt;-,</commentsBefore>
            <commentsBefore>--			supplierDependency &lt;-,</commentsBefore>
            <commentsBefore>--			templateParameter &lt;-,</commentsBefore>
            <value xsi:type="ocl:SequenceExp" location="616:18-616:35">
              <elements xsi:type="ocl:SetExp" location="616:28-616:33"/>
            </value>
          </bindings>
          <bindings location="620:4-620:23" propertyName="isAbstract">
            <commentsBefore>-- End of bindings inherited from ModelElement</commentsBefore>
            <commentsBefore>-- Begin bindings inherited from GeneralizableElement</commentsBefore>
            <value xsi:type="ocl:BooleanExp" location="620:18-620:23"/>
          </bindings>
          <bindings location="621:4-621:19" propertyName="isLeaf">
            <value xsi:type="ocl:BooleanExp" location="621:14-621:19"/>
          </bindings>
          <bindings location="622:4-622:19" propertyName="isRoot">
            <value xsi:type="ocl:BooleanExp" location="622:14-622:19"/>
          </bindings>
          <bindings location="626:4-626:45" propertyName="stereotypeConstraint">
            <commentsBefore>--			generalization &lt;-,</commentsBefore>
            <commentsBefore>-- End of bindings inherited from GeneralizableElement</commentsBefore>
            <value xsi:type="ocl:SequenceExp" location="626:28-626:45">
              <elements xsi:type="ocl:SetExp" location="626:38-626:43"/>
            </value>
          </bindings>
          <bindings location="627:4-627:35" propertyName="definedTag">
            <value xsi:type="ocl:SequenceExp" location="627:18-627:35">
              <elements xsi:type="ocl:SetExp" location="627:28-627:33"/>
            </value>
          </bindings>
          <bindings location="628:4-628:24" propertyName="icon">
            <value xsi:type="ocl:OclUndefinedExp" location="628:12-628:24"/>
          </bindings>
          <bindings location="629:4-629:43" propertyName="baseClass">
            <value xsi:type="ocl:SequenceExp" location="629:17-629:43">
              <elements xsi:type="ocl:SetExp" location="629:27-629:41">
                <elements xsi:type="ocl:StringExp" location="629:31-629:40" stringSymbol="Package"/>
              </elements>
            </value>
          </bindings>
          <collection xsi:type="ocl:NavigationOrAttributeCallExp" location="603:45-603:70" name="firstMetamodel">
            <source xsi:type="ocl:VariableExp" location="603:45-603:55" referredVariable="/17"/>
          </collection>
          <iterator location="603:40-603:41" varName="e"/>
        </elements>
      </outPattern>
      <inPattern location="451:2-454:4">
        <elements xsi:type="atl:SimpleInPatternElement" location="452:3-452:17" varName="mc" variableExp="/0/@elements.15/@inPattern/@filter/@source /0/@elements.15/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.15/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.15/@outPattern/@elements.0/@bindings.2/@value/@source /0/@elements.15/@outPattern/@elements.0/@bindings.3/@value/@source /0/@elements.15/@outPattern/@elements.0/@bindings.4/@value/@source /0/@elements.15/@outPattern/@elements.0/@bindings.5/@value/@source /0/@elements.15/@outPattern/@elements.0/@bindings.6/@value/@source /0/@elements.15/@outPattern/@elements.0/@bindings.8/@value/@source /0/@elements.15/@outPattern/@elements.1/@collection/@source /0/@elements.15/@outPattern/@elements.1/@bindings.0/@value/@source /0/@elements.15/@outPattern/@elements.1/@bindings.1/@value/@source/@source /0/@elements.15/@outPattern/@elements.1/@bindings.2/@value/@source /0/@elements.15/@outPattern/@elements.1/@bindings.3/@value/@source">
          <type xsi:type="ocl:OclModelElement" location="452:8-452:17" name="Class" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperatorCallExp" location="453:4-453:30" operationName="=">
          <source xsi:type="ocl:VariableExp" location="453:4-453:6" referredVariable="/0/@elements.15/@inPattern/@elements.0"/>
          <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="453:9-453:30" name="firstClass">
            <source xsi:type="ocl:VariableExp" location="453:9-453:19" referredVariable="/14"/>
          </arguments>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="649:1-711:2" name="OtherClass">
      <commentsBefore>-- Rule 'OtherClass'</commentsBefore>
      <commentsBefore>-- This rule generates a UML!Class, along with its associated</commentsBefore>
      <commentsBefore>-- UML!Generalizations for each MOF!Class that is distinct from the reference</commentsBefore>
      <commentsBefore>-- class computed by the firstClass helper.</commentsBefore>
      <commentsBefore>-- Most properties of the generated Class are copied from the input MOF!Class</commentsBefore>
      <commentsBefore>-- properties. Its generalizations correspond to the Generalization that are</commentsBefore>
      <commentsBefore>-- generated by the rule, whereas its specializations correspond to the</commentsBefore>
      <commentsBefore>-- UML!Classes that are generated for the MOF!Classes that have the input Class</commentsBefore>
      <commentsBefore>-- as supertype. The powertypeRange and isActive properties, which have no</commentsBefore>
      <commentsBefore>-- equivalent in MOF, are set to default values.</commentsBefore>
      <commentsBefore>-- A UML!Generalization is generated fore each supertype of the input</commentsBefore>
      <commentsBefore>-- MOF!Class. Its child corresponds to the generated UML class, whereas its</commentsBefore>
      <commentsBefore>-- parent corresponds to the UML!Class generated for the currently iterated</commentsBefore>
      <commentsBefore>-- supertype. Note that discriminator and powertype of the generated</commentsBefore>
      <commentsBefore>-- Generalizations are set to default values since MOF defines no corresponding</commentsBefore>
      <commentsBefore>-- properties.</commentsBefore>
      <commentsAfter>-- Rule 'Operation'</commentsAfter>
      <commentsAfter>-- This rule generates a UML!Operation from a MOF!Operation.</commentsAfter>
      <commentsAfter>-- Properties of the generated operation are copied from those of the input MOF</commentsAfter>
      <commentsAfter>-- operation, except concurrency, isAbstract, isLeaf and isRoot, which are not</commentsAfter>
      <commentsAfter>-- defined in MOF, and therefore set to default values.</commentsAfter>
      <outPattern location="654:2-710:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="655:3-688:4" varName="uc" variableExp="/0/@elements.16/@outPattern/@elements.1/@bindings.4/@value">
          <type xsi:type="ocl:OclModelElement" location="655:8-655:17" name="Class" model="/1"/>
          <bindings location="657:4-657:19" propertyName="name">
            <commentsBefore>-- Begin bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="657:12-657:19" name="name">
              <source xsi:type="ocl:VariableExp" location="657:12-657:14" referredVariable="/0/@elements.16/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="658:4-658:32" propertyName="constraint">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="658:18-658:32" name="constraints">
              <source xsi:type="ocl:VariableExp" location="658:18-658:20" referredVariable="/0/@elements.16/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="659:6-659:31" propertyName="namespace">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="659:19-659:31" name="container">
              <source xsi:type="ocl:VariableExp" location="659:19-659:21" referredVariable="/0/@elements.16/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="660:4-660:39" propertyName="visibility">
            <value xsi:type="ocl:OperationCallExp" location="660:18-660:39" operationName="getUMLVisibility">
              <source xsi:type="ocl:VariableExp" location="660:18-660:20" referredVariable="/0/@elements.16/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="672:4-672:31" propertyName="isAbstract">
            <commentsBefore>--			taggedValue &lt;-,</commentsBefore>
            <commentsBefore>--			asArgument &lt;-,</commentsBefore>
            <commentsBefore>--			clientDependency &lt;-,</commentsBefore>
            <commentsBefore>--			implementationLocation &lt;-,</commentsBefore>
            <commentsBefore>--			presentation &lt;-,</commentsBefore>
            <commentsBefore>--			supplierDependency &lt;-,</commentsBefore>
            <commentsBefore>--			templateParameter &lt;-,</commentsBefore>
            <commentsBefore>--			stereotype&lt;-,</commentsBefore>
            <commentsBefore>-- End of bindings inherited from ModelElement</commentsBefore>
            <commentsBefore>-- Begin bindings inherited from GeneralizableElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="672:18-672:31" name="isAbstract">
              <source xsi:type="ocl:VariableExp" location="672:18-672:20" referredVariable="/0/@elements.16/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="673:4-673:23" propertyName="isLeaf">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="673:14-673:23" name="isLeaf">
              <source xsi:type="ocl:VariableExp" location="673:14-673:16" referredVariable="/0/@elements.16/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="674:4-674:23" propertyName="isRoot">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="674:14-674:23" name="isRoot">
              <source xsi:type="ocl:VariableExp" location="674:14-674:16" referredVariable="/0/@elements.16/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="675:4-675:24" propertyName="generalization">
            <value xsi:type="ocl:VariableExp" location="675:22-675:24" referredVariable="/0/@elements.16/@outPattern/@elements.1"/>
          </bindings>
          <bindings location="683:4-683:26" propertyName="feature">
            <commentsBefore>-- End of bindings inherited from GeneralizableElement</commentsBefore>
            <commentsBefore>-- Begin bindings inherited from Namespace</commentsBefore>
            <commentsBefore>--			ownedElement &lt;- mc.contents,</commentsBefore>
            <commentsBefore>-- End of bindings inherited from Namespace</commentsBefore>
            <commentsBefore>-- Begin bindings inherited from Classifier</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="683:15-683:26" name="contents">
              <source xsi:type="ocl:VariableExp" location="683:15-683:17" referredVariable="/0/@elements.16/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="684:4-684:27" propertyName="powertypeRange">
            <value xsi:type="ocl:SetExp" location="684:22-684:27"/>
          </bindings>
          <bindings location="687:4-687:21" propertyName="isActive">
            <commentsBefore>-- End of bindings inherited from Classifier</commentsBefore>
            <value xsi:type="ocl:BooleanExp" location="687:16-687:21"/>
          </bindings>
        </elements>
        <elements xsi:type="atl:ForEachOutPatternElement" location="690:3-710:4" varName="mr" variableExp="/0/@elements.16/@outPattern/@elements.0/@bindings.7/@value">
          <type xsi:type="ocl:OclModelElement" location="690:17-690:35" name="Generalization" model="/1"/>
          <bindings location="692:4-692:19" propertyName="name">
            <commentsBefore>-- Begin bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="692:12-692:19" name="name">
              <source xsi:type="ocl:VariableExp" location="692:12-692:14" referredVariable="/0/@elements.16/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="693:4-693:59" propertyName="constraint">
            <value xsi:type="ocl:IteratorExp" location="693:18-693:59" name="collect">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="693:18-693:31" name="supertypes">
                <source xsi:type="ocl:VariableExp" location="693:18-693:20" referredVariable="/0/@elements.16/@inPattern/@elements.0"/>
              </source>
              <body xsi:type="ocl:NavigationOrAttributeCallExp" location="693:45-693:58" name="constraints">
                <source xsi:type="ocl:VariableExp" location="693:45-693:46" referredVariable="/0/@elements.16/@outPattern/@elements.1/@bindings.1/@value/@iterators.0"/>
              </body>
              <iterators location="693:41-693:42" varName="e" variableExp="/0/@elements.16/@outPattern/@elements.1/@bindings.1/@value/@body/@source"/>
            </value>
          </bindings>
          <bindings location="694:6-694:31" propertyName="namespace">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="694:19-694:31" name="container">
              <source xsi:type="ocl:VariableExp" location="694:19-694:21" referredVariable="/0/@elements.16/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="695:4-695:39" propertyName="visibility">
            <value xsi:type="ocl:OperationCallExp" location="695:18-695:39" operationName="getUMLVisibility">
              <source xsi:type="ocl:VariableExp" location="695:18-695:20" referredVariable="/0/@elements.16/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="706:4-706:15" propertyName="child">
            <commentsBefore>--			taggedValue &lt;-,</commentsBefore>
            <commentsBefore>--			asArgument &lt;-,</commentsBefore>
            <commentsBefore>--			clientDependency &lt;-,</commentsBefore>
            <commentsBefore>--			implementationLocation &lt;-,</commentsBefore>
            <commentsBefore>--			presentation &lt;-,</commentsBefore>
            <commentsBefore>--			supplierDependency &lt;-,</commentsBefore>
            <commentsBefore>--			templateParameter &lt;-,</commentsBefore>
            <commentsBefore>--			stereotype&lt;-,</commentsBefore>
            <commentsBefore>-- End of bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:VariableExp" location="706:13-706:15" referredVariable="/0/@elements.16/@outPattern/@elements.0"/>
          </bindings>
          <bindings location="707:4-707:15" propertyName="parent">
            <value xsi:type="ocl:VariableExp" location="707:14-707:15" referredVariable="/0/@elements.16/@outPattern/@elements.1/@iterator"/>
          </bindings>
          <bindings location="708:4-708:23" propertyName="discriminator">
            <value xsi:type="ocl:StringExp" location="708:21-708:23" stringSymbol=""/>
          </bindings>
          <bindings location="709:4-709:29" propertyName="powertype">
            <value xsi:type="ocl:OclUndefinedExp" location="709:17-709:29"/>
          </bindings>
          <collection xsi:type="ocl:NavigationOrAttributeCallExp" location="690:49-690:62" name="supertypes">
            <source xsi:type="ocl:VariableExp" location="690:49-690:51" referredVariable="/0/@elements.16/@inPattern/@elements.0"/>
          </collection>
          <iterator location="690:44-690:45" varName="e" variableExp="/0/@elements.16/@outPattern/@elements.1/@bindings.5/@value"/>
        </elements>
      </outPattern>
      <inPattern location="650:2-653:4">
        <elements xsi:type="atl:SimpleInPatternElement" location="651:3-651:17" varName="mc" variableExp="/0/@elements.16/@inPattern/@filter/@source /0/@elements.16/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.16/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.16/@outPattern/@elements.0/@bindings.2/@value/@source /0/@elements.16/@outPattern/@elements.0/@bindings.3/@value/@source /0/@elements.16/@outPattern/@elements.0/@bindings.4/@value/@source /0/@elements.16/@outPattern/@elements.0/@bindings.5/@value/@source /0/@elements.16/@outPattern/@elements.0/@bindings.6/@value/@source /0/@elements.16/@outPattern/@elements.0/@bindings.8/@value/@source /0/@elements.16/@outPattern/@elements.1/@collection/@source /0/@elements.16/@outPattern/@elements.1/@bindings.0/@value/@source /0/@elements.16/@outPattern/@elements.1/@bindings.1/@value/@source/@source /0/@elements.16/@outPattern/@elements.1/@bindings.2/@value/@source /0/@elements.16/@outPattern/@elements.1/@bindings.3/@value/@source">
          <type xsi:type="ocl:OclModelElement" location="651:8-651:17" name="Class" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperatorCallExp" location="652:4-652:31" operationName="&lt;>">
          <source xsi:type="ocl:VariableExp" location="652:4-652:6" referredVariable="/0/@elements.16/@inPattern/@elements.0"/>
          <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="652:10-652:31" name="firstClass">
            <source xsi:type="ocl:VariableExp" location="652:10-652:20" referredVariable="/18"/>
          </arguments>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="718:1-753:2" name="Operation">
      <commentsBefore>-- Rule 'Operation'</commentsBefore>
      <commentsBefore>-- This rule generates a UML!Operation from a MOF!Operation.</commentsBefore>
      <commentsBefore>-- Properties of the generated operation are copied from those of the input MOF</commentsBefore>
      <commentsBefore>-- operation, except concurrency, isAbstract, isLeaf and isRoot, which are not</commentsBefore>
      <commentsBefore>-- defined in MOF, and therefore set to default values.</commentsBefore>
      <commentsAfter>-- Rule 'Constraint'</commentsAfter>
      <commentsAfter>-- This rule generates a UML!Constraint from a MOF!Constraint.</commentsAfter>
      <commentsAfter>-- Properties of the generated constraint are copied from the input constraint,</commentsAfter>
      <commentsAfter>-- except body which is set by default to the 'oclUndefined' value.</commentsAfter>
      <outPattern location="721:2-752:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="722:3-752:4" varName="uo">
          <type xsi:type="ocl:OclModelElement" location="722:8-722:21" name="Operation" model="/1"/>
          <bindings location="724:4-724:19" propertyName="name">
            <commentsBefore>-- Begin bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="724:12-724:19" name="name">
              <source xsi:type="ocl:VariableExp" location="724:12-724:14" referredVariable="/0/@elements.17/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="725:4-725:32" propertyName="constraint">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="725:18-725:32" name="constraints">
              <source xsi:type="ocl:VariableExp" location="725:18-725:20" referredVariable="/0/@elements.17/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="727:4-727:39" propertyName="visibility">
            <commentsBefore>--		  	namespace &lt;- mo.container,</commentsBefore>
            <value xsi:type="ocl:OperationCallExp" location="727:18-727:39" operationName="getUMLVisibility">
              <source xsi:type="ocl:VariableExp" location="727:18-727:20" referredVariable="/0/@elements.17/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="739:4-739:34" propertyName="ownerScope">
            <commentsBefore>--			taggedValue &lt;-,</commentsBefore>
            <commentsBefore>--			asArgument &lt;-,</commentsBefore>
            <commentsBefore>--			clientDependency &lt;-,</commentsBefore>
            <commentsBefore>--			implementationLocation &lt;-,</commentsBefore>
            <commentsBefore>--			presentation &lt;-,</commentsBefore>
            <commentsBefore>--			supplierDependency &lt;-,</commentsBefore>
            <commentsBefore>--			templateParameter &lt;-,</commentsBefore>
            <commentsBefore>--			stereotype&lt;-,</commentsBefore>
            <commentsBefore>-- End of bindings inherited from ModelElement</commentsBefore>
            <commentsBefore>-- Begin bindings inherited from Feature</commentsBefore>
            <value xsi:type="ocl:OperationCallExp" location="739:18-739:34" operationName="getUMLScope">
              <source xsi:type="ocl:VariableExp" location="739:18-739:20" referredVariable="/0/@elements.17/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="740:4-740:25" propertyName="owner">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="740:13-740:25" name="container">
              <source xsi:type="ocl:VariableExp" location="740:13-740:15" referredVariable="/0/@elements.17/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="744:4-744:25" propertyName="isQuery">
            <commentsBefore>-- End of bindings inherited from Feature</commentsBefore>
            <commentsBefore>-- Begin bindings inherited from BehavioralFeature</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="744:15-744:25" name="isQuery">
              <source xsi:type="ocl:VariableExp" location="744:15-744:17" referredVariable="/0/@elements.17/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="745:4-745:28" propertyName="parameter">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="745:17-745:28" name="contents">
              <source xsi:type="ocl:VariableExp" location="745:17-745:19" referredVariable="/0/@elements.17/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="748:4-748:31" propertyName="concurrency">
            <commentsBefore>-- End of bindings inherited from BehavioralFeature</commentsBefore>
            <value xsi:type="ocl:EnumLiteralExp" location="748:19-748:31" name="cck_guarded"/>
          </bindings>
          <bindings location="749:4-749:23" propertyName="isAbstract">
            <value xsi:type="ocl:BooleanExp" location="749:18-749:23"/>
          </bindings>
          <bindings location="750:4-750:19" propertyName="isLeaf">
            <value xsi:type="ocl:BooleanExp" location="750:14-750:19"/>
          </bindings>
          <bindings location="751:4-751:19" propertyName="isRoot">
            <value xsi:type="ocl:BooleanExp" location="751:14-751:19"/>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="719:2-720:21">
        <elements xsi:type="atl:SimpleInPatternElement" location="720:3-720:21" varName="mo" variableExp="/0/@elements.17/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.17/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.17/@outPattern/@elements.0/@bindings.2/@value/@source /0/@elements.17/@outPattern/@elements.0/@bindings.3/@value/@source /0/@elements.17/@outPattern/@elements.0/@bindings.4/@value/@source /0/@elements.17/@outPattern/@elements.0/@bindings.5/@value/@source /0/@elements.17/@outPattern/@elements.0/@bindings.6/@value/@source">
          <type xsi:type="ocl:OclModelElement" location="720:8-720:21" name="Operation" model="/2"/>
        </elements>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="759:1-782:2" name="Constraint">
      <commentsBefore>-- Rule 'Constraint'</commentsBefore>
      <commentsBefore>-- This rule generates a UML!Constraint from a MOF!Constraint.</commentsBefore>
      <commentsBefore>-- Properties of the generated constraint are copied from the input constraint,</commentsBefore>
      <commentsBefore>-- except body which is set by default to the 'oclUndefined' value.</commentsBefore>
      <commentsAfter>-- Rule 'Tag'</commentsAfter>
      <commentsAfter>-- This rule generates a UML!TaggedValue from a MOF!Tag.</commentsAfter>
      <commentsAfter>-- Note that the type of the generated Tag is copied from the MOF!Tag tagId</commentsAfter>
      <commentsAfter>-- attribute. The model element the generated TaggedValue is attached to</commentsAfter>
      <commentsAfter>-- corresponds to the first element of the elements collection of the input</commentsAfter>
      <commentsAfter>-- MOF!Tag entity. Finally, as MOF only provides support for dataValues, the</commentsAfter>
      <commentsAfter>-- referenceValue of the genereated UML!TaggedValue elemlent is initialized</commentsAfter>
      <commentsAfter>-- with an empty set.</commentsAfter>
      <outPattern location="762:2-781:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="763:3-781:4" varName="uc">
          <type xsi:type="ocl:OclModelElement" location="763:8-763:22" name="Constraint" model="/1"/>
          <bindings location="765:4-765:19" propertyName="name">
            <commentsBefore>-- Begin bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="765:12-765:19" name="name">
              <source xsi:type="ocl:VariableExp" location="765:12-765:14" referredVariable="/0/@elements.18/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="766:4-766:32" propertyName="constraint">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="766:18-766:32" name="constraints">
              <source xsi:type="ocl:VariableExp" location="766:18-766:20" referredVariable="/0/@elements.18/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="767:6-767:31" propertyName="namespace">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="767:19-767:31" name="container">
              <source xsi:type="ocl:VariableExp" location="767:19-767:21" referredVariable="/0/@elements.18/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="779:4-779:48" propertyName="constrainedElement">
            <commentsBefore>--			visibility &lt;-,</commentsBefore>
            <commentsBefore>--			taggedValue &lt;-,</commentsBefore>
            <commentsBefore>--			asArgument &lt;-,</commentsBefore>
            <commentsBefore>--			clientDependency &lt;-,</commentsBefore>
            <commentsBefore>--			implementationLocation &lt;-,</commentsBefore>
            <commentsBefore>--			presentation &lt;-,</commentsBefore>
            <commentsBefore>--			supplierDependency &lt;-,</commentsBefore>
            <commentsBefore>--			templateParameter &lt;-,</commentsBefore>
            <commentsBefore>--			stereotype&lt;-,</commentsBefore>
            <commentsBefore>-- End of bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="779:26-779:48" name="constrainedElements">
              <source xsi:type="ocl:VariableExp" location="779:26-779:28" referredVariable="/0/@elements.18/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="780:4-780:24" propertyName="body">
            <value xsi:type="ocl:OclUndefinedExp" location="780:12-780:24"/>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="760:2-761:22">
        <elements xsi:type="atl:SimpleInPatternElement" location="761:3-761:22" varName="mc" variableExp="/0/@elements.18/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.18/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.18/@outPattern/@elements.0/@bindings.2/@value/@source /0/@elements.18/@outPattern/@elements.0/@bindings.3/@value/@source">
          <type xsi:type="ocl:OclModelElement" location="761:8-761:22" name="Constraint" model="/2"/>
        </elements>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="792:1-817:2" name="TaggedValue">
      <commentsBefore>-- Rule 'Tag'</commentsBefore>
      <commentsBefore>-- This rule generates a UML!TaggedValue from a MOF!Tag.</commentsBefore>
      <commentsBefore>-- Note that the type of the generated Tag is copied from the MOF!Tag tagId</commentsBefore>
      <commentsBefore>-- attribute. The model element the generated TaggedValue is attached to</commentsBefore>
      <commentsBefore>-- corresponds to the first element of the elements collection of the input</commentsBefore>
      <commentsBefore>-- MOF!Tag entity. Finally, as MOF only provides support for dataValues, the</commentsBefore>
      <commentsBefore>-- referenceValue of the genereated UML!TaggedValue elemlent is initialized</commentsBefore>
      <commentsBefore>-- with an empty set.</commentsBefore>
      <commentsAfter>-- Rule 'Import'</commentsAfter>
      <commentsAfter>-- This rule generates a UML!Dependency from a MOF!Import entity.</commentsAfter>
      <commentsAfter>-- The client of the generated Dependency corresponds to the container of the</commentsAfter>
      <commentsAfter>-- input Import, whereas its supplier corresponds to the importedNamespace of</commentsAfter>
      <commentsAfter>-- the Import.</commentsAfter>
      <commentsAfter>-- The namespace of the generated package corresponds to the model ('mo')</commentsAfter>
      <commentsAfter>-- generated by the FirstClass rule, whereas, according to the value of the</commentsAfter>
      <commentsAfter>-- isClustered attribute, its stereotype corresponds either to the clustering</commentsAfter>
      <commentsAfter>-- ('cl') or import ('im') stereotype generated by FirstClass.</commentsAfter>
      <outPattern location="795:2-816:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="796:3-816:4" varName="ut">
          <type xsi:type="ocl:OclModelElement" location="796:8-796:23" name="TaggedValue" model="/1"/>
          <bindings location="798:4-798:19" propertyName="name">
            <commentsBefore>-- Begin bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="798:12-798:19" name="name">
              <source xsi:type="ocl:VariableExp" location="798:12-798:14" referredVariable="/0/@elements.19/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="799:4-799:32" propertyName="constraint">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="799:18-799:32" name="constraints">
              <source xsi:type="ocl:VariableExp" location="799:18-799:20" referredVariable="/0/@elements.19/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="800:6-800:31" propertyName="namespace">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="800:19-800:31" name="container">
              <source xsi:type="ocl:VariableExp" location="800:19-800:21" referredVariable="/0/@elements.19/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="812:4-812:26" propertyName="dataValue">
            <commentsBefore>--			visibility &lt;-,</commentsBefore>
            <commentsBefore>--			taggedValue &lt;-,</commentsBefore>
            <commentsBefore>--			asArgument &lt;-,</commentsBefore>
            <commentsBefore>--			clientDependency &lt;-,</commentsBefore>
            <commentsBefore>--			implementationLocation &lt;-,</commentsBefore>
            <commentsBefore>--			presentation &lt;-,</commentsBefore>
            <commentsBefore>--			supplierDependency &lt;-,</commentsBefore>
            <commentsBefore>--			templateParameter &lt;-,</commentsBefore>
            <commentsBefore>--			stereotype&lt;-,</commentsBefore>
            <commentsBefore>-- End of bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="812:17-812:26" name="values">
              <source xsi:type="ocl:VariableExp" location="812:17-812:19" referredVariable="/0/@elements.19/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="813:4-813:20" propertyName="type">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="813:12-813:20" name="tagId">
              <source xsi:type="ocl:VariableExp" location="813:12-813:14" referredVariable="/0/@elements.19/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="814:4-814:54" propertyName="modelElement">
            <value xsi:type="ocl:CollectionOperationCallExp" location="814:20-814:54" operationName="first">
              <source xsi:type="ocl:CollectionOperationCallExp" location="814:20-814:45" operationName="asSequence">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="814:20-814:31" name="elements">
                  <source xsi:type="ocl:VariableExp" location="814:20-814:22" referredVariable="/0/@elements.19/@inPattern/@elements.0"/>
                </source>
              </source>
            </value>
          </bindings>
          <bindings location="815:4-815:27" propertyName="referenceValue">
            <value xsi:type="ocl:SetExp" location="815:22-815:27"/>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="793:2-794:15">
        <elements xsi:type="atl:SimpleInPatternElement" location="794:3-794:15" varName="mt" variableExp="/0/@elements.19/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.19/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.19/@outPattern/@elements.0/@bindings.2/@value/@source /0/@elements.19/@outPattern/@elements.0/@bindings.3/@value/@source /0/@elements.19/@outPattern/@elements.0/@bindings.4/@value/@source /0/@elements.19/@outPattern/@elements.0/@bindings.5/@value/@source/@source/@source">
          <type xsi:type="ocl:OclModelElement" location="794:8-794:15" name="Tag" model="/2"/>
        </elements>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="828:1-857:2" name="Import">
      <commentsBefore>-- Rule 'Import'</commentsBefore>
      <commentsBefore>-- This rule generates a UML!Dependency from a MOF!Import entity.</commentsBefore>
      <commentsBefore>-- The client of the generated Dependency corresponds to the container of the</commentsBefore>
      <commentsBefore>-- input Import, whereas its supplier corresponds to the importedNamespace of</commentsBefore>
      <commentsBefore>-- the Import.</commentsBefore>
      <commentsBefore>-- The namespace of the generated package corresponds to the model ('mo')</commentsBefore>
      <commentsBefore>-- generated by the FirstClass rule, whereas, according to the value of the</commentsBefore>
      <commentsBefore>-- isClustered attribute, its stereotype corresponds either to the clustering</commentsBefore>
      <commentsBefore>-- ('cl') or import ('im') stereotype generated by FirstClass.</commentsBefore>
      <commentsAfter>-- Rule 'Package'</commentsAfter>
      <commentsAfter>-- This rule generates a UML Package with its associated Generalizations from a</commentsAfter>
      <commentsAfter>-- MOF Package.</commentsAfter>
      <commentsAfter>-- Most properties of the generated Package are copied from the input</commentsAfter>
      <commentsAfter>-- MOF!Package properties. Its generalizations correspond to the Generalization</commentsAfter>
      <commentsAfter>-- that are generated by the rule, whereas its specializations correspond to</commentsAfter>
      <commentsAfter>-- the UML!Packages that are generated for the MOF!Packages that have the input</commentsAfter>
      <commentsAfter>-- Package as supertype. The powertypeRange and isActive properties, which have</commentsAfter>
      <commentsAfter>-- no equivalent in MOF, are set to default values. The namespace of the</commentsAfter>
      <commentsAfter>-- generated package corresponds to the model ('mo') generated by the</commentsAfter>
      <commentsAfter>-- FirstClass rule, whereas its stereotype corresponds to the metamodel ('mm')</commentsAfter>
      <commentsAfter>-- stereotype generated by this rule.</commentsAfter>
      <commentsAfter>-- A UML!Generalization is generated fore each supertype of the input</commentsAfter>
      <commentsAfter>-- MOF!Package. Its child corresponds to the generated UML Package, whereas its</commentsAfter>
      <commentsAfter>-- parent corresponds to the UML!Package generated for the currently iterated</commentsAfter>
      <commentsAfter>-- supertype. Note that discriminator and powertype of the generated</commentsAfter>
      <commentsAfter>-- Generalizations are set to default values since MOF defines no corresponding</commentsAfter>
      <commentsAfter>-- properties.</commentsAfter>
      <outPattern location="831:2-856:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="832:3-856:4" varName="ud">
          <type xsi:type="ocl:OclModelElement" location="832:8-832:22" name="Dependency" model="/1"/>
          <bindings location="834:4-834:19" propertyName="name">
            <commentsBefore>-- Begin bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="834:12-834:19" name="name">
              <source xsi:type="ocl:VariableExp" location="834:12-834:14" referredVariable="/0/@elements.20/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="835:4-835:32" propertyName="constraint">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="835:18-835:32" name="constraints">
              <source xsi:type="ocl:VariableExp" location="835:18-835:20" referredVariable="/0/@elements.20/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="840:6-840:70" propertyName="namespace">
            <commentsBefore>--			implementationLocation &lt;-,</commentsBefore>
            <commentsBefore>--			presentation &lt;-,</commentsBefore>
            <commentsBefore>--			supplierDependency &lt;-,</commentsBefore>
            <commentsBefore>--			templateParameter &lt;-,</commentsBefore>
            <value xsi:type="ocl:OperationCallExp" location="840:19-840:70" operationName="resolveTemp">
              <source xsi:type="ocl:VariableExp" location="840:19-840:29" referredVariable="/19"/>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="840:42-840:63" name="firstClass">
                <source xsi:type="ocl:VariableExp" location="840:42-840:52" referredVariable="/20"/>
              </arguments>
              <arguments xsi:type="ocl:StringExp" location="840:65-840:69" stringSymbol="mo"/>
            </value>
          </bindings>
          <bindings location="843:4-851:6" propertyName="stereotype">
            <commentsBefore>--			visibility &lt;-,</commentsBefore>
            <commentsBefore>--			taggedValue &lt;-,</commentsBefore>
            <value xsi:type="ocl:SetExp" location="844:5-851:6">
              <elements xsi:type="ocl:IfExp" location="845:6-850:11">
                <thenExpression xsi:type="ocl:OperationCallExp" location="847:7-847:58" operationName="resolveTemp">
                  <source xsi:type="ocl:VariableExp" location="847:7-847:17" referredVariable="/21"/>
                  <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="847:30-847:51" name="firstClass">
                    <source xsi:type="ocl:VariableExp" location="847:30-847:40" referredVariable="/22"/>
                  </arguments>
                  <arguments xsi:type="ocl:StringExp" location="847:53-847:57" stringSymbol="cl"/>
                </thenExpression>
                <condition xsi:type="ocl:NavigationOrAttributeCallExp" location="845:9-845:23" name="isClustered">
                  <source xsi:type="ocl:VariableExp" location="845:9-845:11" referredVariable="/0/@elements.20/@inPattern/@elements.0"/>
                </condition>
                <elseExpression xsi:type="ocl:OperationCallExp" location="849:7-849:58" operationName="resolveTemp">
                  <source xsi:type="ocl:VariableExp" location="849:7-849:17" referredVariable="/23"/>
                  <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="849:30-849:51" name="firstClass">
                    <source xsi:type="ocl:VariableExp" location="849:30-849:40" referredVariable="/24"/>
                  </arguments>
                  <arguments xsi:type="ocl:StringExp" location="849:53-849:57" stringSymbol="im"/>
                </elseExpression>
              </elements>
            </value>
          </bindings>
          <bindings location="854:4-854:36" propertyName="client">
            <commentsBefore>-- End of bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:SequenceExp" location="854:14-854:36">
              <elements xsi:type="ocl:NavigationOrAttributeCallExp" location="854:23-854:35" name="container">
                <source xsi:type="ocl:VariableExp" location="854:23-854:25" referredVariable="/0/@elements.20/@inPattern/@elements.0"/>
              </elements>
            </value>
          </bindings>
          <bindings location="855:4-855:46" propertyName="supplier">
            <value xsi:type="ocl:SequenceExp" location="855:16-855:46">
              <elements xsi:type="ocl:NavigationOrAttributeCallExp" location="855:25-855:45" name="importedNamespace">
                <source xsi:type="ocl:VariableExp" location="855:25-855:27" referredVariable="/0/@elements.20/@inPattern/@elements.0"/>
              </elements>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="829:2-830:18">
        <elements xsi:type="atl:SimpleInPatternElement" location="830:3-830:18" varName="mi" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.20/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.20/@outPattern/@elements.0/@bindings.3/@value/@elements.0/@condition/@source /0/@elements.20/@outPattern/@elements.0/@bindings.4/@value/@elements.0/@source /0/@elements.20/@outPattern/@elements.0/@bindings.5/@value/@elements.0/@source">
          <type xsi:type="ocl:OclModelElement" location="830:8-830:18" name="Import" model="/2"/>
        </elements>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="877:1-933:2" name="Package">
      <commentsBefore>-- Rule 'Package'</commentsBefore>
      <commentsBefore>-- This rule generates a UML Package with its associated Generalizations from a</commentsBefore>
      <commentsBefore>-- MOF Package.</commentsBefore>
      <commentsBefore>-- Most properties of the generated Package are copied from the input</commentsBefore>
      <commentsBefore>-- MOF!Package properties. Its generalizations correspond to the Generalization</commentsBefore>
      <commentsBefore>-- that are generated by the rule, whereas its specializations correspond to</commentsBefore>
      <commentsBefore>-- the UML!Packages that are generated for the MOF!Packages that have the input</commentsBefore>
      <commentsBefore>-- Package as supertype. The powertypeRange and isActive properties, which have</commentsBefore>
      <commentsBefore>-- no equivalent in MOF, are set to default values. The namespace of the</commentsBefore>
      <commentsBefore>-- generated package corresponds to the model ('mo') generated by the</commentsBefore>
      <commentsBefore>-- FirstClass rule, whereas its stereotype corresponds to the metamodel ('mm')</commentsBefore>
      <commentsBefore>-- stereotype generated by this rule.</commentsBefore>
      <commentsBefore>-- A UML!Generalization is generated fore each supertype of the input</commentsBefore>
      <commentsBefore>-- MOF!Package. Its child corresponds to the generated UML Package, whereas its</commentsBefore>
      <commentsBefore>-- parent corresponds to the UML!Package generated for the currently iterated</commentsBefore>
      <commentsBefore>-- supertype. Note that discriminator and powertype of the generated</commentsBefore>
      <commentsBefore>-- Generalizations are set to default values since MOF defines no corresponding</commentsBefore>
      <commentsBefore>-- properties.</commentsBefore>
      <commentsAfter>-- Rule 'AliasType'</commentsAfter>
      <commentsAfter>--rule AliasType {</commentsAfter>
      <commentsAfter>--	from</commentsAfter>
      <commentsAfter>--		ma : MOF!AliasType</commentsAfter>
      <commentsAfter>--	to</commentsAfter>
      <commentsAfter>--		ud : UML!DataType (</commentsAfter>
      <commentsAfter>--			stereotype &lt;- 'alias'</commentsAfter>
      <commentsAfter>--		)</commentsAfter>
      <commentsAfter>--}</commentsAfter>
      <commentsAfter>-- Rule 'CollectionType'</commentsAfter>
      <commentsAfter>--rule CollectionType {</commentsAfter>
      <commentsAfter>--	from</commentsAfter>
      <commentsAfter>--		mc : MOF!CollectionType</commentsAfter>
      <commentsAfter>--	to</commentsAfter>
      <commentsAfter>--		uc : UML!Class (</commentsAfter>
      <commentsAfter>--			stereotype &lt;- 'collection',</commentsAfter>
      <commentsAfter>--			type &lt;- mc.type,</commentsAfter>
      <commentsAfter>--			multiplicity &lt;- um</commentsAfter>
      <commentsAfter>--		),</commentsAfter>
      <commentsAfter>--		um : UML!Multiplicity (</commentsAfter>
      <commentsAfter>--			range &lt;- Set{ur}</commentsAfter>
      <commentsAfter>--		),</commentsAfter>
      <commentsAfter>--		ur : UML!MultiplicityRange (</commentsAfter>
      <commentsAfter>--			lower &lt;- mc.multiplicity.lower,</commentsAfter>
      <commentsAfter>--			upper &lt;- mc.multiplicity.upper,</commentsAfter>
      <commentsAfter>--			multiplicity &lt;- um</commentsAfter>
      <commentsAfter>--		)</commentsAfter>
      <commentsAfter>--}</commentsAfter>
      <outPattern location="880:2-932:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="881:3-910:4" varName="up" variableExp="/0/@elements.21/@outPattern/@elements.1/@bindings.4/@value">
          <type xsi:type="ocl:OclModelElement" location="881:8-881:19" name="Package" model="/1"/>
          <bindings location="883:4-883:19" propertyName="name">
            <commentsBefore>-- Begin bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="883:12-883:19" name="name">
              <source xsi:type="ocl:VariableExp" location="883:12-883:14" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="884:4-884:32" propertyName="constraint">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="884:18-884:32" name="constraints">
              <source xsi:type="ocl:VariableExp" location="884:18-884:20" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="885:6-885:70" propertyName="namespace">
            <value xsi:type="ocl:OperationCallExp" location="885:19-885:70" operationName="resolveTemp">
              <source xsi:type="ocl:VariableExp" location="885:19-885:29" referredVariable="/25"/>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="885:42-885:63" name="firstClass">
                <source xsi:type="ocl:VariableExp" location="885:42-885:52" referredVariable="/26"/>
              </arguments>
              <arguments xsi:type="ocl:StringExp" location="885:65-885:69" stringSymbol="mo"/>
            </value>
          </bindings>
          <bindings location="886:4-886:39" propertyName="visibility">
            <value xsi:type="ocl:OperationCallExp" location="886:18-886:39" operationName="getUMLVisibility">
              <source xsi:type="ocl:VariableExp" location="886:18-886:20" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="894:4-895:61" propertyName="stereotype">
            <commentsBefore>--			taggedValue &lt;-,</commentsBefore>
            <commentsBefore>--			asArgument &lt;-,</commentsBefore>
            <commentsBefore>--			clientDependency &lt;-,</commentsBefore>
            <commentsBefore>--			implementationLocation &lt;-,</commentsBefore>
            <commentsBefore>--			presentation &lt;-,</commentsBefore>
            <commentsBefore>--			supplierDependency &lt;-,</commentsBefore>
            <commentsBefore>--			templateParameter &lt;-,</commentsBefore>
            <value xsi:type="ocl:SetExp" location="895:5-895:61">
              <elements xsi:type="ocl:OperationCallExp" location="895:9-895:60" operationName="resolveTemp">
                <source xsi:type="ocl:VariableExp" location="895:9-895:19" referredVariable="/27"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="895:32-895:53" name="firstClass">
                  <source xsi:type="ocl:VariableExp" location="895:32-895:42" referredVariable="/28"/>
                </arguments>
                <arguments xsi:type="ocl:StringExp" location="895:55-895:59" stringSymbol="mm"/>
              </elements>
            </value>
          </bindings>
          <bindings location="899:4-899:31" propertyName="isAbstract">
            <commentsBefore>-- End of bindings inherited from ModelElement</commentsBefore>
            <commentsBefore>-- Begin bindings inherited from GeneralizableElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="899:18-899:31" name="isAbstract">
              <source xsi:type="ocl:VariableExp" location="899:18-899:20" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="900:4-900:23" propertyName="isLeaf">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="900:14-900:23" name="isLeaf">
              <source xsi:type="ocl:VariableExp" location="900:14-900:16" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="901:4-901:23" propertyName="isRoot">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="901:14-901:23" name="isRoot">
              <source xsi:type="ocl:VariableExp" location="901:14-901:16" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="902:4-902:24" propertyName="generalization">
            <value xsi:type="ocl:VariableExp" location="902:22-902:24" referredVariable="/0/@elements.21/@outPattern/@elements.1"/>
          </bindings>
          <bindings location="909:4-909:26" propertyName="elementImport">
            <commentsBefore>-- End of bindings inherited from GeneralizableElement</commentsBefore>
            <commentsBefore>-- Begin bindings inherited from Namespace</commentsBefore>
            <commentsBefore>--			ownedElement &lt;- ,</commentsBefore>
            <commentsBefore>-- End of bindings inherited from Namespace</commentsBefore>
            <value xsi:type="ocl:SetExp" location="909:21-909:26"/>
          </bindings>
        </elements>
        <elements xsi:type="atl:ForEachOutPatternElement" location="912:3-932:4" varName="mr" variableExp="/0/@elements.21/@outPattern/@elements.0/@bindings.8/@value">
          <type xsi:type="ocl:OclModelElement" location="912:17-912:35" name="Generalization" model="/1"/>
          <bindings location="914:4-914:19" propertyName="name">
            <commentsBefore>-- Begin bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="914:12-914:19" name="name">
              <source xsi:type="ocl:VariableExp" location="914:12-914:14" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="915:4-915:59" propertyName="constraint">
            <value xsi:type="ocl:IteratorExp" location="915:18-915:59" name="collect">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="915:18-915:31" name="supertypes">
                <source xsi:type="ocl:VariableExp" location="915:18-915:20" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
              </source>
              <body xsi:type="ocl:NavigationOrAttributeCallExp" location="915:45-915:58" name="constraints">
                <source xsi:type="ocl:VariableExp" location="915:45-915:46" referredVariable="/0/@elements.21/@outPattern/@elements.1/@bindings.1/@value/@iterators.0"/>
              </body>
              <iterators location="915:41-915:42" varName="e" variableExp="/0/@elements.21/@outPattern/@elements.1/@bindings.1/@value/@body/@source"/>
            </value>
          </bindings>
          <bindings location="916:6-916:31" propertyName="namespace">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="916:19-916:31" name="container">
              <source xsi:type="ocl:VariableExp" location="916:19-916:21" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="917:4-917:39" propertyName="visibility">
            <value xsi:type="ocl:OperationCallExp" location="917:18-917:39" operationName="getUMLVisibility">
              <source xsi:type="ocl:VariableExp" location="917:18-917:20" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="928:4-928:15" propertyName="child">
            <commentsBefore>--			taggedValue &lt;-,</commentsBefore>
            <commentsBefore>--			asArgument &lt;-,</commentsBefore>
            <commentsBefore>--			clientDependency &lt;-,</commentsBefore>
            <commentsBefore>--			implementationLocation &lt;-,</commentsBefore>
            <commentsBefore>--			presentation &lt;-,</commentsBefore>
            <commentsBefore>--			supplierDependency &lt;-,</commentsBefore>
            <commentsBefore>--			templateParameter &lt;-,</commentsBefore>
            <commentsBefore>--			stereotype&lt;-,</commentsBefore>
            <commentsBefore>-- End of bindings inherited from ModelElement</commentsBefore>
            <value xsi:type="ocl:VariableExp" location="928:13-928:15" referredVariable="/0/@elements.21/@outPattern/@elements.0"/>
          </bindings>
          <bindings location="929:4-929:15" propertyName="parent">
            <value xsi:type="ocl:VariableExp" location="929:14-929:15" referredVariable="/0/@elements.21/@outPattern/@elements.1/@iterator"/>
          </bindings>
          <bindings location="930:4-930:23" propertyName="discriminator">
            <value xsi:type="ocl:StringExp" location="930:21-930:23" stringSymbol=""/>
          </bindings>
          <bindings location="931:4-931:29" propertyName="powertype">
            <value xsi:type="ocl:OclUndefinedExp" location="931:17-931:29"/>
          </bindings>
          <collection xsi:type="ocl:NavigationOrAttributeCallExp" location="912:49-912:62" name="supertypes">
            <source xsi:type="ocl:VariableExp" location="912:49-912:51" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
          </collection>
          <iterator location="912:44-912:45" varName="e" variableExp="/0/@elements.21/@outPattern/@elements.1/@bindings.5/@value"/>
        </elements>
      </outPattern>
      <inPattern location="878:2-879:19">
        <elements xsi:type="atl:SimpleInPatternElement" location="879:3-879:19" varName="mp" variableExp="/0/@elements.21/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.21/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.21/@outPattern/@elements.0/@bindings.3/@value/@source /0/@elements.21/@outPattern/@elements.0/@bindings.5/@value/@source /0/@elements.21/@outPattern/@elements.0/@bindings.6/@value/@source /0/@elements.21/@outPattern/@elements.0/@bindings.7/@value/@source /0/@elements.21/@outPattern/@elements.1/@collection/@source /0/@elements.21/@outPattern/@elements.1/@bindings.0/@value/@source /0/@elements.21/@outPattern/@elements.1/@bindings.1/@value/@source/@source /0/@elements.21/@outPattern/@elements.1/@bindings.2/@value/@source /0/@elements.21/@outPattern/@elements.1/@bindings.3/@value/@source">
          <type xsi:type="ocl:OclModelElement" location="879:8-879:19" name="Package" model="/2"/>
        </elements>
      </inPattern>
    </elements>
  </atl:Module>
  <ocl:OclModel location="2:14-2:17" name="UML" elements="/0/@elements.4/@definition/@feature/@returnType /0/@elements.5/@definition/@feature/@returnType /0/@elements.6/@definition/@feature/@returnType /0/@elements.7/@definition/@feature/@returnType /0/@elements.8/@definition/@feature/@returnType /0/@elements.9/@definition/@feature/@returnType /0/@elements.10/@definition/@feature/@returnType /0/@elements.11/@outPattern/@elements.0/@type /0/@elements.11/@outPattern/@elements.1/@type /0/@elements.12/@outPattern/@elements.0/@type /0/@elements.12/@outPattern/@elements.1/@type /0/@elements.12/@outPattern/@elements.2/@type /0/@elements.13/@outPattern/@elements.0/@type /0/@elements.14/@outPattern/@elements.0/@type /0/@elements.14/@outPattern/@elements.1/@type /0/@elements.14/@outPattern/@elements.2/@type /0/@elements.15/@outPattern/@elements.0/@type /0/@elements.15/@outPattern/@elements.1/@type /0/@elements.15/@outPattern/@elements.2/@type /0/@elements.15/@outPattern/@elements.3/@type /0/@elements.15/@outPattern/@elements.4/@type /0/@elements.15/@outPattern/@elements.5/@type /0/@elements.16/@outPattern/@elements.0/@type /0/@elements.16/@outPattern/@elements.1/@type /0/@elements.17/@outPattern/@elements.0/@type /0/@elements.18/@outPattern/@elements.0/@type /0/@elements.19/@outPattern/@elements.0/@type /0/@elements.20/@outPattern/@elements.0/@type /0/@elements.21/@outPattern/@elements.0/@type /0/@elements.21/@outPattern/@elements.1/@type" model="/0/@outModels.0"/>
  <ocl:OclModel location="2:28-2:31" name="MOF" elements="/0/@elements.0/@definition/@feature/@type /0/@elements.0/@definition/@feature/@initExpression/@source/@source/@source /0/@elements.1/@definition/@feature/@type/@elementType /0/@elements.1/@definition/@feature/@initExpression/@elements.0/@source/@source/@source/@source /0/@elements.2/@definition/@feature/@type/@elementType /0/@elements.2/@definition/@feature/@initExpression/@elements.0/@source/@source/@source/@source /0/@elements.3/@definition/@feature/@type/@elementType /0/@elements.3/@definition/@feature/@initExpression/@elements.0/@source/@source/@source /0/@elements.4/@definition/@context_/@context_ /0/@elements.5/@definition/@context_/@context_ /0/@elements.6/@definition/@context_/@context_ /0/@elements.6/@definition/@feature/@body/@variable/@type /0/@elements.7/@definition/@context_/@context_ /0/@elements.8/@definition/@context_/@context_ /0/@elements.9/@definition/@context_/@context_ /0/@elements.10/@definition/@context_/@context_ /0/@elements.11/@inPattern/@elements.0/@type /0/@elements.12/@inPattern/@elements.0/@type /0/@elements.13/@inPattern/@elements.0/@type /0/@elements.14/@inPattern/@elements.0/@type /0/@elements.15/@inPattern/@elements.0/@type /0/@elements.16/@inPattern/@elements.0/@type /0/@elements.17/@inPattern/@elements.0/@type /0/@elements.18/@inPattern/@elements.0/@type /0/@elements.19/@inPattern/@elements.0/@type /0/@elements.20/@inPattern/@elements.0/@type /0/@elements.21/@inPattern/@elements.0/@type" model="/0/@inModels.0"/>
  <ocl:VariableDeclaration location="62:5-62:9" varName="self" variableExp="/0/@elements.4/@definition/@feature/@body/@condition/@source/@source"/>
  <ocl:VariableDeclaration location="81:5-81:9" varName="self" variableExp="/0/@elements.5/@definition/@feature/@body/@condition/@source/@source"/>
  <ocl:VariableDeclaration location="85:6-85:10" varName="self" variableExp="/0/@elements.5/@definition/@feature/@body/@elseExpression/@condition/@source/@source/@source"/>
  <ocl:VariableDeclaration location="89:4-89:8" varName="self" variableExp="/0/@elements.5/@definition/@feature/@body/@elseExpression/@elseExpression/@source"/>
  <ocl:VariableDeclaration location="102:27-102:31" varName="self" variableExp="/0/@elements.6/@definition/@feature/@body/@variable/@initExpression/@source"/>
  <ocl:VariableDeclaration location="132:5-132:9" varName="self" variableExp="/0/@elements.7/@definition/@feature/@body/@condition/@source/@source"/>
  <ocl:VariableDeclaration location="136:3-136:7" varName="self" variableExp="/0/@elements.7/@definition/@feature/@body/@elseExpression/@source"/>
  <ocl:VariableDeclaration location="150:5-150:9" varName="self" variableExp="/0/@elements.8/@definition/@feature/@body/@condition/@source"/>
  <ocl:VariableDeclaration location="170:9-170:13" varName="self" variableExp="/0/@elements.9/@definition/@feature/@body/@condition/@source/@source/@source"/>
  <ocl:VariableDeclaration location="172:3-172:7" varName="self" variableExp="/0/@elements.9/@definition/@feature/@body/@thenExpression/@source"/>
  <ocl:VariableDeclaration location="182:5-182:9" varName="self" variableExp="/0/@elements.10/@definition/@feature/@body/@condition/@source/@source"/>
  <ocl:VariableDeclaration location="453:9-453:19" varName="thisModule" variableExp="/0/@elements.15/@inPattern/@filter/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="545:45-545:55" varName="thisModule" variableExp="/0/@elements.15/@outPattern/@elements.3/@collection/@source"/>
  <ocl:VariableDeclaration location="574:45-574:55" varName="thisModule" variableExp="/0/@elements.15/@outPattern/@elements.4/@collection/@source"/>
  <ocl:VariableDeclaration location="603:45-603:55" varName="thisModule" variableExp="/0/@elements.15/@outPattern/@elements.5/@collection/@source"/>
  <ocl:VariableDeclaration location="652:10-652:20" varName="thisModule" variableExp="/0/@elements.16/@inPattern/@filter/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="840:19-840:29" varName="thisModule" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.2/@value/@source"/>
  <ocl:VariableDeclaration location="840:42-840:52" varName="thisModule" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.2/@value/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="847:7-847:17" varName="thisModule" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.3/@value/@elements.0/@thenExpression/@source"/>
  <ocl:VariableDeclaration location="847:30-847:40" varName="thisModule" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.3/@value/@elements.0/@thenExpression/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="849:7-849:17" varName="thisModule" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.3/@value/@elements.0/@elseExpression/@source"/>
  <ocl:VariableDeclaration location="849:30-849:40" varName="thisModule" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.3/@value/@elements.0/@elseExpression/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="885:19-885:29" varName="thisModule" variableExp="/0/@elements.21/@outPattern/@elements.0/@bindings.2/@value/@source"/>
  <ocl:VariableDeclaration location="885:42-885:52" varName="thisModule" variableExp="/0/@elements.21/@outPattern/@elements.0/@bindings.2/@value/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="895:9-895:19" varName="thisModule" variableExp="/0/@elements.21/@outPattern/@elements.0/@bindings.4/@value/@elements.0/@source"/>
  <ocl:VariableDeclaration location="895:32-895:42" varName="thisModule" variableExp="/0/@elements.21/@outPattern/@elements.0/@bindings.4/@value/@elements.0/@arguments.0/@source"/>
</xmi:XMI>
