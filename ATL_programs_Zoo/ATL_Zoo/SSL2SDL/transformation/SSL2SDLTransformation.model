<?xml version="1.0" encoding="ISO-8859-1"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:atl="http://www.eclipse.org/gmt/2005/ATL" xmlns:ocl="http://www.eclipse.org/gmt/2005/OCL">
  <atl:Module location="1:1-430:2" name="SSL2SDL">
    <inModels location="2:23-2:31" name="IN" metamodel="/2"/>
    <inModels location="2:33-2:42" name="IN2" metamodel="/3"/>
    <outModels location="2:8-2:17" name="OUT" metamodel="/1"/>
    <elements xsi:type="atl:Helper" location="7:1-9:2">
      <commentsBefore>-- A SSL!OntologyClassURI element has a lexicalForm attribute with</commentsBefore>
      <commentsBefore>-- the following structure: &lt;ontologyID>#&lt;ontologyClassID>.</commentsBefore>
      <commentsBefore>-- This helper takes this value and returns the &lt;ontologyClassID> part.</commentsBefore>
      <commentsAfter>-- A SSL!DataTypeURI element has a lexicalForm attribute that </commentsAfter>
      <commentsAfter>-- contains the URI that points to a XMLSchema and to the desired type,</commentsAfter>
      <commentsAfter>-- in the form: &lt;baseURI>#&lt;typeName></commentsAfter>
      <commentsAfter>-- This helper takes this value and returns the &lt;typeName> part.</commentsAfter>
      <definition location="7:8-8:43">
        <feature xsi:type="ocl:Operation" location="7:14-8:43" name="getOntologyIDName">
          <parameters location="7:32-7:42" varName="e" variableExp="/0/@elements.0/@definition/@feature/@body/@source /0/@elements.0/@definition/@feature/@body/@arguments.0/@source/@source /0/@elements.0/@definition/@feature/@body/@arguments.1/@source">
            <type xsi:type="ocl:StringType" location="7:36-7:42"/>
          </parameters>
          <returnType xsi:type="ocl:StringType" location="7:46-7:52"/>
          <body xsi:type="ocl:OperationCallExp" location="8:2-8:43" operationName="substring">
            <source xsi:type="ocl:VariableExp" location="8:2-8:3" referredVariable="/0/@elements.0/@definition/@feature/@parameters.0"/>
            <arguments xsi:type="ocl:OperatorCallExp" location="8:14-8:32" operationName="+">
              <source xsi:type="ocl:OperationCallExp" location="8:14-8:28" operationName="indexOf">
                <source xsi:type="ocl:VariableExp" location="8:14-8:15" referredVariable="/0/@elements.0/@definition/@feature/@parameters.0"/>
                <arguments xsi:type="ocl:StringExp" location="8:24-8:27" stringSymbol="#"/>
              </source>
              <arguments xsi:type="ocl:IntegerExp" location="8:31-8:32" integerSymbol="2"/>
            </arguments>
            <arguments xsi:type="ocl:OperationCallExp" location="8:34-8:42" operationName="size">
              <source xsi:type="ocl:VariableExp" location="8:34-8:35" referredVariable="/0/@elements.0/@definition/@feature/@parameters.0"/>
            </arguments>
          </body>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="15:1-17:2">
      <commentsBefore>-- A SSL!DataTypeURI element has a lexicalForm attribute that </commentsBefore>
      <commentsBefore>-- contains the URI that points to a XMLSchema and to the desired type,</commentsBefore>
      <commentsBefore>-- in the form: &lt;baseURI>#&lt;typeName></commentsBefore>
      <commentsBefore>-- This helper takes this value and returns the &lt;typeName> part.</commentsBefore>
      <commentsAfter>-- Taking a String value, this helper returns a sequence containing all the</commentsAfter>
      <commentsAfter>-- ODM!DatatypeProperty elements that apply to the ODM!Class that has the id attribute</commentsAfter>
      <commentsAfter>-- equal with that value. The returned sequence includes the ODM!DatatypeProperty-es </commentsAfter>
      <commentsAfter>-- that apply to any of its superclasses (the inherited ODM!DatatypeProperty-es).</commentsAfter>
      <definition location="15:8-16:43">
        <feature xsi:type="ocl:Operation" location="15:14-16:43" name="getSchemaTypeName">
          <parameters location="15:32-15:42" varName="e" variableExp="/0/@elements.1/@definition/@feature/@body/@source /0/@elements.1/@definition/@feature/@body/@arguments.0/@source/@source /0/@elements.1/@definition/@feature/@body/@arguments.1/@source">
            <type xsi:type="ocl:StringType" location="15:36-15:42"/>
          </parameters>
          <returnType xsi:type="ocl:StringType" location="15:46-15:52"/>
          <body xsi:type="ocl:OperationCallExp" location="16:2-16:43" operationName="substring">
            <source xsi:type="ocl:VariableExp" location="16:2-16:3" referredVariable="/0/@elements.1/@definition/@feature/@parameters.0"/>
            <arguments xsi:type="ocl:OperatorCallExp" location="16:14-16:32" operationName="+">
              <source xsi:type="ocl:OperationCallExp" location="16:14-16:28" operationName="indexOf">
                <source xsi:type="ocl:VariableExp" location="16:14-16:15" referredVariable="/0/@elements.1/@definition/@feature/@parameters.0"/>
                <arguments xsi:type="ocl:StringExp" location="16:24-16:27" stringSymbol="#"/>
              </source>
              <arguments xsi:type="ocl:IntegerExp" location="16:31-16:32" integerSymbol="2"/>
            </arguments>
            <arguments xsi:type="ocl:OperationCallExp" location="16:34-16:42" operationName="size">
              <source xsi:type="ocl:VariableExp" location="16:34-16:35" referredVariable="/0/@elements.1/@definition/@feature/@parameters.0"/>
            </arguments>
          </body>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="23:1-26:2">
      <commentsBefore>-- Taking a String value, this helper returns a sequence containing all the</commentsBefore>
      <commentsBefore>-- ODM!DatatypeProperty elements that apply to the ODM!Class that has the id attribute</commentsBefore>
      <commentsBefore>-- equal with that value. The returned sequence includes the ODM!DatatypeProperty-es </commentsBefore>
      <commentsBefore>-- that apply to any of its superclasses (the inherited ODM!DatatypeProperty-es).</commentsBefore>
      <commentsAfter>-- Taking a ODM!Class, returns a sequence containing all the ODM!DatatypeProperty </commentsAfter>
      <commentsAfter>-- elements that have in their theDomain property a reference to that class or to</commentsAfter>
      <commentsAfter>-- one of its superclasses (recursion on all the defined super classes)</commentsAfter>
      <definition location="23:8-25:68">
        <feature xsi:type="ocl:Operation" location="23:13-25:68" name="getDataTypePropertiesForId">
          <parameters location="23:40-23:56" varName="inputId" variableExp="/0/@elements.2/@definition/@feature/@body/@source/@source/@body/@arguments.0">
            <type xsi:type="ocl:StringType" location="23:50-23:56"/>
          </parameters>
          <returnType xsi:type="ocl:SequenceType" location="23:60-23:90">
            <elementType xsi:type="ocl:OclModelElement" location="23:69-23:89" name="DatatypeProperty" model="/3"/>
          </returnType>
          <body xsi:type="ocl:CollectionOperationCallExp" location="24:2-25:68" operationName="flatten">
            <source xsi:type="ocl:IteratorExp" location="24:2-25:55" name="collect">
              <source xsi:type="ocl:IteratorExp" location="24:2-24:57" name="select">
                <source xsi:type="ocl:OperationCallExp" location="24:2-24:26" operationName="allInstances">
                  <source xsi:type="ocl:OclModelElement" location="24:2-24:11" name="Class" model="/3"/>
                </source>
                <body xsi:type="ocl:OperatorCallExp" location="24:42-24:56" operationName="=">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="24:42-24:46" name="id">
                    <source xsi:type="ocl:VariableExp" location="24:42-24:43" referredVariable="/0/@elements.2/@definition/@feature/@body/@source/@source/@iterators.0"/>
                  </source>
                  <arguments xsi:type="ocl:VariableExp" location="24:49-24:56" referredVariable="/0/@elements.2/@definition/@feature/@parameters.0"/>
                </body>
                <iterators location="24:38-24:39" varName="d" variableExp="/0/@elements.2/@definition/@feature/@body/@source/@source/@body/@source/@source"/>
              </source>
              <body xsi:type="ocl:OperationCallExp" location="25:16-25:54" operationName="getAllDataTypeProperties">
                <source xsi:type="ocl:VariableExp" location="25:16-25:26" referredVariable="/4"/>
                <arguments xsi:type="ocl:VariableExp" location="25:52-25:53" referredVariable="/0/@elements.2/@definition/@feature/@body/@source/@iterators.0"/>
              </body>
              <iterators location="25:12-25:13" varName="d" variableExp="/0/@elements.2/@definition/@feature/@body/@source/@body/@arguments.0"/>
            </source>
          </body>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="31:1-38:2">
      <commentsBefore>-- Taking a ODM!Class, returns a sequence containing all the ODM!DatatypeProperty </commentsBefore>
      <commentsBefore>-- elements that have in their theDomain property a reference to that class or to</commentsBefore>
      <commentsBefore>-- one of its superclasses (recursion on all the defined super classes)</commentsBefore>
      <commentsAfter>-- Taking a ODM!Class, returns a sequence containing all the ODM!DatatypeProperty </commentsAfter>
      <commentsAfter>-- elements that have in their theDomain property a reference to that class.</commentsAfter>
      <definition location="31:8-37:19">
        <feature xsi:type="ocl:Operation" location="31:13-37:19" name="getAllDataTypeProperties">
          <parameters location="31:38-31:51" varName="c" variableExp="/0/@elements.3/@definition/@feature/@body/@source/@source/@arguments.0/@arguments.0 /0/@elements.3/@definition/@feature/@body/@source/@arguments.0/@source/@source">
            <type xsi:type="ocl:OclModelElement" location="31:42-31:51" name="Class" model="/3"/>
          </parameters>
          <returnType xsi:type="ocl:SequenceType" location="31:55-31:85">
            <elementType xsi:type="ocl:OclModelElement" location="31:64-31:84" name="DatatypeProperty" model="/3"/>
          </returnType>
          <body xsi:type="ocl:CollectionOperationCallExp" location="32:2-37:19" operationName="flatten">
            <source xsi:type="ocl:CollectionOperationCallExp" location="32:2-37:6" operationName="append">
              <source xsi:type="ocl:CollectionOperationCallExp" location="32:2-33:52" operationName="append">
                <source xsi:type="ocl:SequenceExp" location="32:2-32:12"/>
                <arguments xsi:type="ocl:OperationCallExp" location="33:13-33:51" operationName="getOwnDataTypeProperties">
                  <source xsi:type="ocl:VariableExp" location="33:13-33:23" referredVariable="/5"/>
                  <arguments xsi:type="ocl:VariableExp" location="33:49-33:50" referredVariable="/0/@elements.3/@definition/@feature/@parameters.0"/>
                </arguments>
              </source>
              <arguments xsi:type="ocl:IterateExp" location="34:14-36:77">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="34:14-34:29" name="theSuperClass">
                  <source xsi:type="ocl:VariableExp" location="34:14-34:15" referredVariable="/0/@elements.3/@definition/@feature/@parameters.0"/>
                </source>
                <body xsi:type="ocl:CollectionOperationCallExp" location="36:7-36:76" operationName="flatten">
                  <source xsi:type="ocl:CollectionOperationCallExp" location="36:7-36:63" operationName="append">
                    <source xsi:type="ocl:VariableExp" location="36:7-36:13" referredVariable="/0/@elements.3/@definition/@feature/@body/@source/@arguments.0/@result"/>
                    <arguments xsi:type="ocl:OperationCallExp" location="36:24-36:62" operationName="getAllDataTypeProperties">
                      <source xsi:type="ocl:VariableExp" location="36:24-36:34" referredVariable="/6"/>
                      <arguments xsi:type="ocl:VariableExp" location="36:60-36:61" referredVariable="/0/@elements.3/@definition/@feature/@body/@source/@arguments.0/@iterators.0"/>
                    </arguments>
                  </source>
                </body>
                <iterators location="35:13-35:14" varName="e" variableExp="/0/@elements.3/@definition/@feature/@body/@source/@arguments.0/@body/@source/@arguments.0/@arguments.0"/>
                <result location="35:16-35:68" varName="result" variableExp="/0/@elements.3/@definition/@feature/@body/@source/@arguments.0/@body/@source/@source">
                  <type xsi:type="ocl:SequenceType" location="35:25-35:55">
                    <elementType xsi:type="ocl:OclModelElement" location="35:34-35:54" name="DatatypeProperty" model="/3"/>
                  </type>
                  <initExpression xsi:type="ocl:SequenceExp" location="35:58-35:68"/>
                </result>
              </arguments>
            </source>
          </body>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="42:1-44:2">
      <commentsBefore>-- Taking a ODM!Class, returns a sequence containing all the ODM!DatatypeProperty </commentsBefore>
      <commentsBefore>-- elements that have in their theDomain property a reference to that class.</commentsBefore>
      <commentsAfter>-- This helper returns a sequence containing all the SSL!ServiceInput </commentsAfter>
      <commentsAfter>-- elements that belong to a SSL!ServiceFunctionality that has </commentsAfter>
      <commentsAfter>-- multiple inputs</commentsAfter>
      <definition location="42:8-43:80">
        <feature xsi:type="ocl:Operation" location="42:13-43:80" name="getOwnDataTypeProperties">
          <parameters location="42:38-42:51" varName="c" variableExp="/0/@elements.4/@definition/@feature/@body/@body/@arguments.0">
            <type xsi:type="ocl:OclModelElement" location="42:42-42:51" name="Class" model="/3"/>
          </parameters>
          <returnType xsi:type="ocl:SequenceType" location="42:55-42:85">
            <elementType xsi:type="ocl:OclModelElement" location="42:64-42:84" name="DatatypeProperty" model="/3"/>
          </returnType>
          <body xsi:type="ocl:IteratorExp" location="43:2-43:80" name="select">
            <source xsi:type="ocl:OperationCallExp" location="43:2-43:37" operationName="allInstances">
              <source xsi:type="ocl:OclModelElement" location="43:2-43:22" name="DatatypeProperty" model="/3"/>
            </source>
            <body xsi:type="ocl:CollectionOperationCallExp" location="43:52-43:79" operationName="includes">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="43:52-43:63" name="theDomain">
                <source xsi:type="ocl:VariableExp" location="43:52-43:53" referredVariable="/0/@elements.4/@definition/@feature/@body/@iterators.0"/>
              </source>
              <arguments xsi:type="ocl:VariableExp" location="43:77-43:78" referredVariable="/0/@elements.4/@definition/@feature/@parameters.0"/>
            </body>
            <iterators location="43:48-43:49" varName="e" variableExp="/0/@elements.4/@definition/@feature/@body/@body/@source/@source"/>
          </body>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="49:1-52:2">
      <commentsBefore>-- This helper returns a sequence containing all the SSL!ServiceInput </commentsBefore>
      <commentsBefore>-- elements that belong to a SSL!ServiceFunctionality that has </commentsBefore>
      <commentsBefore>-- multiple inputs</commentsBefore>
      <commentsAfter>-- Similar with getMultipleInputs(), but referring to SSL!ServiceOutput.</commentsAfter>
      <definition location="49:8-51:38">
        <feature xsi:type="ocl:Operation" location="49:13-51:38" name="getMultipleInputs">
          <returnType xsi:type="ocl:SequenceType" location="49:35-49:61">
            <elementType xsi:type="ocl:OclModelElement" location="49:44-49:60" name="ServiceInput" model="/2"/>
          </returnType>
          <body xsi:type="ocl:CollectionOperationCallExp" location="50:2-51:38" operationName="flatten">
            <source xsi:type="ocl:IteratorExp" location="50:2-51:25" name="collect">
              <source xsi:type="ocl:IteratorExp" location="50:2-50:75" name="select">
                <source xsi:type="ocl:OperationCallExp" location="50:2-50:41" operationName="allInstances">
                  <source xsi:type="ocl:OclModelElement" location="50:2-50:26" name="ServiceFunctionality" model="/2"/>
                </source>
                <body xsi:type="ocl:OperatorCallExp" location="50:56-50:74" operationName=">">
                  <source xsi:type="ocl:OperationCallExp" location="50:56-50:70" operationName="size">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="50:56-50:63" name="Input">
                      <source xsi:type="ocl:VariableExp" location="50:56-50:57" referredVariable="/0/@elements.5/@definition/@feature/@body/@source/@source/@iterators.0"/>
                    </source>
                  </source>
                  <arguments xsi:type="ocl:IntegerExp" location="50:73-50:74" integerSymbol="1"/>
                </body>
                <iterators location="50:52-50:53" varName="e" variableExp="/0/@elements.5/@definition/@feature/@body/@source/@source/@body/@source/@source/@source"/>
              </source>
              <body xsi:type="ocl:NavigationOrAttributeCallExp" location="51:17-51:24" name="Input">
                <source xsi:type="ocl:VariableExp" location="51:17-51:18" referredVariable="/0/@elements.5/@definition/@feature/@body/@source/@iterators.0"/>
              </body>
              <iterators location="51:13-51:14" varName="e" variableExp="/0/@elements.5/@definition/@feature/@body/@source/@body/@source"/>
            </source>
          </body>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="55:1-58:2">
      <commentsBefore>-- Similar with getMultipleInputs(), but referring to SSL!ServiceOutput.</commentsBefore>
      <commentsAfter>-- This helper returns the name of the SSL!ServiceInput that has as </commentsAfter>
      <commentsAfter>-- Type the specified SSL!OntologyClassURI.</commentsAfter>
      <definition location="55:8-57:39">
        <feature xsi:type="ocl:Operation" location="55:13-57:39" name="getMultipleOutputs">
          <returnType xsi:type="ocl:SequenceType" location="55:36-55:63">
            <elementType xsi:type="ocl:OclModelElement" location="55:45-55:62" name="ServiceOutput" model="/2"/>
          </returnType>
          <body xsi:type="ocl:CollectionOperationCallExp" location="56:2-57:39" operationName="flatten">
            <source xsi:type="ocl:IteratorExp" location="56:2-57:26" name="collect">
              <source xsi:type="ocl:IteratorExp" location="56:2-56:76" name="select">
                <source xsi:type="ocl:OperationCallExp" location="56:2-56:41" operationName="allInstances">
                  <source xsi:type="ocl:OclModelElement" location="56:2-56:26" name="ServiceFunctionality" model="/2"/>
                </source>
                <body xsi:type="ocl:OperatorCallExp" location="56:56-56:75" operationName=">">
                  <source xsi:type="ocl:OperationCallExp" location="56:56-56:71" operationName="size">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="56:56-56:64" name="Output">
                      <source xsi:type="ocl:VariableExp" location="56:56-56:57" referredVariable="/0/@elements.6/@definition/@feature/@body/@source/@source/@iterators.0"/>
                    </source>
                  </source>
                  <arguments xsi:type="ocl:IntegerExp" location="56:74-56:75" integerSymbol="1"/>
                </body>
                <iterators location="56:52-56:53" varName="e" variableExp="/0/@elements.6/@definition/@feature/@body/@source/@source/@body/@source/@source/@source"/>
              </source>
              <body xsi:type="ocl:NavigationOrAttributeCallExp" location="57:17-57:25" name="Output">
                <source xsi:type="ocl:VariableExp" location="57:17-57:18" referredVariable="/0/@elements.6/@definition/@feature/@body/@source/@iterators.0"/>
              </body>
              <iterators location="57:13-57:14" varName="e" variableExp="/0/@elements.6/@definition/@feature/@body/@source/@body/@source"/>
            </source>
          </body>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="62:1-65:2">
      <commentsBefore>-- This helper returns the name of the SSL!ServiceInput that has as </commentsBefore>
      <commentsBefore>-- Type the specified SSL!OntologyClassURI.</commentsBefore>
      <commentsAfter>-- Similar with inputMessageName(), but referring to SSL!ServiceOutput.</commentsAfter>
      <definition location="62:8-64:29">
        <feature xsi:type="ocl:Operation" location="62:13-64:29" name="inputMessageName">
          <parameters location="62:30-62:64" varName="searchedType" variableExp="/0/@elements.7/@definition/@feature/@body/@source/@source/@source/@body/@arguments.0">
            <type xsi:type="ocl:OclModelElement" location="62:44-62:64" name="OntologyClassURI" model="/2"/>
          </parameters>
          <returnType xsi:type="ocl:StringType" location="62:68-62:74"/>
          <body xsi:type="ocl:CollectionOperationCallExp" location="63:6-64:29" operationName="first">
            <source xsi:type="ocl:CollectionOperationCallExp" location="63:6-64:18" operationName="asSequence">
              <source xsi:type="ocl:IteratorExp" location="63:6-63:97" name="collect">
                <source xsi:type="ocl:IteratorExp" location="63:6-63:74" name="select">
                  <source xsi:type="ocl:OperationCallExp" location="63:6-63:37" operationName="allInstances">
                    <source xsi:type="ocl:OclModelElement" location="63:6-63:22" name="ServiceInput" model="/2"/>
                  </source>
                  <body xsi:type="ocl:OperatorCallExp" location="63:52-63:73" operationName="=">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="63:52-63:58" name="Type">
                      <source xsi:type="ocl:VariableExp" location="63:52-63:53" referredVariable="/0/@elements.7/@definition/@feature/@body/@source/@source/@source/@iterators.0"/>
                    </source>
                    <arguments xsi:type="ocl:VariableExp" location="63:61-63:73" referredVariable="/0/@elements.7/@definition/@feature/@parameters.0"/>
                  </body>
                  <iterators location="63:48-63:49" varName="e" variableExp="/0/@elements.7/@definition/@feature/@body/@source/@source/@source/@body/@source/@source"/>
                </source>
                <body xsi:type="ocl:NavigationOrAttributeCallExp" location="63:90-63:96" name="name">
                  <source xsi:type="ocl:VariableExp" location="63:90-63:91" referredVariable="/0/@elements.7/@definition/@feature/@body/@source/@source/@iterators.0"/>
                </body>
                <iterators location="63:86-63:87" varName="e" variableExp="/0/@elements.7/@definition/@feature/@body/@source/@source/@body/@source"/>
              </source>
            </source>
          </body>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="68:1-71:2">
      <commentsBefore>-- Similar with inputMessageName(), but referring to SSL!ServiceOutput.</commentsBefore>
      <commentsAfter>-- Returns the root element of the input SSL model, as it is the one </commentsAfter>
      <commentsAfter>-- that generates the SDL types.</commentsAfter>
      <definition location="68:8-70:29">
        <feature xsi:type="ocl:Operation" location="68:13-70:29" name="outputMessageName">
          <parameters location="68:31-68:65" varName="searchedType" variableExp="/0/@elements.8/@definition/@feature/@body/@source/@source/@source/@body/@arguments.0">
            <type xsi:type="ocl:OclModelElement" location="68:45-68:65" name="OntologyClassURI" model="/2"/>
          </parameters>
          <returnType xsi:type="ocl:StringType" location="68:69-68:75"/>
          <body xsi:type="ocl:CollectionOperationCallExp" location="69:6-70:29" operationName="first">
            <source xsi:type="ocl:CollectionOperationCallExp" location="69:6-70:18" operationName="asSequence">
              <source xsi:type="ocl:IteratorExp" location="69:6-69:98" name="collect">
                <source xsi:type="ocl:IteratorExp" location="69:6-69:75" name="select">
                  <source xsi:type="ocl:OperationCallExp" location="69:6-69:38" operationName="allInstances">
                    <source xsi:type="ocl:OclModelElement" location="69:6-69:23" name="ServiceOutput" model="/2"/>
                  </source>
                  <body xsi:type="ocl:OperatorCallExp" location="69:53-69:74" operationName="=">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="69:53-69:59" name="Type">
                      <source xsi:type="ocl:VariableExp" location="69:53-69:54" referredVariable="/0/@elements.8/@definition/@feature/@body/@source/@source/@source/@iterators.0"/>
                    </source>
                    <arguments xsi:type="ocl:VariableExp" location="69:62-69:74" referredVariable="/0/@elements.8/@definition/@feature/@parameters.0"/>
                  </body>
                  <iterators location="69:49-69:50" varName="e" variableExp="/0/@elements.8/@definition/@feature/@body/@source/@source/@source/@body/@source/@source"/>
                </source>
                <body xsi:type="ocl:NavigationOrAttributeCallExp" location="69:91-69:97" name="name">
                  <source xsi:type="ocl:VariableExp" location="69:91-69:92" referredVariable="/0/@elements.8/@definition/@feature/@body/@source/@source/@iterators.0"/>
                </body>
                <iterators location="69:87-69:88" varName="e" variableExp="/0/@elements.8/@definition/@feature/@body/@source/@source/@body/@source"/>
              </source>
            </source>
          </body>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="75:1-77:2">
      <commentsBefore>-- Returns the root element of the input SSL model, as it is the one </commentsBefore>
      <commentsBefore>-- that generates the SDL types.</commentsBefore>
      <commentsAfter>-- Returns the name of the target pattern (in rule Definitions) that </commentsAfter>
      <commentsAfter>-- generates the SDL type that corresponds to the specified ODM!DataRange.</commentsAfter>
      <commentsAfter>-- For the types that do not have direct mapping to an SDL type, the </commentsAfter>
      <commentsAfter>-- returned target pattern name is the one returned by the helper</commentsAfter>
      <commentsAfter>-- getSDLTypeForODM_Default.</commentsAfter>
      <definition location="75:8-76:59">
        <feature xsi:type="ocl:Operation" location="75:13-76:59" name="getTypeGenerator">
          <returnType xsi:type="ocl:OclModelElement" location="75:34-75:52" name="ServiceProfile" model="/2"/>
          <body xsi:type="ocl:CollectionOperationCallExp" location="76:3-76:59" operationName="first">
            <source xsi:type="ocl:CollectionOperationCallExp" location="76:3-76:50" operationName="asSequence">
              <source xsi:type="ocl:OperationCallExp" location="76:3-76:36" operationName="allInstances">
                <source xsi:type="ocl:OclModelElement" location="76:3-76:21" name="ServiceProfile" model="/2"/>
              </source>
            </source>
          </body>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="84:1-90:2">
      <commentsBefore>-- Returns the name of the target pattern (in rule Definitions) that </commentsBefore>
      <commentsBefore>-- generates the SDL type that corresponds to the specified ODM!DataRange.</commentsBefore>
      <commentsBefore>-- For the types that do not have direct mapping to an SDL type, the </commentsBefore>
      <commentsBefore>-- returned target pattern name is the one returned by the helper</commentsBefore>
      <commentsBefore>-- getSDLTypeForODM_Default.</commentsBefore>
      <commentsAfter>-- Returns the name of the target pattern (in rule Definitions) that is</commentsAfter>
      <commentsAfter>-- assigned by default to elements from the ontology whose type is not mapped</commentsAfter>
      <commentsAfter>-- directly to a SDL type (the pattern that generates SDL!SdlString).</commentsAfter>
      <definition location="84:8-89:7">
        <feature xsi:type="ocl:Operation" location="84:13-89:7" name="getSDLTypeForODM">
          <parameters location="84:30-84:47" varName="p" variableExp="/0/@elements.10/@definition/@feature/@body/@condition/@source /0/@elements.10/@definition/@feature/@body/@thenExpression/@arguments.0/@arguments.0/@source/@source">
            <type xsi:type="ocl:OclModelElement" location="84:34-84:47" name="DataRange" model="/3"/>
          </parameters>
          <returnType xsi:type="ocl:StringType" location="84:51-84:57"/>
          <body xsi:type="ocl:IfExp" location="85:2-89:7">
            <thenExpression xsi:type="ocl:OperationCallExp" location="86:3-87:66" operationName="getSDLTypeForSchemaType">
              <source xsi:type="ocl:VariableExp" location="86:3-86:13" referredVariable="/7"/>
              <arguments xsi:type="ocl:OperationCallExp" location="87:4-87:65" operationName="getSchemaTypeName">
                <source xsi:type="ocl:VariableExp" location="87:4-87:14" referredVariable="/8"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="87:33-87:64" name="lexicalForm">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="87:33-87:52" name="TypeDefinitionURI">
                    <source xsi:type="ocl:VariableExp" location="87:33-87:34" referredVariable="/0/@elements.10/@definition/@feature/@parameters.0"/>
                  </source>
                </arguments>
              </arguments>
            </thenExpression>
            <condition xsi:type="ocl:OperationCallExp" location="85:5-85:37" operationName="oclIsKindOf">
              <source xsi:type="ocl:VariableExp" location="85:5-85:6" referredVariable="/0/@elements.10/@definition/@feature/@parameters.0"/>
              <arguments xsi:type="ocl:OclModelElement" location="85:19-85:36" name="PrimitiveType" model="/3"/>
            </condition>
            <elseExpression xsi:type="ocl:OperationCallExp" location="88:7-88:44" operationName="getSDLTypeForODM_Default">
              <source xsi:type="ocl:VariableExp" location="88:7-88:17" referredVariable="/9"/>
            </elseExpression>
          </body>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="95:1-97:2">
      <commentsBefore>-- Returns the name of the target pattern (in rule Definitions) that is</commentsBefore>
      <commentsBefore>-- assigned by default to elements from the ontology whose type is not mapped</commentsBefore>
      <commentsBefore>-- directly to a SDL type (the pattern that generates SDL!SdlString).</commentsBefore>
      <commentsAfter>-- Returns the name of the target pattern (in rule Definitions) that </commentsAfter>
      <commentsAfter>-- generates the SDL type that corresponds to the schema type with the </commentsAfter>
      <commentsAfter>-- specified name. (The mapping realized for the schema: </commentsAfter>
      <commentsAfter>-- http://www.w3.org/2001/XMLSchema.)</commentsAfter>
      <commentsAfter>-- For the types that do not have direct mapping to an SDL type, the </commentsAfter>
      <commentsAfter>-- retured target pattern name is the one corresponding to SDL!String. </commentsAfter>
      <definition location="95:8-96:9">
        <feature xsi:type="ocl:Operation" location="95:13-96:9" name="getSDLTypeForODM_Default">
          <returnType xsi:type="ocl:StringType" location="95:42-95:48"/>
          <body xsi:type="ocl:StringExp" location="96:2-96:9" stringSymbol="type4"/>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="105:1-130:2">
      <commentsBefore>-- Returns the name of the target pattern (in rule Definitions) that </commentsBefore>
      <commentsBefore>-- generates the SDL type that corresponds to the schema type with the </commentsBefore>
      <commentsBefore>-- specified name. (The mapping realized for the schema: </commentsBefore>
      <commentsBefore>-- http://www.w3.org/2001/XMLSchema.)</commentsBefore>
      <commentsBefore>-- For the types that do not have direct mapping to an SDL type, the </commentsBefore>
      <commentsBefore>-- retured target pattern name is the one corresponding to SDL!String. </commentsBefore>
      <commentsAfter>-- Returns a sequence with a 'fake' element if the size of the </commentsAfter>
      <commentsAfter>-- provided sequence is 0, otherwise it returns an empty sequence.</commentsAfter>
      <definition location="105:8-129:7">
        <feature xsi:type="ocl:Operation" location="105:13-129:7" name="getSDLTypeForSchemaType">
          <parameters location="105:37-105:50" varName="name" variableExp="/0/@elements.12/@definition/@feature/@body/@condition/@source/@source/@source/@source/@source/@source/@source/@source/@source/@source/@source/@source/@source /0/@elements.12/@definition/@feature/@body/@condition/@source/@source/@source/@source/@source/@source/@source/@source/@source/@source/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@condition/@source/@source/@source/@source/@source/@source/@source/@source/@source/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@condition/@source/@source/@source/@source/@source/@source/@source/@source/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@condition/@source/@source/@source/@source/@source/@source/@source/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@condition/@source/@source/@source/@source/@source/@source/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@condition/@source/@source/@source/@source/@source/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@condition/@source/@source/@source/@source/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@condition/@source/@source/@source/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@condition/@source/@source/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@condition/@source/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@condition/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@condition/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@elseExpression/@condition/@source /0/@elements.12/@definition/@feature/@body/@elseExpression/@elseExpression/@condition/@source/@source/@source /0/@elements.12/@definition/@feature/@body/@elseExpression/@elseExpression/@condition/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@elseExpression/@elseExpression/@condition/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@source/@source/@source/@source/@source/@source /0/@elements.12/@definition/@feature/@body/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@source/@source/@source/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@source/@source/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@source/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@elseExpression/@elseExpression/@elseExpression/@condition/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@source/@source/@source/@source/@source/@source/@source /0/@elements.12/@definition/@feature/@body/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@source/@source/@source/@source/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@source/@source/@source/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@source/@source/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@source/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@arguments.0/@source /0/@elements.12/@definition/@feature/@body/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@arguments.0/@source">
            <type xsi:type="ocl:StringType" location="105:44-105:50"/>
          </parameters>
          <returnType xsi:type="ocl:StringType" location="105:54-105:60"/>
          <body xsi:type="ocl:IfExp" location="106:2-129:7">
            <thenExpression xsi:type="ocl:StringExp" location="110:7-110:14" stringSymbol="type1">
              <commentsAfter>-- SDL!SdlInteger</commentsAfter>
            </thenExpression>
            <condition xsi:type="ocl:OperatorCallExp" location="106:6-109:80" operationName="or">
              <source xsi:type="ocl:OperatorCallExp" location="106:6-109:55" operationName="or">
                <source xsi:type="ocl:OperatorCallExp" location="106:6-109:29" operationName="or">
                  <source xsi:type="ocl:OperatorCallExp" location="106:6-108:81" operationName="or">
                    <source xsi:type="ocl:OperatorCallExp" location="106:6-108:56" operationName="or">
                      <source xsi:type="ocl:OperatorCallExp" location="106:6-108:39" operationName="or">
                        <source xsi:type="ocl:OperatorCallExp" location="106:6-108:21" operationName="or">
                          <source xsi:type="ocl:OperatorCallExp" location="106:6-107:81" operationName="or">
                            <source xsi:type="ocl:OperatorCallExp" location="106:6-107:64" operationName="or">
                              <source xsi:type="ocl:OperatorCallExp" location="106:6-107:33" operationName="or">
                                <source xsi:type="ocl:OperatorCallExp" location="106:6-106:81" operationName="or">
                                  <source xsi:type="ocl:OperatorCallExp" location="106:6-106:50" operationName="or">
                                    <source xsi:type="ocl:OperatorCallExp" location="106:6-106:22" operationName="=">
                                      <source xsi:type="ocl:VariableExp" location="106:6-106:10" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                                      <arguments xsi:type="ocl:StringExp" location="106:13-106:22" stringSymbol="integer"/>
                                    </source>
                                    <arguments xsi:type="ocl:OperatorCallExp" location="106:26-106:50" operationName="=">
                                      <source xsi:type="ocl:VariableExp" location="106:26-106:30" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                                      <arguments xsi:type="ocl:StringExp" location="106:33-106:50" stringSymbol="positiveInteger"/>
                                    </arguments>
                                  </source>
                                  <arguments xsi:type="ocl:OperatorCallExp" location="106:54-106:81" operationName="=">
                                    <source xsi:type="ocl:VariableExp" location="106:54-106:58" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                                    <arguments xsi:type="ocl:StringExp" location="106:61-106:81" stringSymbol="nonPositiveInteger"/>
                                  </arguments>
                                </source>
                                <arguments xsi:type="ocl:OperatorCallExp" location="107:9-107:33" operationName="=">
                                  <source xsi:type="ocl:VariableExp" location="107:9-107:13" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                                  <arguments xsi:type="ocl:StringExp" location="107:16-107:33" stringSymbol="negativeInteger"/>
                                </arguments>
                              </source>
                              <arguments xsi:type="ocl:OperatorCallExp" location="107:37-107:64" operationName="=">
                                <source xsi:type="ocl:VariableExp" location="107:37-107:41" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                                <arguments xsi:type="ocl:StringExp" location="107:44-107:64" stringSymbol="nonNegativeInteger"/>
                              </arguments>
                            </source>
                            <arguments xsi:type="ocl:OperatorCallExp" location="107:68-107:81" operationName="=">
                              <source xsi:type="ocl:VariableExp" location="107:68-107:72" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                              <arguments xsi:type="ocl:StringExp" location="107:75-107:81" stringSymbol="long"/>
                            </arguments>
                          </source>
                          <arguments xsi:type="ocl:OperatorCallExp" location="108:9-108:21" operationName="=">
                            <source xsi:type="ocl:VariableExp" location="108:9-108:13" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                            <arguments xsi:type="ocl:StringExp" location="108:16-108:21" stringSymbol="int"/>
                          </arguments>
                        </source>
                        <arguments xsi:type="ocl:OperatorCallExp" location="108:25-108:39" operationName="=">
                          <source xsi:type="ocl:VariableExp" location="108:25-108:29" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                          <arguments xsi:type="ocl:StringExp" location="108:32-108:39" stringSymbol="short"/>
                        </arguments>
                      </source>
                      <arguments xsi:type="ocl:OperatorCallExp" location="108:43-108:56" operationName="=">
                        <source xsi:type="ocl:VariableExp" location="108:43-108:47" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                        <arguments xsi:type="ocl:StringExp" location="108:50-108:56" stringSymbol="byte"/>
                      </arguments>
                    </source>
                    <arguments xsi:type="ocl:OperatorCallExp" location="108:60-108:81" operationName="=">
                      <source xsi:type="ocl:VariableExp" location="108:60-108:64" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                      <arguments xsi:type="ocl:StringExp" location="108:67-108:81" stringSymbol="unsignedLong"/>
                    </arguments>
                  </source>
                  <arguments xsi:type="ocl:OperatorCallExp" location="109:9-109:29" operationName="=">
                    <source xsi:type="ocl:VariableExp" location="109:9-109:13" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                    <arguments xsi:type="ocl:StringExp" location="109:16-109:29" stringSymbol="unsignedInt"/>
                  </arguments>
                </source>
                <arguments xsi:type="ocl:OperatorCallExp" location="109:33-109:55" operationName="=">
                  <source xsi:type="ocl:VariableExp" location="109:33-109:37" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                  <arguments xsi:type="ocl:StringExp" location="109:40-109:55" stringSymbol="unsignedShort"/>
                </arguments>
              </source>
              <arguments xsi:type="ocl:OperatorCallExp" location="109:59-109:80" operationName="=">
                <source xsi:type="ocl:VariableExp" location="109:59-109:63" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                <arguments xsi:type="ocl:StringExp" location="109:66-109:80" stringSymbol="unsignedByte"/>
              </arguments>
            </condition>
            <elseExpression xsi:type="ocl:IfExp" location="111:7-128:9">
              <thenExpression xsi:type="ocl:StringExp" location="112:9-112:16" stringSymbol="type2">
                <commentsAfter>-- SDL!SdlBoolean</commentsAfter>
              </thenExpression>
              <condition xsi:type="ocl:OperatorCallExp" location="111:10-111:26" operationName="=">
                <source xsi:type="ocl:VariableExp" location="111:10-111:14" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                <arguments xsi:type="ocl:StringExp" location="111:17-111:26" stringSymbol="boolean"/>
              </condition>
              <elseExpression xsi:type="ocl:IfExp" location="113:9-127:11">
                <thenExpression xsi:type="ocl:StringExp" location="114:11-114:18" stringSymbol="type3">
                  <commentsAfter>-- SDL!SdlReal</commentsAfter>
                </thenExpression>
                <condition xsi:type="ocl:OperatorCallExp" location="113:12-113:65" operationName="or">
                  <source xsi:type="ocl:OperatorCallExp" location="113:12-113:46" operationName="or">
                    <source xsi:type="ocl:OperatorCallExp" location="113:12-113:28" operationName="=">
                      <source xsi:type="ocl:VariableExp" location="113:12-113:16" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                      <arguments xsi:type="ocl:StringExp" location="113:19-113:28" stringSymbol="decimal"/>
                    </source>
                    <arguments xsi:type="ocl:OperatorCallExp" location="113:32-113:46" operationName="=">
                      <source xsi:type="ocl:VariableExp" location="113:32-113:36" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                      <arguments xsi:type="ocl:StringExp" location="113:39-113:46" stringSymbol="float"/>
                    </arguments>
                  </source>
                  <arguments xsi:type="ocl:OperatorCallExp" location="113:50-113:65" operationName="=">
                    <source xsi:type="ocl:VariableExp" location="113:50-113:54" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                    <arguments xsi:type="ocl:StringExp" location="113:57-113:65" stringSymbol="double"/>
                  </arguments>
                </condition>
                <elseExpression xsi:type="ocl:IfExp" location="115:11-126:12">
                  <thenExpression xsi:type="ocl:StringExp" location="118:12-118:19" stringSymbol="type5">
                    <commentsAfter>-- SDL!SdlDateTime</commentsAfter>
                  </thenExpression>
                  <condition xsi:type="ocl:OperatorCallExp" location="115:14-117:57" operationName="or">
                    <source xsi:type="ocl:OperatorCallExp" location="115:14-117:40" operationName="or">
                      <source xsi:type="ocl:OperatorCallExp" location="115:14-117:21" operationName="or">
                        <source xsi:type="ocl:OperatorCallExp" location="115:14-116:48" operationName="or">
                          <source xsi:type="ocl:OperatorCallExp" location="115:14-116:26" operationName="or">
                            <source xsi:type="ocl:OperatorCallExp" location="115:14-115:65" operationName="or">
                              <source xsi:type="ocl:OperatorCallExp" location="115:14-115:48" operationName="or">
                                <source xsi:type="ocl:OperatorCallExp" location="115:14-115:31" operationName="=">
                                  <source xsi:type="ocl:VariableExp" location="115:14-115:18" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                                  <arguments xsi:type="ocl:StringExp" location="115:21-115:31" stringSymbol="dateTime"/>
                                </source>
                                <arguments xsi:type="ocl:OperatorCallExp" location="115:35-115:48" operationName="=">
                                  <source xsi:type="ocl:VariableExp" location="115:35-115:39" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                                  <arguments xsi:type="ocl:StringExp" location="115:42-115:48" stringSymbol="date"/>
                                </arguments>
                              </source>
                              <arguments xsi:type="ocl:OperatorCallExp" location="115:52-115:65" operationName="=">
                                <source xsi:type="ocl:VariableExp" location="115:52-115:56" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                                <arguments xsi:type="ocl:StringExp" location="115:59-115:65" stringSymbol="time"/>
                              </arguments>
                            </source>
                            <arguments xsi:type="ocl:OperatorCallExp" location="116:7-116:26" operationName="=">
                              <source xsi:type="ocl:VariableExp" location="116:7-116:11" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                              <arguments xsi:type="ocl:StringExp" location="116:14-116:26" stringSymbol="gYearMonth"/>
                            </arguments>
                          </source>
                          <arguments xsi:type="ocl:OperatorCallExp" location="116:30-116:48" operationName="=">
                            <source xsi:type="ocl:VariableExp" location="116:30-116:34" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                            <arguments xsi:type="ocl:StringExp" location="116:37-116:48" stringSymbol="gMonthDay"/>
                          </arguments>
                        </source>
                        <arguments xsi:type="ocl:OperatorCallExp" location="117:7-117:21" operationName="=">
                          <source xsi:type="ocl:VariableExp" location="117:7-117:11" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                          <arguments xsi:type="ocl:StringExp" location="117:14-117:21" stringSymbol="gYear"/>
                        </arguments>
                      </source>
                      <arguments xsi:type="ocl:OperatorCallExp" location="117:25-117:40" operationName="=">
                        <source xsi:type="ocl:VariableExp" location="117:25-117:29" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                        <arguments xsi:type="ocl:StringExp" location="117:32-117:40" stringSymbol="gMonth"/>
                      </arguments>
                    </source>
                    <arguments xsi:type="ocl:OperatorCallExp" location="117:44-117:57" operationName="=">
                      <source xsi:type="ocl:VariableExp" location="117:44-117:48" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                      <arguments xsi:type="ocl:StringExp" location="117:51-117:57" stringSymbol="gDay"/>
                    </arguments>
                  </condition>
                  <elseExpression xsi:type="ocl:IfExp" location="119:13-125:13">
                    <thenExpression xsi:type="ocl:StringExp" location="123:14-123:21" stringSymbol="type4">
                      <commentsAfter>--  SDL!SdlString</commentsAfter>
                    </thenExpression>
                    <condition xsi:type="ocl:OperatorCallExp" location="119:16-122:52" operationName="or">
                      <source xsi:type="ocl:OperatorCallExp" location="119:16-122:27" operationName="or">
                        <source xsi:type="ocl:OperatorCallExp" location="119:16-121:41" operationName="or">
                          <source xsi:type="ocl:OperatorCallExp" location="119:16-121:22" operationName="or">
                            <source xsi:type="ocl:OperatorCallExp" location="119:16-120:65" operationName="or">
                              <source xsi:type="ocl:OperatorCallExp" location="119:16-120:45" operationName="or">
                                <source xsi:type="ocl:OperatorCallExp" location="119:16-120:24" operationName="or">
                                  <source xsi:type="ocl:OperatorCallExp" location="119:16-119:60" operationName="or">
                                    <source xsi:type="ocl:OperatorCallExp" location="119:16-119:31" operationName="=">
                                      <source xsi:type="ocl:VariableExp" location="119:16-119:20" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                                      <arguments xsi:type="ocl:StringExp" location="119:23-119:31" stringSymbol="string"/>
                                    </source>
                                    <arguments xsi:type="ocl:OperatorCallExp" location="119:35-119:60" operationName="=">
                                      <source xsi:type="ocl:VariableExp" location="119:35-119:39" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                                      <arguments xsi:type="ocl:StringExp" location="119:42-119:60" stringSymbol="normalizedString"/>
                                    </arguments>
                                  </source>
                                  <arguments xsi:type="ocl:OperatorCallExp" location="120:10-120:24" operationName="=">
                                    <source xsi:type="ocl:VariableExp" location="120:10-120:14" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                                    <arguments xsi:type="ocl:StringExp" location="120:17-120:24" stringSymbol="token"/>
                                  </arguments>
                                </source>
                                <arguments xsi:type="ocl:OperatorCallExp" location="120:28-120:45" operationName="=">
                                  <source xsi:type="ocl:VariableExp" location="120:28-120:32" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                                  <arguments xsi:type="ocl:StringExp" location="120:35-120:45" stringSymbol="language"/>
                                </arguments>
                              </source>
                              <arguments xsi:type="ocl:OperatorCallExp" location="120:49-120:65" operationName="=">
                                <source xsi:type="ocl:VariableExp" location="120:49-120:53" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                                <arguments xsi:type="ocl:StringExp" location="120:56-120:65" stringSymbol="NMTOKEN"/>
                              </arguments>
                            </source>
                            <arguments xsi:type="ocl:OperatorCallExp" location="121:9-121:22" operationName="=">
                              <source xsi:type="ocl:VariableExp" location="121:9-121:13" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                              <arguments xsi:type="ocl:StringExp" location="121:16-121:22" stringSymbol="Name"/>
                            </arguments>
                          </source>
                          <arguments xsi:type="ocl:OperatorCallExp" location="121:26-121:41" operationName="=">
                            <source xsi:type="ocl:VariableExp" location="121:26-121:30" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                            <arguments xsi:type="ocl:StringExp" location="121:33-121:41" stringSymbol="NCName"/>
                          </arguments>
                        </source>
                        <arguments xsi:type="ocl:OperatorCallExp" location="122:9-122:27" operationName="=">
                          <source xsi:type="ocl:VariableExp" location="122:9-122:13" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                          <arguments xsi:type="ocl:StringExp" location="122:16-122:27" stringSymbol="hexBinary"/>
                        </arguments>
                      </source>
                      <arguments xsi:type="ocl:OperatorCallExp" location="122:31-122:52" operationName="=">
                        <source xsi:type="ocl:VariableExp" location="122:31-122:35" referredVariable="/0/@elements.12/@definition/@feature/@parameters.0"/>
                        <arguments xsi:type="ocl:StringExp" location="122:38-122:52" stringSymbol="base64Binary"/>
                      </arguments>
                    </condition>
                    <elseExpression xsi:type="ocl:StringExp" location="124:13-124:20" stringSymbol="type4">
                      <commentsAfter>-- default for unsupported types: SDL!SdlString</commentsAfter>
                    </elseExpression>
                  </elseExpression>
                </elseExpression>
              </elseExpression>
            </elseExpression>
          </body>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="134:1-139:2">
      <commentsBefore>-- Returns a sequence with a 'fake' element if the size of the </commentsBefore>
      <commentsBefore>-- provided sequence is 0, otherwise it returns an empty sequence.</commentsBefore>
      <commentsAfter>-- Returns a sequence of all the SSL!ServiceInput and SSL!ServiceOutput </commentsAfter>
      <commentsAfter>-- that have the Type attribute equal to the specified SSL!DataTypeURI.</commentsAfter>
      <definition location="134:8-138:7">
        <feature xsi:type="ocl:Operation" location="134:13-138:7" name="getFakeDatatypeSequence">
          <parameters location="134:37-134:71" varName="m" variableExp="/0/@elements.13/@definition/@feature/@body/@condition/@source/@source">
            <type xsi:type="ocl:SequenceType" location="134:41-134:71">
              <elementType xsi:type="ocl:OclModelElement" location="134:50-134:70" name="DatatypeProperty" model="/3"/>
            </type>
          </parameters>
          <returnType xsi:type="ocl:SequenceType" location="134:75-134:91">
            <elementType xsi:type="ocl:StringType" location="134:84-134:90"/>
          </returnType>
          <body xsi:type="ocl:IfExp" location="135:2-138:7">
            <thenExpression xsi:type="ocl:SequenceExp" location="136:8-136:20">
              <elements xsi:type="ocl:StringExp" location="136:17-136:19" stringSymbol=""/>
            </thenExpression>
            <condition xsi:type="ocl:OperatorCallExp" location="135:5-135:17" operationName="=">
              <source xsi:type="ocl:OperationCallExp" location="135:5-135:13" operationName="size">
                <source xsi:type="ocl:VariableExp" location="135:5-135:6" referredVariable="/0/@elements.13/@definition/@feature/@parameters.0"/>
              </source>
              <arguments xsi:type="ocl:IntegerExp" location="135:16-135:17"/>
            </condition>
            <elseExpression xsi:type="ocl:SequenceExp" location="137:8-137:18"/>
          </body>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="143:1-145:2">
      <commentsBefore>-- Returns a sequence of all the SSL!ServiceInput and SSL!ServiceOutput </commentsBefore>
      <commentsBefore>-- that have the Type attribute equal to the specified SSL!DataTypeURI.</commentsBefore>
      <commentsAfter>-- An SSL!OntologyClassURI element contains the id of an element in the </commentsAfter>
      <commentsAfter>-- associated ontology.</commentsAfter>
      <commentsAfter>-- For every SSL!OntologyClassURI element that is the Type attribute of a </commentsAfter>
      <commentsAfter>-- SSL!ServiceInput, this rule creates:</commentsAfter>
      <commentsAfter>-- 1) a SDL!ComplexType that has a SDL!Part for each ODM!DatatypeProperty </commentsAfter>
      <commentsAfter>-- in which this class is reffered (by id). If there is no such </commentsAfter>
      <commentsAfter>-- ODM!DatatypeProperty, by default a SDL!Part with the type SDL!String </commentsAfter>
      <commentsAfter>-- is created</commentsAfter>
      <commentsAfter>-- 2) if this element is the Type of a SSL!ServiceInput that belongs </commentsAfter>
      <commentsAfter>-- to a SSL!ServiceFunctionality with multiple inputs, then a SDL!Part </commentsAfter>
      <commentsAfter>-- that has a reference to the generated SDL!ComplexType is created</commentsAfter>
      <commentsAfter>-- (and it will be included in the element obtained from the transformation </commentsAfter>
      <commentsAfter>-- of that SSL!ServiceFunctionality)</commentsAfter>
      <definition location="143:8-144:148">
        <feature xsi:type="ocl:Operation" location="143:13-144:148" name="getInputOutputHavingURIType">
          <parameters location="143:41-143:60" varName="t" variableExp="/0/@elements.14/@definition/@feature/@body/@body/@arguments.0">
            <type xsi:type="ocl:OclModelElement" location="143:45-143:60" name="DataTypeURI" model="/2"/>
          </parameters>
          <returnType xsi:type="ocl:SequenceType" location="143:64-143:100">
            <elementType xsi:type="ocl:OclModelElement" location="143:73-143:99" name="FunctionalityParameter" model="/2"/>
          </returnType>
          <body xsi:type="ocl:IteratorExp" location="144:2-144:148" name="select">
            <source xsi:type="ocl:CollectionOperationCallExp" location="144:2-144:122" operationName="flatten">
              <source xsi:type="ocl:SequenceExp" location="144:2-144:109">
                <elements xsi:type="ocl:CollectionOperationCallExp" location="144:11-144:58" operationName="asSequence">
                  <source xsi:type="ocl:OperationCallExp" location="144:11-144:42" operationName="allInstances">
                    <source xsi:type="ocl:OclModelElement" location="144:11-144:27" name="ServiceInput" model="/2"/>
                  </source>
                </elements>
                <elements xsi:type="ocl:CollectionOperationCallExp" location="144:60-144:108" operationName="asSequence">
                  <source xsi:type="ocl:OperationCallExp" location="144:60-144:92" operationName="allInstances">
                    <source xsi:type="ocl:OclModelElement" location="144:60-144:77" name="ServiceOutput" model="/2"/>
                  </source>
                </elements>
              </source>
            </source>
            <body xsi:type="ocl:OperatorCallExp" location="144:137-144:147" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="144:137-144:143" name="Type">
                <source xsi:type="ocl:VariableExp" location="144:137-144:138" referredVariable="/0/@elements.14/@definition/@feature/@body/@iterators.0"/>
              </source>
              <arguments xsi:type="ocl:VariableExp" location="144:146-144:147" referredVariable="/0/@elements.14/@definition/@feature/@parameters.0"/>
            </body>
            <iterators location="144:133-144:134" varName="e" variableExp="/0/@elements.14/@definition/@feature/@body/@body/@source/@source"/>
          </body>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="160:1-192:2" name="TypeFromOntology_Input">
      <commentsBefore>-- An SSL!OntologyClassURI element contains the id of an element in the </commentsBefore>
      <commentsBefore>-- associated ontology.</commentsBefore>
      <commentsBefore>-- For every SSL!OntologyClassURI element that is the Type attribute of a </commentsBefore>
      <commentsBefore>-- SSL!ServiceInput, this rule creates:</commentsBefore>
      <commentsBefore>-- 1) a SDL!ComplexType that has a SDL!Part for each ODM!DatatypeProperty </commentsBefore>
      <commentsBefore>-- in which this class is reffered (by id). If there is no such </commentsBefore>
      <commentsBefore>-- ODM!DatatypeProperty, by default a SDL!Part with the type SDL!String </commentsBefore>
      <commentsBefore>-- is created</commentsBefore>
      <commentsBefore>-- 2) if this element is the Type of a SSL!ServiceInput that belongs </commentsBefore>
      <commentsBefore>-- to a SSL!ServiceFunctionality with multiple inputs, then a SDL!Part </commentsBefore>
      <commentsBefore>-- that has a reference to the generated SDL!ComplexType is created</commentsBefore>
      <commentsBefore>-- (and it will be included in the element obtained from the transformation </commentsBefore>
      <commentsBefore>-- of that SSL!ServiceFunctionality)</commentsBefore>
      <commentsAfter>-- The same transformation as TypeFromOntology_Input, but for types </commentsAfter>
      <commentsAfter>-- that belong to a ServiceOutput.</commentsAfter>
      <outPattern location="169:2-190:3">
        <elements xsi:type="atl:SimpleOutPatternElement" location="169:5-172:3" varName="complex" variableExp="/0/@elements.15/@outPattern/@elements.3/@bindings.1/@value">
          <type xsi:type="ocl:OclModelElement" location="169:15-169:30" name="ComplexType" model="/1"/>
          <bindings location="170:3-170:40" propertyName="ElName">
            <value xsi:type="ocl:OperatorCallExp" location="170:13-170:40" operationName="+">
              <source xsi:type="ocl:VariableExp" location="170:13-170:25" referredVariable="/0/@elements.15/@variables.1"/>
              <arguments xsi:type="ocl:StringExp" location="170:28-170:40" stringSymbol="Parameters"/>
            </value>
          </bindings>
          <bindings location="171:3-171:38" propertyName="cmpPart">
            <value xsi:type="ocl:SequenceExp" location="171:14-171:38">
              <elements xsi:type="ocl:VariableExp" location="171:23-171:29" referredVariable="/0/@elements.15/@outPattern/@elements.1"/>
              <elements xsi:type="ocl:VariableExp" location="171:31-171:37" referredVariable="/0/@elements.15/@outPattern/@elements.2"/>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:ForEachOutPatternElement" location="173:2-178:3" varName="part_a" variableExp="/0/@elements.15/@outPattern/@elements.0/@bindings.1/@value/@elements.0">
          <type xsi:type="ocl:OclModelElement" location="173:20-173:28" name="Part" model="/1"/>
          <bindings location="174:3-174:19" propertyName="ElName">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="174:13-174:19" name="name">
              <source xsi:type="ocl:VariableExp" location="174:13-174:14" referredVariable="/0/@elements.15/@outPattern/@elements.1/@iterator"/>
            </value>
          </bindings>
          <bindings location="175:3-177:4" propertyName="refPart">
            <value xsi:type="ocl:OperationCallExp" location="175:14-177:4" operationName="resolveTemp">
              <source xsi:type="ocl:VariableExp" location="175:14-175:24" referredVariable="/13"/>
              <arguments xsi:type="ocl:OperationCallExp" location="175:37-175:66" operationName="getTypeGenerator">
                <source xsi:type="ocl:VariableExp" location="175:37-175:47" referredVariable="/14"/>
              </arguments>
              <arguments xsi:type="ocl:OperationCallExp" location="176:4-176:47" operationName="getSDLTypeForODM">
                <source xsi:type="ocl:VariableExp" location="176:4-176:14" referredVariable="/15"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="176:32-176:46" name="theDataRange">
                  <source xsi:type="ocl:VariableExp" location="176:32-176:33" referredVariable="/0/@elements.15/@outPattern/@elements.1/@iterator"/>
                </arguments>
              </arguments>
            </value>
          </bindings>
          <collection xsi:type="ocl:VariableExp" location="173:42-173:52" referredVariable="/0/@elements.15/@variables.0"/>
          <iterator location="173:37-173:38" varName="a" variableExp="/0/@elements.15/@outPattern/@elements.1/@bindings.0/@value/@source /0/@elements.15/@outPattern/@elements.1/@bindings.1/@value/@arguments.1/@arguments.0/@source"/>
        </elements>
        <elements xsi:type="atl:ForEachOutPatternElement" location="179:2-184:3" varName="part_b" variableExp="/0/@elements.15/@outPattern/@elements.0/@bindings.1/@value/@elements.1">
          <type xsi:type="ocl:OclModelElement" location="179:20-179:28" name="Part" model="/1"/>
          <bindings location="180:3-180:58" propertyName="ElName">
            <value xsi:type="ocl:OperationCallExp" location="180:13-180:58" operationName="getOntologyIDName">
              <source xsi:type="ocl:VariableExp" location="180:13-180:23" referredVariable="/17"/>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="180:42-180:57" name="lexicalform">
                <source xsi:type="ocl:VariableExp" location="180:42-180:45" referredVariable="/0/@elements.15/@inPattern/@elements.0"/>
              </arguments>
            </value>
          </bindings>
          <bindings location="181:3-183:4" propertyName="refPart">
            <value xsi:type="ocl:OperationCallExp" location="181:14-183:4" operationName="resolveTemp">
              <source xsi:type="ocl:VariableExp" location="181:14-181:24" referredVariable="/18"/>
              <arguments xsi:type="ocl:OperationCallExp" location="181:37-181:66" operationName="getTypeGenerator">
                <source xsi:type="ocl:VariableExp" location="181:37-181:47" referredVariable="/19"/>
              </arguments>
              <arguments xsi:type="ocl:OperationCallExp" location="182:4-182:41" operationName="getSDLTypeForODM_Default">
                <source xsi:type="ocl:VariableExp" location="182:4-182:14" referredVariable="/20"/>
              </arguments>
            </value>
          </bindings>
          <collection xsi:type="ocl:OperationCallExp" location="179:42-179:88" operationName="getFakeDatatypeSequence">
            <source xsi:type="ocl:VariableExp" location="179:42-179:52" referredVariable="/16"/>
            <arguments xsi:type="ocl:VariableExp" location="179:77-179:87" referredVariable="/0/@elements.15/@variables.0"/>
          </collection>
          <iterator location="179:37-179:38" varName="c"/>
        </elements>
        <elements xsi:type="atl:ForEachOutPatternElement" location="186:2-190:3" varName="part_c">
          <type xsi:type="ocl:OclModelElement" location="186:21-186:29" name="Part" model="/1"/>
          <bindings location="188:3-188:25" propertyName="ElName">
            <value xsi:type="ocl:VariableExp" location="188:13-188:25" referredVariable="/0/@elements.15/@variables.1"/>
          </bindings>
          <bindings location="189:3-189:21" propertyName="refPart">
            <value xsi:type="ocl:VariableExp" location="189:14-189:21" referredVariable="/0/@elements.15/@outPattern/@elements.0"/>
          </bindings>
          <collection xsi:type="ocl:IteratorExp" location="186:43-187:105" name="select">
            <source xsi:type="ocl:IteratorExp" location="186:43-187:43" name="select">
              <source xsi:type="ocl:OperationCallExp" location="186:43-186:82" operationName="allInstances">
                <source xsi:type="ocl:OclModelElement" location="186:43-186:67" name="ServiceFunctionality" model="/2"/>
              </source>
              <body xsi:type="ocl:OperatorCallExp" location="187:24-187:42" operationName=">">
                <source xsi:type="ocl:OperationCallExp" location="187:24-187:38" operationName="size">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="187:24-187:31" name="Input">
                    <source xsi:type="ocl:VariableExp" location="187:24-187:25" referredVariable="/0/@elements.15/@outPattern/@elements.3/@collection/@source/@iterators.0"/>
                  </source>
                </source>
                <arguments xsi:type="ocl:IntegerExp" location="187:41-187:42" integerSymbol="1"/>
              </body>
              <iterators location="187:20-187:21" varName="c" variableExp="/0/@elements.15/@outPattern/@elements.3/@collection/@source/@body/@source/@source/@source"/>
            </source>
            <body xsi:type="ocl:OperatorCallExp" location="187:58-187:104" operationName=">">
              <source xsi:type="ocl:OperationCallExp" location="187:58-187:100" operationName="size">
                <source xsi:type="ocl:IteratorExp" location="187:58-187:93" name="select">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="187:58-187:65" name="Input">
                    <source xsi:type="ocl:VariableExp" location="187:58-187:59" referredVariable="/0/@elements.15/@outPattern/@elements.3/@collection/@iterators.0"/>
                  </source>
                  <body xsi:type="ocl:OperatorCallExp" location="187:80-187:92" operationName="=">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="187:80-187:86" name="Type">
                      <source xsi:type="ocl:VariableExp" location="187:80-187:81" referredVariable="/0/@elements.15/@outPattern/@elements.3/@collection/@body/@source/@source/@iterators.0"/>
                    </source>
                    <arguments xsi:type="ocl:VariableExp" location="187:89-187:92" referredVariable="/0/@elements.15/@inPattern/@elements.0"/>
                  </body>
                  <iterators location="187:76-187:77" varName="u" variableExp="/0/@elements.15/@outPattern/@elements.3/@collection/@body/@source/@source/@body/@source/@source"/>
                </source>
              </source>
              <arguments xsi:type="ocl:IntegerExp" location="187:103-187:104"/>
            </body>
            <iterators location="187:54-187:55" varName="v" variableExp="/0/@elements.15/@outPattern/@elements.3/@collection/@body/@source/@source/@source/@source"/>
          </collection>
          <iterator location="186:38-186:39" varName="b"/>
        </elements>
      </outPattern>
      <variables location="165:3-166:89" varName="properties" variableExp="/0/@elements.15/@outPattern/@elements.1/@collection /0/@elements.15/@outPattern/@elements.2/@collection/@arguments.0">
        <type xsi:type="ocl:SequenceType" location="165:16-165:46">
          <elementType xsi:type="ocl:OclModelElement" location="165:25-165:45" name="DatatypeProperty" model="/3"/>
        </type>
        <initExpression xsi:type="ocl:OperationCallExp" location="166:4-166:88" operationName="getDataTypePropertiesForId">
          <source xsi:type="ocl:VariableExp" location="166:4-166:14" referredVariable="/10"/>
          <arguments xsi:type="ocl:OperationCallExp" location="166:42-166:87" operationName="getOntologyIDName">
            <source xsi:type="ocl:VariableExp" location="166:42-166:52" referredVariable="/11"/>
            <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="166:71-166:86" name="lexicalform">
              <source xsi:type="ocl:VariableExp" location="166:71-166:74" referredVariable="/0/@elements.15/@inPattern/@elements.0"/>
            </arguments>
          </arguments>
        </initExpression>
      </variables>
      <variables location="167:3-167:70" varName="service_name" variableExp="/0/@elements.15/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.15/@outPattern/@elements.3/@bindings.0/@value">
        <type xsi:type="ocl:OclModelElement" location="167:18-167:34" name="ServiceInput" model="/2"/>
        <initExpression xsi:type="ocl:OperationCallExp" location="167:37-167:69" operationName="inputMessageName">
          <source xsi:type="ocl:VariableExp" location="167:37-167:47" referredVariable="/12"/>
          <arguments xsi:type="ocl:VariableExp" location="167:65-167:68" referredVariable="/0/@elements.15/@inPattern/@elements.0"/>
        </initExpression>
      </variables>
      <inPattern location="161:2-163:5">
        <elements xsi:type="atl:SimpleInPatternElement" location="161:7-161:33" varName="inp" variableExp="/0/@elements.15/@inPattern/@filter/@source/@source/@body/@arguments.0 /0/@elements.15/@variables.0/@initExpression/@arguments.0/@arguments.0/@source /0/@elements.15/@variables.1/@initExpression/@arguments.0 /0/@elements.15/@outPattern/@elements.2/@bindings.0/@value/@arguments.0/@source /0/@elements.15/@outPattern/@elements.3/@collection/@body/@source/@source/@body/@arguments.0">
          <type xsi:type="ocl:OclModelElement" location="161:13-161:33" name="OntologyClassURI" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperatorCallExp" location="162:5-162:78" operationName=">">
          <source xsi:type="ocl:CollectionOperationCallExp" location="162:5-162:74" operationName="size">
            <source xsi:type="ocl:IteratorExp" location="162:5-162:64" name="select">
              <source xsi:type="ocl:OperationCallExp" location="162:5-162:36" operationName="allInstances">
                <source xsi:type="ocl:OclModelElement" location="162:5-162:21" name="ServiceInput" model="/2"/>
              </source>
              <body xsi:type="ocl:OperatorCallExp" location="162:51-162:63" operationName="=">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="162:51-162:57" name="Type">
                  <source xsi:type="ocl:VariableExp" location="162:51-162:52" referredVariable="/0/@elements.15/@inPattern/@filter/@source/@source/@iterators.0"/>
                </source>
                <arguments xsi:type="ocl:VariableExp" location="162:60-162:63" referredVariable="/0/@elements.15/@inPattern/@elements.0"/>
              </body>
              <iterators location="162:47-162:48" varName="e" variableExp="/0/@elements.15/@inPattern/@filter/@source/@source/@body/@source/@source"/>
            </source>
          </source>
          <arguments xsi:type="ocl:IntegerExp" location="162:77-162:78"/>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="196:1-227:2" name="TypeFromOntology_Output">
      <commentsBefore>-- The same transformation as TypeFromOntology_Input, but for types </commentsBefore>
      <commentsBefore>-- that belong to a ServiceOutput.</commentsBefore>
      <commentsAfter>-- A SSL!DataTypeURI element refers to a type defined in a specified XMLSchema.</commentsAfter>
      <commentsAfter>-- For every SSL!DataTypeURI element that is the Type attribute of a </commentsAfter>
      <commentsAfter>-- SSL!ServiceInput or a SSL!ServiceOutput, this rule creates a </commentsAfter>
      <commentsAfter>-- SDL!Part that refers to the corresponding SDL type </commentsAfter>
      <commentsAfter>-- (see the helper getSDLTypeForSchemaType).</commentsAfter>
      <outPattern location="205:2-226:3">
        <elements xsi:type="atl:SimpleOutPatternElement" location="205:5-208:3" varName="complex" variableExp="/0/@elements.16/@outPattern/@elements.3/@bindings.1/@value">
          <type xsi:type="ocl:OclModelElement" location="205:15-205:30" name="ComplexType" model="/1"/>
          <bindings location="206:3-206:40" propertyName="ElName">
            <value xsi:type="ocl:OperatorCallExp" location="206:13-206:40" operationName="+">
              <source xsi:type="ocl:VariableExp" location="206:13-206:25" referredVariable="/0/@elements.16/@variables.1"/>
              <arguments xsi:type="ocl:StringExp" location="206:28-206:40" stringSymbol="Parameters"/>
            </value>
          </bindings>
          <bindings location="207:3-207:38" propertyName="cmpPart">
            <value xsi:type="ocl:SequenceExp" location="207:14-207:38">
              <elements xsi:type="ocl:VariableExp" location="207:23-207:29" referredVariable="/0/@elements.16/@outPattern/@elements.1"/>
              <elements xsi:type="ocl:VariableExp" location="207:31-207:37" referredVariable="/0/@elements.16/@outPattern/@elements.2"/>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:ForEachOutPatternElement" location="209:2-214:3" varName="part_a" variableExp="/0/@elements.16/@outPattern/@elements.0/@bindings.1/@value/@elements.0">
          <type xsi:type="ocl:OclModelElement" location="209:20-209:28" name="Part" model="/1"/>
          <bindings location="210:3-210:19" propertyName="ElName">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="210:13-210:19" name="name">
              <source xsi:type="ocl:VariableExp" location="210:13-210:14" referredVariable="/0/@elements.16/@outPattern/@elements.1/@iterator"/>
            </value>
          </bindings>
          <bindings location="211:3-213:5" propertyName="refPart">
            <value xsi:type="ocl:OperationCallExp" location="211:14-213:5" operationName="resolveTemp">
              <source xsi:type="ocl:VariableExp" location="211:14-211:24" referredVariable="/24"/>
              <arguments xsi:type="ocl:OperationCallExp" location="211:37-211:66" operationName="getTypeGenerator">
                <source xsi:type="ocl:VariableExp" location="211:37-211:47" referredVariable="/25"/>
              </arguments>
              <arguments xsi:type="ocl:OperationCallExp" location="212:4-212:47" operationName="getSDLTypeForODM">
                <source xsi:type="ocl:VariableExp" location="212:4-212:14" referredVariable="/26"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="212:32-212:46" name="theDataRange">
                  <source xsi:type="ocl:VariableExp" location="212:32-212:33" referredVariable="/0/@elements.16/@outPattern/@elements.1/@iterator"/>
                </arguments>
              </arguments>
            </value>
          </bindings>
          <collection xsi:type="ocl:VariableExp" location="209:42-209:52" referredVariable="/0/@elements.16/@variables.0"/>
          <iterator location="209:37-209:38" varName="a" variableExp="/0/@elements.16/@outPattern/@elements.1/@bindings.0/@value/@source /0/@elements.16/@outPattern/@elements.1/@bindings.1/@value/@arguments.1/@arguments.0/@source"/>
        </elements>
        <elements xsi:type="atl:ForEachOutPatternElement" location="215:2-220:3" varName="part_b" variableExp="/0/@elements.16/@outPattern/@elements.0/@bindings.1/@value/@elements.1">
          <type xsi:type="ocl:OclModelElement" location="215:20-215:28" name="Part" model="/1"/>
          <bindings location="216:3-216:58" propertyName="ElName">
            <value xsi:type="ocl:OperationCallExp" location="216:13-216:58" operationName="getOntologyIDName">
              <source xsi:type="ocl:VariableExp" location="216:13-216:23" referredVariable="/28"/>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="216:42-216:57" name="lexicalform">
                <source xsi:type="ocl:VariableExp" location="216:42-216:45" referredVariable="/0/@elements.16/@inPattern/@elements.0"/>
              </arguments>
            </value>
          </bindings>
          <bindings location="217:3-219:4" propertyName="refPart">
            <value xsi:type="ocl:OperationCallExp" location="217:14-219:4" operationName="resolveTemp">
              <source xsi:type="ocl:VariableExp" location="217:14-217:24" referredVariable="/29"/>
              <arguments xsi:type="ocl:OperationCallExp" location="217:37-217:66" operationName="getTypeGenerator">
                <source xsi:type="ocl:VariableExp" location="217:37-217:47" referredVariable="/30"/>
              </arguments>
              <arguments xsi:type="ocl:OperationCallExp" location="218:4-218:41" operationName="getSDLTypeForODM_Default">
                <source xsi:type="ocl:VariableExp" location="218:4-218:14" referredVariable="/31"/>
              </arguments>
            </value>
          </bindings>
          <collection xsi:type="ocl:OperationCallExp" location="215:43-215:89" operationName="getFakeDatatypeSequence">
            <source xsi:type="ocl:VariableExp" location="215:43-215:53" referredVariable="/27"/>
            <arguments xsi:type="ocl:VariableExp" location="215:78-215:88" referredVariable="/0/@elements.16/@variables.0"/>
          </collection>
          <iterator location="215:38-215:39" varName="c"/>
        </elements>
        <elements xsi:type="atl:ForEachOutPatternElement" location="222:2-226:3" varName="part_c">
          <type xsi:type="ocl:OclModelElement" location="222:21-222:29" name="Part" model="/1"/>
          <bindings location="224:3-224:25" propertyName="ElName">
            <value xsi:type="ocl:VariableExp" location="224:13-224:25" referredVariable="/0/@elements.16/@variables.1"/>
          </bindings>
          <bindings location="225:3-225:21" propertyName="refPart">
            <value xsi:type="ocl:VariableExp" location="225:14-225:21" referredVariable="/0/@elements.16/@outPattern/@elements.0"/>
          </bindings>
          <collection xsi:type="ocl:IteratorExp" location="222:43-223:107" name="select">
            <source xsi:type="ocl:IteratorExp" location="222:43-223:44" name="select">
              <source xsi:type="ocl:OperationCallExp" location="222:43-222:82" operationName="allInstances">
                <source xsi:type="ocl:OclModelElement" location="222:43-222:67" name="ServiceFunctionality" model="/2"/>
              </source>
              <body xsi:type="ocl:OperatorCallExp" location="223:24-223:43" operationName=">">
                <source xsi:type="ocl:OperationCallExp" location="223:24-223:39" operationName="size">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="223:24-223:32" name="Output">
                    <source xsi:type="ocl:VariableExp" location="223:24-223:25" referredVariable="/0/@elements.16/@outPattern/@elements.3/@collection/@source/@iterators.0"/>
                  </source>
                </source>
                <arguments xsi:type="ocl:IntegerExp" location="223:42-223:43" integerSymbol="1"/>
              </body>
              <iterators location="223:20-223:21" varName="c" variableExp="/0/@elements.16/@outPattern/@elements.3/@collection/@source/@body/@source/@source/@source"/>
            </source>
            <body xsi:type="ocl:OperatorCallExp" location="223:59-223:106" operationName=">">
              <source xsi:type="ocl:OperationCallExp" location="223:59-223:102" operationName="size">
                <source xsi:type="ocl:IteratorExp" location="223:59-223:95" name="select">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="223:59-223:67" name="Output">
                    <source xsi:type="ocl:VariableExp" location="223:59-223:60" referredVariable="/0/@elements.16/@outPattern/@elements.3/@collection/@iterators.0"/>
                  </source>
                  <body xsi:type="ocl:OperatorCallExp" location="223:82-223:94" operationName="=">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="223:82-223:88" name="Type">
                      <source xsi:type="ocl:VariableExp" location="223:82-223:83" referredVariable="/0/@elements.16/@outPattern/@elements.3/@collection/@body/@source/@source/@iterators.0"/>
                    </source>
                    <arguments xsi:type="ocl:VariableExp" location="223:91-223:94" referredVariable="/0/@elements.16/@inPattern/@elements.0"/>
                  </body>
                  <iterators location="223:78-223:79" varName="u" variableExp="/0/@elements.16/@outPattern/@elements.3/@collection/@body/@source/@source/@body/@source/@source"/>
                </source>
              </source>
              <arguments xsi:type="ocl:IntegerExp" location="223:105-223:106"/>
            </body>
            <iterators location="223:55-223:56" varName="v" variableExp="/0/@elements.16/@outPattern/@elements.3/@collection/@body/@source/@source/@source/@source"/>
          </collection>
          <iterator location="222:38-222:39" varName="b"/>
        </elements>
      </outPattern>
      <variables location="201:3-202:89" varName="properties" variableExp="/0/@elements.16/@outPattern/@elements.1/@collection /0/@elements.16/@outPattern/@elements.2/@collection/@arguments.0">
        <type xsi:type="ocl:SequenceType" location="201:16-201:46">
          <elementType xsi:type="ocl:OclModelElement" location="201:25-201:45" name="DatatypeProperty" model="/3"/>
        </type>
        <initExpression xsi:type="ocl:OperationCallExp" location="202:4-202:88" operationName="getDataTypePropertiesForId">
          <source xsi:type="ocl:VariableExp" location="202:4-202:14" referredVariable="/21"/>
          <arguments xsi:type="ocl:OperationCallExp" location="202:42-202:87" operationName="getOntologyIDName">
            <source xsi:type="ocl:VariableExp" location="202:42-202:52" referredVariable="/22"/>
            <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="202:71-202:86" name="lexicalform">
              <source xsi:type="ocl:VariableExp" location="202:71-202:74" referredVariable="/0/@elements.16/@inPattern/@elements.0"/>
            </arguments>
          </arguments>
        </initExpression>
      </variables>
      <variables location="203:3-203:72" varName="service_name" variableExp="/0/@elements.16/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.16/@outPattern/@elements.3/@bindings.0/@value">
        <type xsi:type="ocl:OclModelElement" location="203:18-203:35" name="ServiceOutput" model="/2"/>
        <initExpression xsi:type="ocl:OperationCallExp" location="203:38-203:71" operationName="outputMessageName">
          <source xsi:type="ocl:VariableExp" location="203:38-203:48" referredVariable="/23"/>
          <arguments xsi:type="ocl:VariableExp" location="203:67-203:70" referredVariable="/0/@elements.16/@inPattern/@elements.0"/>
        </initExpression>
      </variables>
      <inPattern location="197:2-199:5">
        <elements xsi:type="atl:SimpleInPatternElement" location="197:7-197:33" varName="inp" variableExp="/0/@elements.16/@inPattern/@filter/@source/@source/@body/@arguments.0 /0/@elements.16/@variables.0/@initExpression/@arguments.0/@arguments.0/@source /0/@elements.16/@variables.1/@initExpression/@arguments.0 /0/@elements.16/@outPattern/@elements.2/@bindings.0/@value/@arguments.0/@source /0/@elements.16/@outPattern/@elements.3/@collection/@body/@source/@source/@body/@arguments.0">
          <type xsi:type="ocl:OclModelElement" location="197:13-197:33" name="OntologyClassURI" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperatorCallExp" location="198:5-198:79" operationName=">">
          <source xsi:type="ocl:CollectionOperationCallExp" location="198:5-198:75" operationName="size">
            <source xsi:type="ocl:IteratorExp" location="198:5-198:65" name="select">
              <source xsi:type="ocl:OperationCallExp" location="198:5-198:37" operationName="allInstances">
                <source xsi:type="ocl:OclModelElement" location="198:5-198:22" name="ServiceOutput" model="/2"/>
              </source>
              <body xsi:type="ocl:OperatorCallExp" location="198:52-198:64" operationName="=">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="198:52-198:58" name="Type">
                  <source xsi:type="ocl:VariableExp" location="198:52-198:53" referredVariable="/0/@elements.16/@inPattern/@filter/@source/@source/@iterators.0"/>
                </source>
                <arguments xsi:type="ocl:VariableExp" location="198:61-198:64" referredVariable="/0/@elements.16/@inPattern/@elements.0"/>
              </body>
              <iterators location="198:48-198:49" varName="e" variableExp="/0/@elements.16/@inPattern/@filter/@source/@source/@body/@source/@source"/>
            </source>
          </source>
          <arguments xsi:type="ocl:IntegerExp" location="198:78-198:79"/>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="234:1-243:2" name="TypeFromSchema">
      <commentsBefore>-- A SSL!DataTypeURI element refers to a type defined in a specified XMLSchema.</commentsBefore>
      <commentsBefore>-- For every SSL!DataTypeURI element that is the Type attribute of a </commentsBefore>
      <commentsBefore>-- SSL!ServiceInput or a SSL!ServiceOutput, this rule creates a </commentsBefore>
      <commentsBefore>-- SDL!Part that refers to the corresponding SDL type </commentsBefore>
      <commentsBefore>-- (see the helper getSDLTypeForSchemaType).</commentsBefore>
      <commentsAfter>-- For every SSL!ServiceInput that is the only input of a </commentsAfter>
      <commentsAfter>-- SSL!ServiceFunctionality and whose type is not SSL!OntologyClassURI, </commentsAfter>
      <commentsAfter>-- this rules construct a SDL!SimpleMessage that describes it (the type </commentsAfter>
      <commentsAfter>-- of the input is transformed according to the rule TypeFromSchema)</commentsAfter>
      <outPattern location="238:2-242:3">
        <elements xsi:type="atl:SimpleOutPatternElement" location="238:5-242:3" varName="part_c">
          <type xsi:type="ocl:OclModelElement" location="238:14-238:22" name="Part" model="/1"/>
          <bindings location="239:3-239:72" propertyName="ElName">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="239:13-239:72" name="name">
              <source xsi:type="ocl:CollectionOperationCallExp" location="239:13-239:67" operationName="first">
                <source xsi:type="ocl:OperationCallExp" location="239:13-239:56" operationName="getInputOutputHavingURIType">
                  <source xsi:type="ocl:VariableExp" location="239:13-239:23" referredVariable="/33"/>
                  <arguments xsi:type="ocl:VariableExp" location="239:52-239:55" referredVariable="/0/@elements.17/@inPattern/@elements.0"/>
                </source>
              </source>
            </value>
          </bindings>
          <bindings location="240:3-241:87" propertyName="refPart">
            <value xsi:type="ocl:OperationCallExp" location="240:14-241:87" operationName="resolveTemp">
              <source xsi:type="ocl:VariableExp" location="240:14-240:24" referredVariable="/34"/>
              <arguments xsi:type="ocl:OperationCallExp" location="240:37-240:66" operationName="getTypeGenerator">
                <source xsi:type="ocl:VariableExp" location="240:37-240:47" referredVariable="/35"/>
              </arguments>
              <arguments xsi:type="ocl:OperationCallExp" location="241:4-241:85" operationName="getSDLTypeForSchemaType">
                <source xsi:type="ocl:VariableExp" location="241:4-241:14" referredVariable="/36"/>
                <arguments xsi:type="ocl:OperationCallExp" location="241:39-241:84" operationName="getSchemaTypeName">
                  <source xsi:type="ocl:VariableExp" location="241:39-241:49" referredVariable="/37"/>
                  <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="241:68-241:83" name="lexicalform">
                    <source xsi:type="ocl:VariableExp" location="241:68-241:71" referredVariable="/0/@elements.17/@inPattern/@elements.0"/>
                  </arguments>
                </arguments>
              </arguments>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="235:2-237:3">
        <elements xsi:type="atl:SimpleInPatternElement" location="235:7-235:28" varName="inp" variableExp="/0/@elements.17/@inPattern/@filter/@source/@source/@arguments.0 /0/@elements.17/@outPattern/@elements.0/@bindings.0/@value/@source/@source/@arguments.0 /0/@elements.17/@outPattern/@elements.0/@bindings.1/@value/@arguments.1/@arguments.0/@arguments.0/@source">
          <type xsi:type="ocl:OclModelElement" location="235:13-235:28" name="DataTypeURI" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperatorCallExp" location="236:3-236:60" operationName=">">
          <source xsi:type="ocl:CollectionOperationCallExp" location="236:3-236:56" operationName="size">
            <source xsi:type="ocl:OperationCallExp" location="236:3-236:46" operationName="getInputOutputHavingURIType">
              <source xsi:type="ocl:VariableExp" location="236:3-236:13" referredVariable="/32"/>
              <arguments xsi:type="ocl:VariableExp" location="236:42-236:45" referredVariable="/0/@elements.17/@inPattern/@elements.0"/>
            </source>
          </source>
          <arguments xsi:type="ocl:IntegerExp" location="236:59-236:60"/>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="249:1-256:2" name="SingleInput_NonOntology">
      <commentsBefore>-- For every SSL!ServiceInput that is the only input of a </commentsBefore>
      <commentsBefore>-- SSL!ServiceFunctionality and whose type is not SSL!OntologyClassURI, </commentsBefore>
      <commentsBefore>-- this rules construct a SDL!SimpleMessage that describes it (the type </commentsBefore>
      <commentsBefore>-- of the input is transformed according to the rule TypeFromSchema)</commentsBefore>
      <commentsAfter>-- The same transformation as SingleInput_NonOntology, but for </commentsAfter>
      <commentsAfter>-- SSL!ServiceOutput.</commentsAfter>
      <outPattern location="252:2-255:6">
        <elements xsi:type="atl:SimpleOutPatternElement" location="252:5-255:6" varName="inm">
          <type xsi:type="ocl:OclModelElement" location="252:11-252:28" name="SimpleMessage" model="/1"/>
          <bindings location="253:5-253:21" propertyName="ElName">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="253:15-253:21" name="name">
              <source xsi:type="ocl:VariableExp" location="253:15-253:16" referredVariable="/0/@elements.18/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="254:5-254:22" propertyName="cmpPart">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="254:16-254:22" name="Type">
              <source xsi:type="ocl:VariableExp" location="254:16-254:17" referredVariable="/0/@elements.18/@inPattern/@elements.0"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="250:2-251:53">
        <elements xsi:type="atl:SimpleInPatternElement" location="250:7-250:27" varName="e" variableExp="/0/@elements.18/@inPattern/@filter/@source/@source/@arguments.0 /0/@elements.18/@inPattern/@filter/@arguments.0/@source/@source/@source /0/@elements.18/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.18/@outPattern/@elements.0/@bindings.1/@value/@source">
          <type xsi:type="ocl:OclModelElement" location="250:11-250:27" name="ServiceInput" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperatorCallExp" location="250:29-251:52" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="250:29-250:76" operationName="not">
            <source xsi:type="ocl:CollectionOperationCallExp" location="250:33-250:76" operationName="includes">
              <source xsi:type="ocl:OperationCallExp" location="250:33-250:63" operationName="getMultipleInputs">
                <source xsi:type="ocl:VariableExp" location="250:33-250:43" referredVariable="/38"/>
              </source>
              <arguments xsi:type="ocl:VariableExp" location="250:74-250:75" referredVariable="/0/@elements.18/@inPattern/@elements.0"/>
            </source>
          </source>
          <arguments xsi:type="ocl:OperatorCallExp" location="251:7-251:52" operationName="not">
            <source xsi:type="ocl:OperationCallExp" location="251:11-251:52" operationName="oclIsKindOf">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="251:11-251:17" name="Type">
                <source xsi:type="ocl:VariableExp" location="251:11-251:12" referredVariable="/0/@elements.18/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:OclModelElement" location="251:30-251:50" name="OntologyClassURI" model="/2"/>
            </source>
          </arguments>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="260:1-267:2" name="SingleOutput_NonOntology">
      <commentsBefore>-- The same transformation as SingleInput_NonOntology, but for </commentsBefore>
      <commentsBefore>-- SSL!ServiceOutput.</commentsBefore>
      <commentsAfter>-- For every SSL!ServiceInput that is the only input of a </commentsAfter>
      <commentsAfter>-- SSL!ServiceFunctionality and whose type is SSL!OntologyClassURI (it </commentsAfter>
      <commentsAfter>-- is described in the ontology), this rules construct a SDL!SimpleMessage </commentsAfter>
      <commentsAfter>-- that describes it (the message contains a single SDL!Part that refers </commentsAfter>
      <commentsAfter>-- to the complex type generated from the input's type - see rule </commentsAfter>
      <commentsAfter>-- TypeFromOntology_Input: part_c)</commentsAfter>
      <outPattern location="263:2-266:6">
        <elements xsi:type="atl:SimpleOutPatternElement" location="263:5-266:6" varName="outm">
          <type xsi:type="ocl:OclModelElement" location="263:12-263:29" name="SimpleMessage" model="/1"/>
          <bindings location="264:7-264:23" propertyName="ElName">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="264:17-264:23" name="name">
              <source xsi:type="ocl:VariableExp" location="264:17-264:18" referredVariable="/0/@elements.19/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="265:7-265:24" propertyName="cmpPart">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="265:18-265:24" name="Type">
              <source xsi:type="ocl:VariableExp" location="265:18-265:19" referredVariable="/0/@elements.19/@inPattern/@elements.0"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="261:2-262:53">
        <elements xsi:type="atl:SimpleInPatternElement" location="261:7-261:28" varName="e" variableExp="/0/@elements.19/@inPattern/@filter/@source/@source/@arguments.0 /0/@elements.19/@inPattern/@filter/@arguments.0/@source/@source/@source /0/@elements.19/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.19/@outPattern/@elements.0/@bindings.1/@value/@source">
          <type xsi:type="ocl:OclModelElement" location="261:11-261:28" name="ServiceOutput" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperatorCallExp" location="261:30-262:52" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="261:30-261:78" operationName="not">
            <source xsi:type="ocl:CollectionOperationCallExp" location="261:34-261:78" operationName="includes">
              <source xsi:type="ocl:OperationCallExp" location="261:34-261:65" operationName="getMultipleOutputs">
                <source xsi:type="ocl:VariableExp" location="261:34-261:44" referredVariable="/39"/>
              </source>
              <arguments xsi:type="ocl:VariableExp" location="261:76-261:77" referredVariable="/0/@elements.19/@inPattern/@elements.0"/>
            </source>
          </source>
          <arguments xsi:type="ocl:OperatorCallExp" location="262:7-262:52" operationName="not">
            <source xsi:type="ocl:OperationCallExp" location="262:11-262:52" operationName="oclIsKindOf">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="262:11-262:17" name="Type">
                <source xsi:type="ocl:VariableExp" location="262:11-262:12" referredVariable="/0/@elements.19/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:OclModelElement" location="262:30-262:50" name="OntologyClassURI" model="/2"/>
            </source>
          </arguments>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="275:1-286:2" name="SingleInput_Ontology">
      <commentsBefore>-- For every SSL!ServiceInput that is the only input of a </commentsBefore>
      <commentsBefore>-- SSL!ServiceFunctionality and whose type is SSL!OntologyClassURI (it </commentsBefore>
      <commentsBefore>-- is described in the ontology), this rules construct a SDL!SimpleMessage </commentsBefore>
      <commentsBefore>-- that describes it (the message contains a single SDL!Part that refers </commentsBefore>
      <commentsBefore>-- to the complex type generated from the input's type - see rule </commentsBefore>
      <commentsBefore>-- TypeFromOntology_Input: part_c)</commentsBefore>
      <commentsAfter>-- The same transformation as SingleInput_Ontology, but for </commentsAfter>
      <commentsAfter>-- SSL!ServiceOutput.</commentsAfter>
      <outPattern location="278:2-285:3">
        <elements xsi:type="atl:SimpleOutPatternElement" location="278:5-281:3" varName="inm">
          <type xsi:type="ocl:OclModelElement" location="278:11-278:28" name="SimpleMessage" model="/1"/>
          <bindings location="279:3-279:19" propertyName="ElName">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="279:13-279:19" name="name">
              <source xsi:type="ocl:VariableExp" location="279:13-279:14" referredVariable="/0/@elements.20/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="280:3-280:18" propertyName="cmpPart">
            <value xsi:type="ocl:VariableExp" location="280:14-280:18" referredVariable="/0/@elements.20/@outPattern/@elements.1"/>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="282:2-285:3" varName="part" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.1/@value">
          <type xsi:type="ocl:OclModelElement" location="282:9-282:17" name="Part" model="/1"/>
          <bindings location="283:3-283:35" propertyName="ElName">
            <value xsi:type="ocl:OperatorCallExp" location="283:13-283:35" operationName="+">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="283:13-283:19" name="name">
                <source xsi:type="ocl:VariableExp" location="283:13-283:14" referredVariable="/0/@elements.20/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:StringExp" location="283:22-283:35" stringSymbol="ComplexType"/>
            </value>
          </bindings>
          <bindings location="284:3-284:20" propertyName="refPart">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="284:14-284:20" name="Type">
              <source xsi:type="ocl:VariableExp" location="284:14-284:15" referredVariable="/0/@elements.20/@inPattern/@elements.0"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="276:2-277:45">
        <elements xsi:type="atl:SimpleInPatternElement" location="276:7-276:27" varName="e" variableExp="/0/@elements.20/@inPattern/@filter/@source/@source/@arguments.0 /0/@elements.20/@inPattern/@filter/@arguments.0/@source/@source /0/@elements.20/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.20/@outPattern/@elements.1/@bindings.0/@value/@source/@source /0/@elements.20/@outPattern/@elements.1/@bindings.1/@value/@source">
          <type xsi:type="ocl:OclModelElement" location="276:11-276:27" name="ServiceInput" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperatorCallExp" location="276:30-277:44" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="276:30-276:77" operationName="not">
            <source xsi:type="ocl:CollectionOperationCallExp" location="276:34-276:77" operationName="includes">
              <source xsi:type="ocl:OperationCallExp" location="276:34-276:64" operationName="getMultipleInputs">
                <source xsi:type="ocl:VariableExp" location="276:34-276:44" referredVariable="/40"/>
              </source>
              <arguments xsi:type="ocl:VariableExp" location="276:75-276:76" referredVariable="/0/@elements.20/@inPattern/@elements.0"/>
            </source>
          </source>
          <arguments xsi:type="ocl:OperationCallExp" location="277:3-277:44" operationName="oclIsKindOf">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="277:3-277:9" name="Type">
              <source xsi:type="ocl:VariableExp" location="277:3-277:4" referredVariable="/0/@elements.20/@inPattern/@elements.0"/>
            </source>
            <arguments xsi:type="ocl:OclModelElement" location="277:22-277:42" name="OntologyClassURI" model="/2"/>
          </arguments>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="290:1-301:2" name="SingleOutput_Ontology">
      <commentsBefore>-- The same transformation as SingleInput_Ontology, but for </commentsBefore>
      <commentsBefore>-- SSL!ServiceOutput.</commentsBefore>
      <commentsAfter>-- For every SSL!ServiceFunctionality that has a single input and a </commentsAfter>
      <commentsAfter>-- single output, this rule constructs a SDL!Operation that contains </commentsAfter>
      <commentsAfter>-- the results of the input's and output's transformation (see rules</commentsAfter>
      <commentsAfter>-- SingleInput_Ontology, SingleInput_NonOntology and their </commentsAfter>
      <commentsAfter>-- correspondents for output messages)</commentsAfter>
      <outPattern location="293:2-300:3">
        <elements xsi:type="atl:SimpleOutPatternElement" location="293:5-296:3" varName="outm">
          <type xsi:type="ocl:OclModelElement" location="293:12-293:29" name="SimpleMessage" model="/1"/>
          <bindings location="294:3-294:19" propertyName="ElName">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="294:13-294:19" name="name">
              <source xsi:type="ocl:VariableExp" location="294:13-294:14" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="295:3-295:18" propertyName="cmpPart">
            <value xsi:type="ocl:VariableExp" location="295:14-295:18" referredVariable="/0/@elements.21/@outPattern/@elements.1"/>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="297:2-300:3" varName="part" variableExp="/0/@elements.21/@outPattern/@elements.0/@bindings.1/@value">
          <type xsi:type="ocl:OclModelElement" location="297:9-297:17" name="Part" model="/1"/>
          <bindings location="298:3-298:35" propertyName="ElName">
            <value xsi:type="ocl:OperatorCallExp" location="298:13-298:35" operationName="+">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="298:13-298:19" name="name">
                <source xsi:type="ocl:VariableExp" location="298:13-298:14" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:StringExp" location="298:22-298:35" stringSymbol="ComplexType"/>
            </value>
          </bindings>
          <bindings location="299:3-299:20" propertyName="refPart">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="299:14-299:20" name="Type">
              <source xsi:type="ocl:VariableExp" location="299:14-299:15" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="291:2-292:45">
        <elements xsi:type="atl:SimpleInPatternElement" location="291:7-291:28" varName="e" variableExp="/0/@elements.21/@inPattern/@filter/@source/@source/@arguments.0 /0/@elements.21/@inPattern/@filter/@arguments.0/@source/@source /0/@elements.21/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.21/@outPattern/@elements.1/@bindings.0/@value/@source/@source /0/@elements.21/@outPattern/@elements.1/@bindings.1/@value/@source">
          <type xsi:type="ocl:OclModelElement" location="291:11-291:28" name="ServiceOutput" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperatorCallExp" location="291:31-292:44" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="291:31-291:79" operationName="not">
            <source xsi:type="ocl:CollectionOperationCallExp" location="291:35-291:79" operationName="includes">
              <source xsi:type="ocl:OperationCallExp" location="291:35-291:66" operationName="getMultipleOutputs">
                <source xsi:type="ocl:VariableExp" location="291:35-291:45" referredVariable="/41"/>
              </source>
              <arguments xsi:type="ocl:VariableExp" location="291:77-291:78" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
            </source>
          </source>
          <arguments xsi:type="ocl:OperationCallExp" location="292:3-292:44" operationName="oclIsKindOf">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="292:3-292:9" name="Type">
              <source xsi:type="ocl:VariableExp" location="292:3-292:4" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
            </source>
            <arguments xsi:type="ocl:OclModelElement" location="292:22-292:42" name="OntologyClassURI" model="/2"/>
          </arguments>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="310:1-317:2" name="ServiceFunctionality11">
      <commentsBefore>-- For every SSL!ServiceFunctionality that has a single input and a </commentsBefore>
      <commentsBefore>-- single output, this rule constructs a SDL!Operation that contains </commentsBefore>
      <commentsBefore>-- the results of the input's and output's transformation (see rules</commentsBefore>
      <commentsBefore>-- SingleInput_Ontology, SingleInput_NonOntology and their </commentsBefore>
      <commentsBefore>-- correspondents for output messages)</commentsBefore>
      <commentsAfter>-- For every SSL!ServiceFunctionality that has multiple inputs and a </commentsAfter>
      <commentsAfter>-- single output, this rule constructs a SDL!Operation that contains </commentsAfter>
      <commentsAfter>-- the results of the output's transformation (see rules </commentsAfter>
      <commentsAfter>-- SingleOutput_Ontology, SingleOutput_NonOntology) and that constructs </commentsAfter>
      <commentsAfter>-- a SDL!Message in which it &quot;compacts&quot; the inputs by placing, as parts, </commentsAfter>
      <commentsAfter>-- the results of the transformation of each input's type (see rules </commentsAfter>
      <commentsAfter>-- TypeFromOntology_Input: part_c and TypeFromSchema: part_c)</commentsAfter>
      <outPattern location="312:2-316:3">
        <elements xsi:type="atl:SimpleOutPatternElement" location="312:5-316:3" varName="outOper">
          <type xsi:type="ocl:OclModelElement" location="312:15-312:28" name="Operation" model="/1"/>
          <bindings location="313:3-313:19" propertyName="ElName">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="313:13-313:19" name="name">
              <source xsi:type="ocl:VariableExp" location="313:13-313:14" referredVariable="/0/@elements.22/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="314:3-314:29" propertyName="refInputMessage">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="314:22-314:29" name="Input">
              <source xsi:type="ocl:VariableExp" location="314:22-314:23" referredVariable="/0/@elements.22/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="315:3-315:31" propertyName="refOutputMessage">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="315:23-315:31" name="Output">
              <source xsi:type="ocl:VariableExp" location="315:23-315:24" referredVariable="/0/@elements.22/@inPattern/@elements.0"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="311:2-311:83">
        <elements xsi:type="atl:SimpleInPatternElement" location="311:7-311:35" varName="e" variableExp="/0/@elements.22/@inPattern/@filter/@source/@source/@source/@source /0/@elements.22/@inPattern/@filter/@arguments.0/@source/@source/@source /0/@elements.22/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.22/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.22/@outPattern/@elements.0/@bindings.2/@value/@source">
          <type xsi:type="ocl:OclModelElement" location="311:11-311:35" name="ServiceFunctionality" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperatorCallExp" location="311:37-311:81" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="311:37-311:56" operationName="&lt;=">
            <source xsi:type="ocl:OperationCallExp" location="311:37-311:51" operationName="size">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="311:37-311:44" name="Input">
                <source xsi:type="ocl:VariableExp" location="311:37-311:38" referredVariable="/0/@elements.22/@inPattern/@elements.0"/>
              </source>
            </source>
            <arguments xsi:type="ocl:IntegerExp" location="311:55-311:56" integerSymbol="1"/>
          </source>
          <arguments xsi:type="ocl:OperatorCallExp" location="311:61-311:81" operationName="&lt;=">
            <source xsi:type="ocl:OperationCallExp" location="311:61-311:76" operationName="size">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="311:61-311:69" name="Output">
                <source xsi:type="ocl:VariableExp" location="311:61-311:62" referredVariable="/0/@elements.22/@inPattern/@elements.0"/>
              </source>
            </source>
            <arguments xsi:type="ocl:IntegerExp" location="311:80-311:81" integerSymbol="1"/>
          </arguments>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="326:1-337:2" name="ServiceFunctionalityN1">
      <commentsBefore>-- For every SSL!ServiceFunctionality that has multiple inputs and a </commentsBefore>
      <commentsBefore>-- single output, this rule constructs a SDL!Operation that contains </commentsBefore>
      <commentsBefore>-- the results of the output's transformation (see rules </commentsBefore>
      <commentsBefore>-- SingleOutput_Ontology, SingleOutput_NonOntology) and that constructs </commentsBefore>
      <commentsBefore>-- a SDL!Message in which it &quot;compacts&quot; the inputs by placing, as parts, </commentsBefore>
      <commentsBefore>-- the results of the transformation of each input's type (see rules </commentsBefore>
      <commentsBefore>-- TypeFromOntology_Input: part_c and TypeFromSchema: part_c)</commentsBefore>
      <commentsAfter>-- For every SSL!ServiceFunctionality that has a single input and</commentsAfter>
      <commentsAfter>-- multiple outputs, this rule constructs a SDL!Operation that contains </commentsAfter>
      <commentsAfter>-- the results of the input's transformation (see rules </commentsAfter>
      <commentsAfter>-- SingleInput_Ontology, SingleInput_NonOntology) and that constructs </commentsAfter>
      <commentsAfter>-- a SDL!Message in which it &quot;compacts&quot; the outputs by placing, as parts, </commentsAfter>
      <commentsAfter>-- the results of the transformation of each output's type (see rules </commentsAfter>
      <commentsAfter>-- TypeFromOntology_Output: part_c and TypeFromSchema: part_c)</commentsAfter>
      <outPattern location="328:2-336:3">
        <elements xsi:type="atl:SimpleOutPatternElement" location="328:5-331:3" varName="inp" variableExp="/0/@elements.23/@outPattern/@elements.1/@bindings.1/@value">
          <type xsi:type="ocl:OclModelElement" location="328:11-328:28" name="SimpleMessage" model="/1"/>
          <bindings location="329:3-329:31" propertyName="ElName">
            <value xsi:type="ocl:OperatorCallExp" location="329:13-329:31" operationName="+">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="329:13-329:19" name="name">
                <source xsi:type="ocl:VariableExp" location="329:13-329:14" referredVariable="/0/@elements.23/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:StringExp" location="329:22-329:31" stringSymbol="Request"/>
            </value>
          </bindings>
          <bindings location="330:3-330:88" propertyName="cmpPart">
            <value xsi:type="ocl:SequenceExp" location="330:14-330:88">
              <elements xsi:type="ocl:IteratorExp" location="330:23-330:87" name="collect">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="330:23-330:30" name="Input">
                  <source xsi:type="ocl:VariableExp" location="330:23-330:24" referredVariable="/0/@elements.23/@inPattern/@elements.0"/>
                </source>
                <body xsi:type="ocl:OperationCallExp" location="330:46-330:86" operationName="resolveTemp">
                  <source xsi:type="ocl:VariableExp" location="330:46-330:56" referredVariable="/42"/>
                  <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="330:69-330:75" name="Type">
                    <source xsi:type="ocl:VariableExp" location="330:69-330:70" referredVariable="/0/@elements.23/@outPattern/@elements.0/@bindings.1/@value/@elements.0/@iterators.0"/>
                  </arguments>
                  <arguments xsi:type="ocl:StringExp" location="330:77-330:85" stringSymbol="part_c"/>
                </body>
                <iterators location="330:42-330:43" varName="k" variableExp="/0/@elements.23/@outPattern/@elements.0/@bindings.1/@value/@elements.0/@body/@arguments.0/@source"/>
              </elements>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="332:2-336:3" varName="outOper">
          <type xsi:type="ocl:OclModelElement" location="332:12-332:25" name="Operation" model="/1"/>
          <bindings location="333:3-333:19" propertyName="ElName">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="333:13-333:19" name="name">
              <source xsi:type="ocl:VariableExp" location="333:13-333:14" referredVariable="/0/@elements.23/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="334:3-334:25" propertyName="refInputMessage">
            <value xsi:type="ocl:VariableExp" location="334:22-334:25" referredVariable="/0/@elements.23/@outPattern/@elements.0"/>
          </bindings>
          <bindings location="335:3-335:31" propertyName="refOutputMessage">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="335:23-335:31" name="Output">
              <source xsi:type="ocl:VariableExp" location="335:23-335:24" referredVariable="/0/@elements.23/@inPattern/@elements.0"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="327:2-327:80">
        <elements xsi:type="atl:SimpleInPatternElement" location="327:7-327:35" varName="e" variableExp="/0/@elements.23/@inPattern/@filter/@source/@source/@source/@source /0/@elements.23/@inPattern/@filter/@arguments.0/@source/@source/@source /0/@elements.23/@outPattern/@elements.0/@bindings.0/@value/@source/@source /0/@elements.23/@outPattern/@elements.0/@bindings.1/@value/@elements.0/@source/@source /0/@elements.23/@outPattern/@elements.1/@bindings.0/@value/@source /0/@elements.23/@outPattern/@elements.1/@bindings.2/@value/@source">
          <type xsi:type="ocl:OclModelElement" location="327:11-327:35" name="ServiceFunctionality" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperatorCallExp" location="327:37-327:79" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="327:37-327:55" operationName=">">
            <source xsi:type="ocl:OperationCallExp" location="327:37-327:51" operationName="size">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="327:37-327:44" name="Input">
                <source xsi:type="ocl:VariableExp" location="327:37-327:38" referredVariable="/0/@elements.23/@inPattern/@elements.0"/>
              </source>
            </source>
            <arguments xsi:type="ocl:IntegerExp" location="327:54-327:55" integerSymbol="1"/>
          </source>
          <arguments xsi:type="ocl:OperatorCallExp" location="327:60-327:79" operationName="=">
            <source xsi:type="ocl:OperationCallExp" location="327:60-327:75" operationName="size">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="327:60-327:68" name="Output">
                <source xsi:type="ocl:VariableExp" location="327:60-327:61" referredVariable="/0/@elements.23/@inPattern/@elements.0"/>
              </source>
            </source>
            <arguments xsi:type="ocl:IntegerExp" location="327:78-327:79" integerSymbol="1"/>
          </arguments>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="347:1-360:2" name="ServiceFunctionality1N">
      <commentsBefore>-- For every SSL!ServiceFunctionality that has a single input and</commentsBefore>
      <commentsBefore>-- multiple outputs, this rule constructs a SDL!Operation that contains </commentsBefore>
      <commentsBefore>-- the results of the input's transformation (see rules </commentsBefore>
      <commentsBefore>-- SingleInput_Ontology, SingleInput_NonOntology) and that constructs </commentsBefore>
      <commentsBefore>-- a SDL!Message in which it &quot;compacts&quot; the outputs by placing, as parts, </commentsBefore>
      <commentsBefore>-- the results of the transformation of each output's type (see rules </commentsBefore>
      <commentsBefore>-- TypeFromOntology_Output: part_c and TypeFromSchema: part_c)</commentsBefore>
      <commentsAfter>-- For every SSL!ServiceFunctionality that has multiple inputs and</commentsAfter>
      <commentsAfter>-- multiple outputs, this rule constructs a SDL!Operation that contains: </commentsAfter>
      <commentsAfter>-- - a SDL!Message in which it &quot;compacts&quot; the inputs by placing, as parts, </commentsAfter>
      <commentsAfter>-- the results of the transformation of each input's type (see rules </commentsAfter>
      <commentsAfter>-- TypeFromOntology_Input: part_c and TypeFromSchema: part_c)</commentsAfter>
      <commentsAfter>-- - a SDL!Message in which it &quot;compacts&quot; the outputs by placing, as parts, </commentsAfter>
      <commentsAfter>-- the results of the transformation of each output's type (see rules </commentsAfter>
      <commentsAfter>-- TypeFromOntology_Output: part_c and TypeFromSchema: part_c)</commentsAfter>
      <outPattern location="349:2-359:3">
        <elements xsi:type="atl:SimpleOutPatternElement" location="349:5-354:3" varName="out" variableExp="/0/@elements.24/@outPattern/@elements.1/@bindings.2/@value">
          <type xsi:type="ocl:OclModelElement" location="349:11-349:28" name="SimpleMessage" model="/1"/>
          <bindings location="350:3-350:32" propertyName="ElName">
            <value xsi:type="ocl:OperatorCallExp" location="350:13-350:32" operationName="+">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="350:13-350:19" name="name">
                <source xsi:type="ocl:VariableExp" location="350:13-350:14" referredVariable="/0/@elements.24/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:StringExp" location="350:22-350:32" stringSymbol="Response"/>
            </value>
          </bindings>
          <bindings location="351:3-353:4" propertyName="cmpPart">
            <value xsi:type="ocl:SequenceExp" location="351:14-353:4">
              <elements xsi:type="ocl:IteratorExp" location="352:4-352:69" name="collect">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="352:4-352:12" name="Output">
                  <source xsi:type="ocl:VariableExp" location="352:4-352:5" referredVariable="/0/@elements.24/@inPattern/@elements.0"/>
                </source>
                <body xsi:type="ocl:OperationCallExp" location="352:28-352:68" operationName="resolveTemp">
                  <source xsi:type="ocl:VariableExp" location="352:28-352:38" referredVariable="/43"/>
                  <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="352:51-352:57" name="Type">
                    <source xsi:type="ocl:VariableExp" location="352:51-352:52" referredVariable="/0/@elements.24/@outPattern/@elements.0/@bindings.1/@value/@elements.0/@iterators.0"/>
                  </arguments>
                  <arguments xsi:type="ocl:StringExp" location="352:59-352:67" stringSymbol="part_c"/>
                </body>
                <iterators location="352:24-352:25" varName="k" variableExp="/0/@elements.24/@outPattern/@elements.0/@bindings.1/@value/@elements.0/@body/@arguments.0/@source"/>
              </elements>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="355:2-359:3" varName="outOper">
          <type xsi:type="ocl:OclModelElement" location="355:12-355:25" name="Operation" model="/1"/>
          <bindings location="356:3-356:19" propertyName="ElName">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="356:13-356:19" name="name">
              <source xsi:type="ocl:VariableExp" location="356:13-356:14" referredVariable="/0/@elements.24/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="357:3-357:29" propertyName="refInputMessage">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="357:22-357:29" name="Input">
              <source xsi:type="ocl:VariableExp" location="357:22-357:23" referredVariable="/0/@elements.24/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="358:3-358:26" propertyName="refOutputMessage">
            <value xsi:type="ocl:VariableExp" location="358:23-358:26" referredVariable="/0/@elements.24/@outPattern/@elements.0"/>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="348:2-348:80">
        <elements xsi:type="atl:SimpleInPatternElement" location="348:7-348:35" varName="e" variableExp="/0/@elements.24/@inPattern/@filter/@source/@source/@source/@source /0/@elements.24/@inPattern/@filter/@arguments.0/@source/@source/@source /0/@elements.24/@outPattern/@elements.0/@bindings.0/@value/@source/@source /0/@elements.24/@outPattern/@elements.0/@bindings.1/@value/@elements.0/@source/@source /0/@elements.24/@outPattern/@elements.1/@bindings.0/@value/@source /0/@elements.24/@outPattern/@elements.1/@bindings.1/@value/@source">
          <type xsi:type="ocl:OclModelElement" location="348:11-348:35" name="ServiceFunctionality" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperatorCallExp" location="348:37-348:79" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="348:37-348:55" operationName="=">
            <source xsi:type="ocl:OperationCallExp" location="348:37-348:51" operationName="size">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="348:37-348:44" name="Input">
                <source xsi:type="ocl:VariableExp" location="348:37-348:38" referredVariable="/0/@elements.24/@inPattern/@elements.0"/>
              </source>
            </source>
            <arguments xsi:type="ocl:IntegerExp" location="348:54-348:55" integerSymbol="1"/>
          </source>
          <arguments xsi:type="ocl:OperatorCallExp" location="348:60-348:79" operationName=">">
            <source xsi:type="ocl:OperationCallExp" location="348:60-348:75" operationName="size">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="348:60-348:68" name="Output">
                <source xsi:type="ocl:VariableExp" location="348:60-348:61" referredVariable="/0/@elements.24/@inPattern/@elements.0"/>
              </source>
            </source>
            <arguments xsi:type="ocl:IntegerExp" location="348:78-348:79" integerSymbol="1"/>
          </arguments>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="370:1-389:2" name="ServiceFunctionalityNN">
      <commentsBefore>-- For every SSL!ServiceFunctionality that has multiple inputs and</commentsBefore>
      <commentsBefore>-- multiple outputs, this rule constructs a SDL!Operation that contains: </commentsBefore>
      <commentsBefore>-- - a SDL!Message in which it &quot;compacts&quot; the inputs by placing, as parts, </commentsBefore>
      <commentsBefore>-- the results of the transformation of each input's type (see rules </commentsBefore>
      <commentsBefore>-- TypeFromOntology_Input: part_c and TypeFromSchema: part_c)</commentsBefore>
      <commentsBefore>-- - a SDL!Message in which it &quot;compacts&quot; the outputs by placing, as parts, </commentsBefore>
      <commentsBefore>-- the results of the transformation of each output's type (see rules </commentsBefore>
      <commentsBefore>-- TypeFromOntology_Output: part_c and TypeFromSchema: part_c)</commentsBefore>
      <commentsAfter>-- The main rule of the transformation. It constructs the skeleton of the SDL model, and uses the </commentsAfter>
      <commentsAfter>-- results of the other rules in order to fill it.</commentsAfter>
      <commentsAfter>-- It creates the SDL types definitions, generates the definitions of the interfaces (containing the</commentsAfter>
      <commentsAfter>-- generated operations) and groups the generated messages.</commentsAfter>
      <outPattern location="372:2-388:3">
        <elements xsi:type="atl:SimpleOutPatternElement" location="372:5-377:3" varName="inp" variableExp="/0/@elements.25/@outPattern/@elements.2/@bindings.1/@value">
          <type xsi:type="ocl:OclModelElement" location="372:11-372:28" name="SimpleMessage" model="/1"/>
          <bindings location="373:3-373:31" propertyName="ElName">
            <value xsi:type="ocl:OperatorCallExp" location="373:13-373:31" operationName="+">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="373:13-373:19" name="name">
                <source xsi:type="ocl:VariableExp" location="373:13-373:14" referredVariable="/0/@elements.25/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:StringExp" location="373:22-373:31" stringSymbol="Request"/>
            </value>
          </bindings>
          <bindings location="374:3-376:4" propertyName="cmpPart">
            <value xsi:type="ocl:SequenceExp" location="374:14-376:4">
              <elements xsi:type="ocl:IteratorExp" location="375:4-375:68" name="collect">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="375:4-375:11" name="Input">
                  <source xsi:type="ocl:VariableExp" location="375:4-375:5" referredVariable="/0/@elements.25/@inPattern/@elements.0"/>
                </source>
                <body xsi:type="ocl:OperationCallExp" location="375:27-375:67" operationName="resolveTemp">
                  <source xsi:type="ocl:VariableExp" location="375:27-375:37" referredVariable="/44"/>
                  <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="375:50-375:56" name="Type">
                    <source xsi:type="ocl:VariableExp" location="375:50-375:51" referredVariable="/0/@elements.25/@outPattern/@elements.0/@bindings.1/@value/@elements.0/@iterators.0"/>
                  </arguments>
                  <arguments xsi:type="ocl:StringExp" location="375:58-375:66" stringSymbol="part_c"/>
                </body>
                <iterators location="375:23-375:24" varName="k" variableExp="/0/@elements.25/@outPattern/@elements.0/@bindings.1/@value/@elements.0/@body/@arguments.0/@source"/>
              </elements>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="378:2-383:3" varName="out" variableExp="/0/@elements.25/@outPattern/@elements.2/@bindings.2/@value">
          <type xsi:type="ocl:OclModelElement" location="378:8-378:25" name="SimpleMessage" model="/1"/>
          <bindings location="379:3-379:32" propertyName="ElName">
            <value xsi:type="ocl:OperatorCallExp" location="379:13-379:32" operationName="+">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="379:13-379:19" name="name">
                <source xsi:type="ocl:VariableExp" location="379:13-379:14" referredVariable="/0/@elements.25/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:StringExp" location="379:22-379:32" stringSymbol="Response"/>
            </value>
          </bindings>
          <bindings location="380:3-382:4" propertyName="cmpPart">
            <value xsi:type="ocl:SequenceExp" location="380:14-382:4">
              <elements xsi:type="ocl:IteratorExp" location="381:4-381:69" name="collect">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="381:4-381:12" name="Output">
                  <source xsi:type="ocl:VariableExp" location="381:4-381:5" referredVariable="/0/@elements.25/@inPattern/@elements.0"/>
                </source>
                <body xsi:type="ocl:OperationCallExp" location="381:28-381:68" operationName="resolveTemp">
                  <source xsi:type="ocl:VariableExp" location="381:28-381:38" referredVariable="/45"/>
                  <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="381:51-381:57" name="Type">
                    <source xsi:type="ocl:VariableExp" location="381:51-381:52" referredVariable="/0/@elements.25/@outPattern/@elements.1/@bindings.1/@value/@elements.0/@iterators.0"/>
                  </arguments>
                  <arguments xsi:type="ocl:StringExp" location="381:59-381:67" stringSymbol="part_c"/>
                </body>
                <iterators location="381:24-381:25" varName="k" variableExp="/0/@elements.25/@outPattern/@elements.1/@bindings.1/@value/@elements.0/@body/@arguments.0/@source"/>
              </elements>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="384:2-388:3" varName="outOper">
          <type xsi:type="ocl:OclModelElement" location="384:12-384:25" name="Operation" model="/1"/>
          <bindings location="385:3-385:19" propertyName="ElName">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="385:13-385:19" name="name">
              <source xsi:type="ocl:VariableExp" location="385:13-385:14" referredVariable="/0/@elements.25/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="386:3-386:25" propertyName="refInputMessage">
            <value xsi:type="ocl:VariableExp" location="386:22-386:25" referredVariable="/0/@elements.25/@outPattern/@elements.0"/>
          </bindings>
          <bindings location="387:3-387:26" propertyName="refOutputMessage">
            <value xsi:type="ocl:VariableExp" location="387:23-387:26" referredVariable="/0/@elements.25/@outPattern/@elements.1"/>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="371:2-371:80">
        <elements xsi:type="atl:SimpleInPatternElement" location="371:7-371:35" varName="e" variableExp="/0/@elements.25/@inPattern/@filter/@source/@source/@source/@source /0/@elements.25/@inPattern/@filter/@arguments.0/@source/@source/@source /0/@elements.25/@outPattern/@elements.0/@bindings.0/@value/@source/@source /0/@elements.25/@outPattern/@elements.0/@bindings.1/@value/@elements.0/@source/@source /0/@elements.25/@outPattern/@elements.1/@bindings.0/@value/@source/@source /0/@elements.25/@outPattern/@elements.1/@bindings.1/@value/@elements.0/@source/@source /0/@elements.25/@outPattern/@elements.2/@bindings.0/@value/@source">
          <type xsi:type="ocl:OclModelElement" location="371:11-371:35" name="ServiceFunctionality" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperatorCallExp" location="371:37-371:79" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="371:37-371:55" operationName=">">
            <source xsi:type="ocl:OperationCallExp" location="371:37-371:51" operationName="size">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="371:37-371:44" name="Input">
                <source xsi:type="ocl:VariableExp" location="371:37-371:38" referredVariable="/0/@elements.25/@inPattern/@elements.0"/>
              </source>
            </source>
            <arguments xsi:type="ocl:IntegerExp" location="371:54-371:55" integerSymbol="1"/>
          </source>
          <arguments xsi:type="ocl:OperatorCallExp" location="371:60-371:79" operationName=">">
            <source xsi:type="ocl:OperationCallExp" location="371:60-371:75" operationName="size">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="371:60-371:68" name="Output">
                <source xsi:type="ocl:VariableExp" location="371:60-371:61" referredVariable="/0/@elements.25/@inPattern/@elements.0"/>
              </source>
            </source>
            <arguments xsi:type="ocl:IntegerExp" location="371:78-371:79" integerSymbol="1"/>
          </arguments>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="395:1-430:2" name="Definitions">
      <commentsBefore>-- The main rule of the transformation. It constructs the skeleton of the SDL model, and uses the </commentsBefore>
      <commentsBefore>-- results of the other rules in order to fill it.</commentsBefore>
      <commentsBefore>-- It creates the SDL types definitions, generates the definitions of the interfaces (containing the</commentsBefore>
      <commentsBefore>-- generated operations) and groups the generated messages.</commentsBefore>
      <outPattern location="397:2-429:3">
        <elements xsi:type="atl:SimpleOutPatternElement" location="397:5-407:3" varName="out">
          <type xsi:type="ocl:OclModelElement" location="397:11-397:26" name="Definitions" model="/1"/>
          <bindings location="398:3-398:19" propertyName="ElName">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="398:13-398:19" name="name">
              <source xsi:type="ocl:VariableExp" location="398:13-398:14" referredVariable="/0/@elements.26/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="399:3-399:101" propertyName="cmpType">
            <value xsi:type="ocl:SequenceExp" location="399:14-399:101">
              <elements xsi:type="ocl:VariableExp" location="399:23-399:28" referredVariable="/0/@elements.26/@outPattern/@elements.2"/>
              <elements xsi:type="ocl:VariableExp" location="399:30-399:35" referredVariable="/0/@elements.26/@outPattern/@elements.3"/>
              <elements xsi:type="ocl:VariableExp" location="399:37-399:42" referredVariable="/0/@elements.26/@outPattern/@elements.4"/>
              <elements xsi:type="ocl:VariableExp" location="399:44-399:49" referredVariable="/0/@elements.26/@outPattern/@elements.5"/>
              <elements xsi:type="ocl:VariableExp" location="399:51-399:56" referredVariable="/0/@elements.26/@outPattern/@elements.6"/>
              <elements xsi:type="ocl:VariableExp" location="399:58-399:63" referredVariable="/0/@elements.26/@outPattern/@elements.7"/>
              <elements xsi:type="ocl:OperationCallExp" location="399:65-399:100" operationName="allInstances">
                <source xsi:type="ocl:OclModelElement" location="399:65-399:85" name="OntologyClassURI" model="/2"/>
              </elements>
            </value>
          </bindings>
          <bindings location="400:3-400:29" propertyName="cmpInterface">
            <value xsi:type="ocl:VariableExp" location="400:19-400:29" referredVariable="/0/@elements.26/@outPattern/@elements.1"/>
          </bindings>
          <bindings location="401:3-406:4" propertyName="cmpMessage">
            <value xsi:type="ocl:SequenceExp" location="401:17-406:4">
              <elements xsi:type="ocl:IteratorExp" location="402:4-402:151" name="collect">
                <source xsi:type="ocl:IteratorExp" location="402:4-402:100" name="select">
                  <source xsi:type="ocl:OperationCallExp" location="402:4-402:35" operationName="allInstances">
                    <source xsi:type="ocl:OclModelElement" location="402:4-402:20" name="ServiceInput" model="/2"/>
                  </source>
                  <body xsi:type="ocl:OperatorCallExp" location="402:50-402:99" operationName="not">
                    <source xsi:type="ocl:CollectionOperationCallExp" location="402:54-402:99" operationName="includes">
                      <source xsi:type="ocl:OperationCallExp" location="402:54-402:84" operationName="getMultipleInputs">
                        <source xsi:type="ocl:VariableExp" location="402:54-402:64" referredVariable="/46"/>
                      </source>
                      <arguments xsi:type="ocl:VariableExp" location="402:97-402:98" referredVariable="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.0/@source/@iterators.0"/>
                    </source>
                  </body>
                  <iterators location="402:46-402:47" varName="e" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.0/@source/@body/@source/@arguments.0"/>
                </source>
                <body xsi:type="ocl:OperationCallExp" location="402:117-402:149" operationName="resolveTemp">
                  <source xsi:type="ocl:VariableExp" location="402:117-402:127" referredVariable="/47"/>
                  <arguments xsi:type="ocl:VariableExp" location="402:140-402:141" referredVariable="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.0/@iterators.0"/>
                  <arguments xsi:type="ocl:StringExp" location="402:143-402:148" stringSymbol="inm"/>
                </body>
                <iterators location="402:113-402:114" varName="e" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.0/@body/@arguments.0"/>
              </elements>
              <elements xsi:type="ocl:IteratorExp" location="403:4-403:154" name="collect">
                <source xsi:type="ocl:IteratorExp" location="403:4-403:102" name="select">
                  <source xsi:type="ocl:OperationCallExp" location="403:4-403:36" operationName="allInstances">
                    <source xsi:type="ocl:OclModelElement" location="403:4-403:21" name="ServiceOutput" model="/2"/>
                  </source>
                  <body xsi:type="ocl:OperatorCallExp" location="403:51-403:101" operationName="not">
                    <source xsi:type="ocl:CollectionOperationCallExp" location="403:55-403:101" operationName="includes">
                      <source xsi:type="ocl:OperationCallExp" location="403:55-403:86" operationName="getMultipleOutputs">
                        <source xsi:type="ocl:VariableExp" location="403:55-403:65" referredVariable="/48"/>
                      </source>
                      <arguments xsi:type="ocl:VariableExp" location="403:99-403:100" referredVariable="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.1/@source/@iterators.0"/>
                    </source>
                  </body>
                  <iterators location="403:47-403:48" varName="e" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.1/@source/@body/@source/@arguments.0"/>
                </source>
                <body xsi:type="ocl:OperationCallExp" location="403:119-403:152" operationName="resolveTemp">
                  <source xsi:type="ocl:VariableExp" location="403:119-403:129" referredVariable="/49"/>
                  <arguments xsi:type="ocl:VariableExp" location="403:142-403:143" referredVariable="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.1/@iterators.0"/>
                  <arguments xsi:type="ocl:StringExp" location="403:145-403:151" stringSymbol="outm"/>
                </body>
                <iterators location="403:115-403:116" varName="e" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.1/@body/@arguments.0"/>
              </elements>
              <elements xsi:type="ocl:IteratorExp" location="404:4-404:129" name="collect">
                <source xsi:type="ocl:IteratorExp" location="404:4-404:78" name="select">
                  <source xsi:type="ocl:OperationCallExp" location="404:4-404:43" operationName="allInstances">
                    <source xsi:type="ocl:OclModelElement" location="404:4-404:28" name="ServiceFunctionality" model="/2"/>
                  </source>
                  <body xsi:type="ocl:OperatorCallExp" location="404:59-404:77" operationName=">">
                    <source xsi:type="ocl:OperationCallExp" location="404:59-404:73" operationName="size">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="404:59-404:66" name="Input">
                        <source xsi:type="ocl:VariableExp" location="404:59-404:60" referredVariable="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.2/@source/@iterators.0"/>
                      </source>
                    </source>
                    <arguments xsi:type="ocl:IntegerExp" location="404:76-404:77" integerSymbol="1"/>
                  </body>
                  <iterators location="404:55-404:56" varName="e" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.2/@source/@body/@source/@source/@source"/>
                </source>
                <body xsi:type="ocl:OperationCallExp" location="404:95-404:127" operationName="resolveTemp">
                  <source xsi:type="ocl:VariableExp" location="404:95-404:105" referredVariable="/50"/>
                  <arguments xsi:type="ocl:VariableExp" location="404:118-404:119" referredVariable="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.2/@iterators.0"/>
                  <arguments xsi:type="ocl:StringExp" location="404:121-404:126" stringSymbol="inp"/>
                </body>
                <iterators location="404:91-404:92" varName="e" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.2/@body/@arguments.0"/>
              </elements>
              <elements xsi:type="ocl:IteratorExp" location="405:4-405:130" name="collect">
                <source xsi:type="ocl:IteratorExp" location="405:4-405:79" name="select">
                  <source xsi:type="ocl:OperationCallExp" location="405:4-405:43" operationName="allInstances">
                    <source xsi:type="ocl:OclModelElement" location="405:4-405:28" name="ServiceFunctionality" model="/2"/>
                  </source>
                  <body xsi:type="ocl:OperatorCallExp" location="405:59-405:78" operationName=">">
                    <source xsi:type="ocl:OperationCallExp" location="405:59-405:74" operationName="size">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="405:59-405:67" name="Output">
                        <source xsi:type="ocl:VariableExp" location="405:59-405:60" referredVariable="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.3/@source/@iterators.0"/>
                      </source>
                    </source>
                    <arguments xsi:type="ocl:IntegerExp" location="405:77-405:78" integerSymbol="1"/>
                  </body>
                  <iterators location="405:55-405:56" varName="e" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.3/@source/@body/@source/@source/@source"/>
                </source>
                <body xsi:type="ocl:OperationCallExp" location="405:96-405:128" operationName="resolveTemp">
                  <source xsi:type="ocl:VariableExp" location="405:96-405:106" referredVariable="/51"/>
                  <arguments xsi:type="ocl:VariableExp" location="405:119-405:120" referredVariable="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.3/@iterators.0"/>
                  <arguments xsi:type="ocl:StringExp" location="405:122-405:127" stringSymbol="out"/>
                </body>
                <iterators location="405:92-405:93" varName="e" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.3/@body/@arguments.0"/>
              </elements>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="408:2-411:3" varName="interfaces" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.2/@value">
          <type xsi:type="ocl:OclModelElement" location="408:15-408:28" name="Interface" model="/1"/>
          <bindings location="409:3-409:31" propertyName="ElName">
            <value xsi:type="ocl:OperatorCallExp" location="409:13-409:31" operationName="+">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="409:13-409:19" name="name">
                <source xsi:type="ocl:VariableExp" location="409:13-409:14" referredVariable="/0/@elements.26/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:StringExp" location="409:22-409:31" stringSymbol="Service"/>
            </value>
          </bindings>
          <bindings location="410:3-410:88" propertyName="cmpOperation">
            <value xsi:type="ocl:IteratorExp" location="410:19-410:88" name="collect">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="410:19-410:34" name="Functionality">
                <source xsi:type="ocl:VariableExp" location="410:19-410:20" referredVariable="/0/@elements.26/@inPattern/@elements.0"/>
              </source>
              <body xsi:type="ocl:OperationCallExp" location="410:50-410:86" operationName="resolveTemp">
                <source xsi:type="ocl:VariableExp" location="410:50-410:60" referredVariable="/52"/>
                <arguments xsi:type="ocl:VariableExp" location="410:73-410:74" referredVariable="/0/@elements.26/@outPattern/@elements.1/@bindings.1/@value/@iterators.0"/>
                <arguments xsi:type="ocl:StringExp" location="410:76-410:85" stringSymbol="outOper"/>
              </body>
              <iterators location="410:46-410:47" varName="e" variableExp="/0/@elements.26/@outPattern/@elements.1/@bindings.1/@value/@body/@arguments.0"/>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="412:2-414:3" varName="type1" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.1/@value/@elements.0">
          <type xsi:type="ocl:OclModelElement" location="412:10-412:24" name="SdlInteger" model="/1"/>
          <bindings location="413:5-413:24" propertyName="ElName">
            <value xsi:type="ocl:StringExp" location="413:15-413:24" stringSymbol="Integer"/>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="415:2-417:3" varName="type2" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.1/@value/@elements.1">
          <type xsi:type="ocl:OclModelElement" location="415:10-415:24" name="SdlBoolean" model="/1"/>
          <bindings location="416:5-416:24" propertyName="ElName">
            <value xsi:type="ocl:StringExp" location="416:15-416:24" stringSymbol="Boolean"/>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="418:2-420:3" varName="type3" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.1/@value/@elements.2">
          <type xsi:type="ocl:OclModelElement" location="418:10-418:21" name="SdlReal" model="/1"/>
          <bindings location="419:5-419:21" propertyName="ElName">
            <value xsi:type="ocl:StringExp" location="419:15-419:21" stringSymbol="Real"/>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="421:2-423:3" varName="type4" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.1/@value/@elements.3">
          <type xsi:type="ocl:OclModelElement" location="421:10-421:23" name="SdlString" model="/1"/>
          <bindings location="422:5-422:23" propertyName="ElName">
            <value xsi:type="ocl:StringExp" location="422:15-422:23" stringSymbol="String"/>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="424:2-426:3" varName="type5" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.1/@value/@elements.4">
          <type xsi:type="ocl:OclModelElement" location="424:10-424:25" name="SdlDateTime" model="/1"/>
          <bindings location="425:5-425:25" propertyName="ElName">
            <value xsi:type="ocl:StringExp" location="425:15-425:25" stringSymbol="DateTime"/>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="427:2-429:3" varName="type6" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.1/@value/@elements.5">
          <type xsi:type="ocl:OclModelElement" location="427:10-427:20" name="SdlUri" model="/1"/>
          <bindings location="428:5-428:20" propertyName="ElName">
            <value xsi:type="ocl:StringExp" location="428:15-428:20" stringSymbol="Uri"/>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="396:2-396:29">
        <elements xsi:type="atl:SimpleInPatternElement" location="396:7-396:29" varName="e" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.26/@outPattern/@elements.1/@bindings.0/@value/@source/@source /0/@elements.26/@outPattern/@elements.1/@bindings.1/@value/@source/@source">
          <type xsi:type="ocl:OclModelElement" location="396:11-396:29" name="ServiceProfile" model="/2"/>
        </elements>
      </inPattern>
    </elements>
  </atl:Module>
  <ocl:OclModel location="2:14-2:17" name="SDL" elements="/0/@elements.15/@outPattern/@elements.0/@type /0/@elements.15/@outPattern/@elements.1/@type /0/@elements.15/@outPattern/@elements.2/@type /0/@elements.15/@outPattern/@elements.3/@type /0/@elements.16/@outPattern/@elements.0/@type /0/@elements.16/@outPattern/@elements.1/@type /0/@elements.16/@outPattern/@elements.2/@type /0/@elements.16/@outPattern/@elements.3/@type /0/@elements.17/@outPattern/@elements.0/@type /0/@elements.18/@outPattern/@elements.0/@type /0/@elements.19/@outPattern/@elements.0/@type /0/@elements.20/@outPattern/@elements.0/@type /0/@elements.20/@outPattern/@elements.1/@type /0/@elements.21/@outPattern/@elements.0/@type /0/@elements.21/@outPattern/@elements.1/@type /0/@elements.22/@outPattern/@elements.0/@type /0/@elements.23/@outPattern/@elements.0/@type /0/@elements.23/@outPattern/@elements.1/@type /0/@elements.24/@outPattern/@elements.0/@type /0/@elements.24/@outPattern/@elements.1/@type /0/@elements.25/@outPattern/@elements.0/@type /0/@elements.25/@outPattern/@elements.1/@type /0/@elements.25/@outPattern/@elements.2/@type /0/@elements.26/@outPattern/@elements.0/@type /0/@elements.26/@outPattern/@elements.1/@type /0/@elements.26/@outPattern/@elements.2/@type /0/@elements.26/@outPattern/@elements.3/@type /0/@elements.26/@outPattern/@elements.4/@type /0/@elements.26/@outPattern/@elements.5/@type /0/@elements.26/@outPattern/@elements.6/@type /0/@elements.26/@outPattern/@elements.7/@type" model="/0/@outModels.0"/>
  <ocl:OclModel location="2:28-2:31" name="SSL" elements="/0/@elements.5/@definition/@feature/@returnType/@elementType /0/@elements.5/@definition/@feature/@body/@source/@source/@source/@source /0/@elements.6/@definition/@feature/@returnType/@elementType /0/@elements.6/@definition/@feature/@body/@source/@source/@source/@source /0/@elements.7/@definition/@feature/@parameters.0/@type /0/@elements.7/@definition/@feature/@body/@source/@source/@source/@source/@source /0/@elements.8/@definition/@feature/@parameters.0/@type /0/@elements.8/@definition/@feature/@body/@source/@source/@source/@source/@source /0/@elements.9/@definition/@feature/@returnType /0/@elements.9/@definition/@feature/@body/@source/@source/@source /0/@elements.14/@definition/@feature/@parameters.0/@type /0/@elements.14/@definition/@feature/@returnType/@elementType /0/@elements.14/@definition/@feature/@body/@source/@source/@elements.0/@source/@source /0/@elements.14/@definition/@feature/@body/@source/@source/@elements.1/@source/@source /0/@elements.15/@inPattern/@elements.0/@type /0/@elements.15/@inPattern/@filter/@source/@source/@source/@source /0/@elements.15/@variables.1/@type /0/@elements.15/@outPattern/@elements.3/@collection/@source/@source/@source /0/@elements.16/@inPattern/@elements.0/@type /0/@elements.16/@inPattern/@filter/@source/@source/@source/@source /0/@elements.16/@variables.1/@type /0/@elements.16/@outPattern/@elements.3/@collection/@source/@source/@source /0/@elements.17/@inPattern/@elements.0/@type /0/@elements.18/@inPattern/@elements.0/@type /0/@elements.18/@inPattern/@filter/@arguments.0/@source/@arguments.0 /0/@elements.19/@inPattern/@elements.0/@type /0/@elements.19/@inPattern/@filter/@arguments.0/@source/@arguments.0 /0/@elements.20/@inPattern/@elements.0/@type /0/@elements.20/@inPattern/@filter/@arguments.0/@arguments.0 /0/@elements.21/@inPattern/@elements.0/@type /0/@elements.21/@inPattern/@filter/@arguments.0/@arguments.0 /0/@elements.22/@inPattern/@elements.0/@type /0/@elements.23/@inPattern/@elements.0/@type /0/@elements.24/@inPattern/@elements.0/@type /0/@elements.25/@inPattern/@elements.0/@type /0/@elements.26/@inPattern/@elements.0/@type /0/@elements.26/@outPattern/@elements.0/@bindings.1/@value/@elements.6/@source /0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.0/@source/@source/@source /0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.1/@source/@source/@source /0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.2/@source/@source/@source /0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.3/@source/@source/@source" model="/0/@inModels.0"/>
  <ocl:OclModel location="2:39-2:42" name="ODM" elements="/0/@elements.2/@definition/@feature/@returnType/@elementType /0/@elements.2/@definition/@feature/@body/@source/@source/@source/@source /0/@elements.3/@definition/@feature/@parameters.0/@type /0/@elements.3/@definition/@feature/@returnType/@elementType /0/@elements.3/@definition/@feature/@body/@source/@arguments.0/@result/@type/@elementType /0/@elements.4/@definition/@feature/@parameters.0/@type /0/@elements.4/@definition/@feature/@returnType/@elementType /0/@elements.4/@definition/@feature/@body/@source/@source /0/@elements.10/@definition/@feature/@parameters.0/@type /0/@elements.10/@definition/@feature/@body/@condition/@arguments.0 /0/@elements.13/@definition/@feature/@parameters.0/@type/@elementType /0/@elements.15/@variables.0/@type/@elementType /0/@elements.16/@variables.0/@type/@elementType" model="/0/@inModels.1"/>
  <ocl:VariableDeclaration location="25:16-25:26" varName="thisModule" variableExp="/0/@elements.2/@definition/@feature/@body/@source/@body/@source"/>
  <ocl:VariableDeclaration location="33:13-33:23" varName="thisModule" variableExp="/0/@elements.3/@definition/@feature/@body/@source/@source/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="36:24-36:34" varName="thisModule" variableExp="/0/@elements.3/@definition/@feature/@body/@source/@arguments.0/@body/@source/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="86:3-86:13" varName="thisModule" variableExp="/0/@elements.10/@definition/@feature/@body/@thenExpression/@source"/>
  <ocl:VariableDeclaration location="87:4-87:14" varName="thisModule" variableExp="/0/@elements.10/@definition/@feature/@body/@thenExpression/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="88:7-88:17" varName="thisModule" variableExp="/0/@elements.10/@definition/@feature/@body/@elseExpression/@source"/>
  <ocl:VariableDeclaration location="166:4-166:14" varName="thisModule" variableExp="/0/@elements.15/@variables.0/@initExpression/@source"/>
  <ocl:VariableDeclaration location="166:42-166:52" varName="thisModule" variableExp="/0/@elements.15/@variables.0/@initExpression/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="167:37-167:47" varName="thisModule" variableExp="/0/@elements.15/@variables.1/@initExpression/@source"/>
  <ocl:VariableDeclaration location="175:14-175:24" varName="thisModule" variableExp="/0/@elements.15/@outPattern/@elements.1/@bindings.1/@value/@source"/>
  <ocl:VariableDeclaration location="175:37-175:47" varName="thisModule" variableExp="/0/@elements.15/@outPattern/@elements.1/@bindings.1/@value/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="176:4-176:14" varName="thisModule" variableExp="/0/@elements.15/@outPattern/@elements.1/@bindings.1/@value/@arguments.1/@source"/>
  <ocl:VariableDeclaration location="179:42-179:52" varName="thisModule" variableExp="/0/@elements.15/@outPattern/@elements.2/@collection/@source"/>
  <ocl:VariableDeclaration location="180:13-180:23" varName="thisModule" variableExp="/0/@elements.15/@outPattern/@elements.2/@bindings.0/@value/@source"/>
  <ocl:VariableDeclaration location="181:14-181:24" varName="thisModule" variableExp="/0/@elements.15/@outPattern/@elements.2/@bindings.1/@value/@source"/>
  <ocl:VariableDeclaration location="181:37-181:47" varName="thisModule" variableExp="/0/@elements.15/@outPattern/@elements.2/@bindings.1/@value/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="182:4-182:14" varName="thisModule" variableExp="/0/@elements.15/@outPattern/@elements.2/@bindings.1/@value/@arguments.1/@source"/>
  <ocl:VariableDeclaration location="202:4-202:14" varName="thisModule" variableExp="/0/@elements.16/@variables.0/@initExpression/@source"/>
  <ocl:VariableDeclaration location="202:42-202:52" varName="thisModule" variableExp="/0/@elements.16/@variables.0/@initExpression/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="203:38-203:48" varName="thisModule" variableExp="/0/@elements.16/@variables.1/@initExpression/@source"/>
  <ocl:VariableDeclaration location="211:14-211:24" varName="thisModule" variableExp="/0/@elements.16/@outPattern/@elements.1/@bindings.1/@value/@source"/>
  <ocl:VariableDeclaration location="211:37-211:47" varName="thisModule" variableExp="/0/@elements.16/@outPattern/@elements.1/@bindings.1/@value/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="212:4-212:14" varName="thisModule" variableExp="/0/@elements.16/@outPattern/@elements.1/@bindings.1/@value/@arguments.1/@source"/>
  <ocl:VariableDeclaration location="215:43-215:53" varName="thisModule" variableExp="/0/@elements.16/@outPattern/@elements.2/@collection/@source"/>
  <ocl:VariableDeclaration location="216:13-216:23" varName="thisModule" variableExp="/0/@elements.16/@outPattern/@elements.2/@bindings.0/@value/@source"/>
  <ocl:VariableDeclaration location="217:14-217:24" varName="thisModule" variableExp="/0/@elements.16/@outPattern/@elements.2/@bindings.1/@value/@source"/>
  <ocl:VariableDeclaration location="217:37-217:47" varName="thisModule" variableExp="/0/@elements.16/@outPattern/@elements.2/@bindings.1/@value/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="218:4-218:14" varName="thisModule" variableExp="/0/@elements.16/@outPattern/@elements.2/@bindings.1/@value/@arguments.1/@source"/>
  <ocl:VariableDeclaration location="236:3-236:13" varName="thisModule" variableExp="/0/@elements.17/@inPattern/@filter/@source/@source/@source"/>
  <ocl:VariableDeclaration location="239:13-239:23" varName="thisModule" variableExp="/0/@elements.17/@outPattern/@elements.0/@bindings.0/@value/@source/@source/@source"/>
  <ocl:VariableDeclaration location="240:14-240:24" varName="thisModule" variableExp="/0/@elements.17/@outPattern/@elements.0/@bindings.1/@value/@source"/>
  <ocl:VariableDeclaration location="240:37-240:47" varName="thisModule" variableExp="/0/@elements.17/@outPattern/@elements.0/@bindings.1/@value/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="241:4-241:14" varName="thisModule" variableExp="/0/@elements.17/@outPattern/@elements.0/@bindings.1/@value/@arguments.1/@source"/>
  <ocl:VariableDeclaration location="241:39-241:49" varName="thisModule" variableExp="/0/@elements.17/@outPattern/@elements.0/@bindings.1/@value/@arguments.1/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="250:33-250:43" varName="thisModule" variableExp="/0/@elements.18/@inPattern/@filter/@source/@source/@source/@source"/>
  <ocl:VariableDeclaration location="261:34-261:44" varName="thisModule" variableExp="/0/@elements.19/@inPattern/@filter/@source/@source/@source/@source"/>
  <ocl:VariableDeclaration location="276:34-276:44" varName="thisModule" variableExp="/0/@elements.20/@inPattern/@filter/@source/@source/@source/@source"/>
  <ocl:VariableDeclaration location="291:35-291:45" varName="thisModule" variableExp="/0/@elements.21/@inPattern/@filter/@source/@source/@source/@source"/>
  <ocl:VariableDeclaration location="330:46-330:56" varName="thisModule" variableExp="/0/@elements.23/@outPattern/@elements.0/@bindings.1/@value/@elements.0/@body/@source"/>
  <ocl:VariableDeclaration location="352:28-352:38" varName="thisModule" variableExp="/0/@elements.24/@outPattern/@elements.0/@bindings.1/@value/@elements.0/@body/@source"/>
  <ocl:VariableDeclaration location="375:27-375:37" varName="thisModule" variableExp="/0/@elements.25/@outPattern/@elements.0/@bindings.1/@value/@elements.0/@body/@source"/>
  <ocl:VariableDeclaration location="381:28-381:38" varName="thisModule" variableExp="/0/@elements.25/@outPattern/@elements.1/@bindings.1/@value/@elements.0/@body/@source"/>
  <ocl:VariableDeclaration location="402:54-402:64" varName="thisModule" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.0/@source/@body/@source/@source/@source"/>
  <ocl:VariableDeclaration location="402:117-402:127" varName="thisModule" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.0/@body/@source"/>
  <ocl:VariableDeclaration location="403:55-403:65" varName="thisModule" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.1/@source/@body/@source/@source/@source"/>
  <ocl:VariableDeclaration location="403:119-403:129" varName="thisModule" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.1/@body/@source"/>
  <ocl:VariableDeclaration location="404:95-404:105" varName="thisModule" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.2/@body/@source"/>
  <ocl:VariableDeclaration location="405:96-405:106" varName="thisModule" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.3/@value/@elements.3/@body/@source"/>
  <ocl:VariableDeclaration location="410:50-410:60" varName="thisModule" variableExp="/0/@elements.26/@outPattern/@elements.1/@bindings.1/@value/@body/@source"/>
</xmi:XMI>
